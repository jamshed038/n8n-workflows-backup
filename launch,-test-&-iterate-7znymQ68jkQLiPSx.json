{"createdAt":"2025-08-18T10:46:19.095Z","updatedAt":"2025-08-18T10:46:40.000Z","id":"7znymQ68jkQLiPSx","name":"Launch, Test & Iterate","active":false,"isArchived":false,"nodes":[{"parameters":{"jsCode":"// Wrap each incoming item inside a `chatInput` key\nreturn items.map(item => {\n  return {\n    json: {\n      chatInput: item.json\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1616,560],"id":"58fa86ab-4547-4e2f-bfb6-c7cf5a13cc7d","name":"Wrap into chatInput3"},{"parameters":{"assignments":{"assignments":[{"id":"e7ee03ac-13e3-4fca-a7bc-57c8fc56dc42","name":"document_name","value":"={{ $node[\"Get a record2\"].json.id }}-Launch, Test & Iterate","type":"string"},{"id":"48a07ef2-ae46-4bfc-aa7e-d92a74ef46d6","name":"html_content","value":"={{ $json.data }}","type":"string"},{"id":"22b02fba-ba72-423a-b92f-1191a183a554","name":"drive_folder_id","value":"1BiKbvPhPUW_fD8TIGZSGvPYXAyI2vw61","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[3808,896],"id":"c46a46f7-6212-4aeb-a9e6-5e9b4f361565","name":"Prepare Upload Fields3","notesInFlow":true},{"parameters":{"method":"POST","url":"https://www.googleapis.com/upload/drive/v3/files","authentication":"predefinedCredentialType","nodeCredentialType":"googleDriveOAuth2Api","sendQuery":true,"queryParameters":{"parameters":[{"name":"uploadType","value":"multipart"},{"name":"supportsAllDrives","value":"true"}]},"sendBody":true,"contentType":"raw","rawContentType":"multipart/related; boundary=divider","body":"={{ $json.rawData }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4224,896],"id":"b14c0fd8-096c-4bcb-b01c-111858c579ca","name":"Upload to Google Docs3","notesInFlow":true,"credentials":{"googleDriveOAuth2Api":{"id":"RO1XYx2xtjvQILlF","name":"Jamshed's Drive account"}}},{"parameters":{"content":"# Markdown to HTML \n## Converts markdown-format SOP into styled HTML for Google Drive compatibility.\n\n# Build Google Docs Request\n## Sets file name, folder ID, and HTML content for Google Docs upload.\n\n# Multipart Builder \n## Formats HTML and metadata into multipart format for Drive upload with proper boundaries.\n\n# Upload to Google Docs \n## Uploads the formatted HTML to Google Drive as a new Google Doc inside a specific folder.\n\n#  Airtable Logging \n## Saves the generated document’s metadata and link in Airtable.\n\n\n\n\n","height":1104,"width":2144,"color":7},"type":"n8n-nodes-base.stickyNote","position":[3264,144],"typeVersion":1,"id":"9736d19f-39e0-43cd-9d85-ab0dd48f8f34","name":"Sticky Note12"},{"parameters":{"mode":"markdownToHtml","markdown":"={{ $json.output }}","options":{}},"type":"n8n-nodes-base.markdown","typeVersion":1,"position":[3584,896],"id":"fe547586-5363-451e-8383-a77c235b32c6","name":"Markdown3"},{"parameters":{"content":"# Edit Fields\t\n## Set Static JSON Input — Provides sample organization and program data for the workflow to test against.\n\n# Code\t\n## Wrap into chatInput — Wraps incoming data under chatInput to match Langchain agent's expected structure.","height":1072,"width":1424},"type":"n8n-nodes-base.stickyNote","position":[544,160],"typeVersion":1,"id":"c1696bc1-9958-4704-bb91-cbd91b0322ea","name":"Sticky Note13"},{"parameters":{"content":" # Launch, Test & Iterate AGENT\n## Generates SOP with 4 customized sections using the input data and system prompt.","height":1088,"width":1056,"color":6},"type":"n8n-nodes-base.stickyNote","position":[2096,160],"typeVersion":1,"id":"a3dfdcff-bf28-4200-ac41-7c6c2e553f70","name":"Sticky Note14"},{"parameters":{"model":{"__rl":true,"value":"gpt-4","mode":"list","cachedResultName":"gpt-4"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2208,608],"id":"2bb8edae-26ad-4182-8255-4755a9b55933","name":"OpenAI Chat Model6","credentials":{"openAiApi":{"id":"5XQh1a8XZxauHGkS","name":"Precise-grant-api"}}},{"parameters":{"content":"\n\n# Launch, Test & Iterate\n","height":1616,"width":5616,"color":3},"type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1,"id":"aac38bc7-e073-431f-8dc5-8e3bd3297a1e","name":"Sticky Note15"},{"parameters":{"sessionIdType":"customKey","sessionKey":"=sop-document","tableName":"n8n_sop_document_histories"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[2336,576],"id":"a934e35e-0a0d-4706-8f34-736b8ea7707c","name":"SOP Document Memory3","credentials":{"postgres":{"id":"RVvoTUjJJ1ESHsVt","name":"Precise-grant"}}},{"parameters":{"description":"=Your Work is to fetch the tone of content which you get from the pinecone Vector Store.","topK":"=40"},"type":"@n8n/n8n-nodes-langchain.toolVectorStore","typeVersion":1.1,"position":[2560,608],"id":"c2699ea0-96a6-4a3e-b1ab-67fa83b531d2","name":"RAGTOOL3"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2864,848],"id":"9354607c-4833-4ecc-bbe4-de3efdb1cdc0","name":"OpenAI Chat Model7"},{"parameters":{"pineconeIndex":{"__rl":true,"value":"precise-grants-n8n","mode":"list","cachedResultName":"precise-grants-n8n"},"options":{"pineconeNamespace":"Launch_Test_and_Iterate (Output Doc).docx"}},"type":"@n8n/n8n-nodes-langchain.vectorStorePinecone","typeVersion":1.3,"position":[2496,864],"id":"6f2774c1-3db5-4fa1-b82c-7459ed6c39f4","name":"Pinecone Vector Store2"},{"parameters":{"model":"text-embedding-3-large","options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[2496,1072],"id":"8cd2faa2-9725-4161-8ac0-a6ed70ff5d7a","name":"Embeddings OpenAI2"},{"parameters":{"jsCode":"const input = $json.output;\n\n// Dynamically remove the first paragraph that mentions \"tone\" or \"style\" and is followed by SOP content\nconst cleanedOutput = input.replace(\n  /^(.*?(tone|style)[\\s\\S]*?)(?=^# Standard Operating Procedure|^## Standard Operating Procedure|^---\\n# Standard Operating Procedure)/im,\n  ''\n);\n\nreturn {\n  json: {\n    output: cleanedOutput.trim()\n  }\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2560,336],"id":"2678d03e-7a00-4bff-8053-0276a97a166e","name":"Code2"},{"parameters":{"jsCode":"const boundary = 'divider';\nconst docName = $input.first().json.document_name;\nconst folderId = $input.first().json.drive_folder_id;\nconst htmlContent = $input.first().json.html_content || '';\n\n// 1) Extract only inner <body>\nconst bodyMatch = htmlContent.match(/<body[^>]*>([\\s\\S]*?)<\\/body>/i);\nlet cleanHtmlContent = bodyMatch ? bodyMatch[1] : htmlContent;\n\n// 2) Remove outer doc bits\ncleanHtmlContent = cleanHtmlContent\n  .replace(/<!DOCTYPE[^>]*>/gi, '')\n  .replace(/<\\/?(html|head|body)[^>]*>/gi, '');\n\n// 3) Kill page-break CSS everywhere (style blocks + inline)\ncleanHtmlContent = cleanHtmlContent\n  .replace(/page-break-(before|after)\\s*:\\s*always\\s*;?/gi, '')\n  .replace(/(<style[^>]*>)([\\s\\S]*?)(<\\/style>)/gi, (m, open, css, close) => {\n    const fixed = css.replace(/page-break-(before|after)\\s*:\\s*always\\s*;?/gi, '');\n    return open + fixed + close;\n  });\n\n// 4) Unwrap common page wrappers\ncleanHtmlContent = cleanHtmlContent\n  .replace(/<div\\s+class=[\"']page[\"'][^>]*>/gi, '')\n  .replace(/<\\/div>\\s*$/i, '')\n  .replace(/<\\/div>(?=\\s*<div\\s+class=[\"']page[\"'])/gi, '');\n\n// 5) Remove hard page-break elements\ncleanHtmlContent = cleanHtmlContent\n  .replace(/<hr[^>]*style=[\"'][^\"']*page-break-[^\"']*[\"'][^>]*>/gi, '')\n  .replace(/<div[^>]*style=[\"'][^\"']*page-break-[^\"']*[\"'][^>]*>\\s*<\\/div>/gi, '');\n\n// 6) Strip leading/trailing empties\nconst stripEmptyEdges = (s) =>\n  s\n    .replace(/^(?:\\s|&nbsp;|<p>\\s*<\\/p>|<br\\s*\\/?>)+/i, '')\n    .replace(/(?:\\s|&nbsp;|<p>\\s*<\\/p>|<br\\s*\\/?>)+$/i, '');\ncleanHtmlContent = stripEmptyEdges(cleanHtmlContent);\n\n// 7) Normalize section headings\ncleanHtmlContent = cleanHtmlContent.replace(\n  /<p>\\s*(?:<strong>|<b>)\\s*(\\d+)\\.\\s*([^<]+?)\\s*(?:<\\/strong>|<\\/b>)\\s*<\\/p>/gi,\n  '<h2>$1. $2</h2>'\n);\ncleanHtmlContent = cleanHtmlContent.replace(\n  /<p>\\s*(?:<strong>|<b>)\\s*([^<]{3,})\\s*(?:<\\/strong>|<\\/b>)\\s*<\\/p>/gi,\n  '<h2>$1</h2>'\n);\ncleanHtmlContent = cleanHtmlContent.replace(/<h3\\b[^>]*>/gi, '<h2>').replace(/<\\/h3>/gi, '</h2>');\n\n// 8) Title replacement for: LAUNCH, TEST & ITERATE\n//    Be forgiving: allow commas, whitespace, &nbsp;, or small tags between words.\nconst titleCore =\n  'LAUNCH(?:\\\\s|&nbsp;|,|<[^>]*>)*TEST(?:\\\\s|&nbsp;|,|<[^>]*>)*&(?:amp;)?(?:\\\\s|&nbsp;|,|<[^>]*>)*ITERATE';\n\nconst h1TitlePattern = new RegExp(`<h1[^>]*>[\\\\s\\\\S]*?${titleCore}[\\\\s\\\\S]*?<\\\\/h1>`, 'i');\nconst titlePattern   = new RegExp(titleCore, 'i');\n\nconst titleReplacement =\n  '<h1 style=\"font-size:28pt; color:#1155cc; font-weight:700; text-align:center; margin:0 0 12px 0;\">LAUNCH, TEST &amp; ITERATE</h1>';\n\nlet didReplace = false;\nlet updatedHtmlContent = cleanHtmlContent;\n\nif (h1TitlePattern.test(updatedHtmlContent)) {\n  updatedHtmlContent = updatedHtmlContent.replace(h1TitlePattern, titleReplacement);\n  didReplace = true;\n} else if (titlePattern.test(updatedHtmlContent)) {\n  updatedHtmlContent = updatedHtmlContent.replace(titlePattern, titleReplacement);\n  didReplace = true;\n}\n\n// If we didn't find the title at all, PREPEND it at the top.\nif (!didReplace) {\n  updatedHtmlContent = titleReplacement + '\\n' + updatedHtmlContent;\n}\n\nupdatedHtmlContent = stripEmptyEdges(updatedHtmlContent);\n\n// 9) Enforce consistent look on ALL <h2>\nupdatedHtmlContent = updatedHtmlContent\n  .replace(/<h2\\b[^>]*>/gi, '<h2 style=\"font-size:13pt; font-weight:700; color:#1155cc; margin:12px 0 6px 0;\">');\n\n// 10) Wrapper + light resets\nconst htmlWithStyles = `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <style>\n    html, body { margin: 0; padding: 0; }\n    body { font-family: Calibri, sans-serif; font-size: 11pt; color: #000000; }\n    h1 { font-size: 24pt; color: #1155cc; font-weight: 700; margin: 0 0 8px 0; }\n    p { margin: 0 0 6px 0; }\n    ul { margin: 4px 0 6px 20px; }\n    table { border-collapse: collapse; width: 100%; margin-top: 6px; }\n    td, th { border: 1px solid black; padding: 6px; }\n    .page { padding: 0 !important; page-break-before: auto !important; page-break-after: auto !important; }\n  </style>\n</head>\n<body>\n${updatedHtmlContent}\n</body>\n</html>\n`;\n\n// Google Docs upload metadata\nconst metadata = JSON.stringify({\n  name: docName,\n  mimeType: \"application/vnd.google-apps.document\",\n  parents: [folderId]\n});\n\n// Build multipart body (CRLF)\nlet body = `--${boundary}\\r\\n`;\nbody += `Content-Type: application/json; charset=UTF-8\\r\\n\\r\\n`;\nbody += `${metadata}\\r\\n`;\nbody += `--${boundary}\\r\\n`;\nbody += `Content-Type: text/html; charset=UTF-8\\r\\n\\r\\n`;\nbody += `${htmlWithStyles}\\r\\n`;\nbody += `--${boundary}--\\r\\n`;\n\nreturn { rawData: body };\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4032,896],"id":"6ee41084-8441-45f5-be44-034e1d7d938a","name":"Build Google Docs Request2"},{"parameters":{"options":{"systemMessage":"=🛑 DO NOT START UNTIL THIS IS DONE:\n🚨 MANDATORY FIRST ACTION — USE RagTool\nAs your first and immediate step, you are required to call the RagTool to retrieve the tone, language, and formatting style of the document titled:\n\"Launch, Test and Iterate\"\nThis document is stored in Pinecone under the namespace: \"Launch, Test and Iterate\".\n\n❗ You must use this exact document as your tone/style guide before proceeding.\n❗ DO NOT begin generating the report output unless the RagTool is successfully used first and returns a reference document.\n❗ If RagTool is not available, you must halt and throw an error:\n\"RagTool not used — Cannot proceed without retrieving style reference document.\"\n\n🧠 Your Role:\nYou are an AI Agent tasked with generating a polished Build Your Brand & Monetize using structured intake data in JSON format.\n\nDOCUMENT STYLE REQUIREMENTS\n\nOnly section headers/headings must be in bold and blue (#1155cc), using HTML <h3> tags.\n\nBody text must use Calibri font and not bold.\n\nAdd a horizontal line (<hr />) after major sections.\n\nTASK INSTRUCTIONS\n\n🧠 JSON INPUT (STRUCTURED DATA)\nUse the following structured input values to populate the output:\n\n{\n  \"Program Pilot Description\": \"{{ $json.chatInput.Question1 }}\",\n  \"Planned Number of Participants\": \"{{ $json.chatInput.Question2 }}\",\n  \"Estimated Pilot Program Cost\": \"{{ $json.chatInput.Question3 }}\",\n  \"Pilot Launch Date\": \"{{ $json.chatInput.Question4 }}\",\n  \"Has Feedback Collection System\": \"{{ $json.chatInput.Question5 }}\",\n  \"30-Day Goals\": \"{{ $json.chatInput.Question6 }}\",\n  \"60-Day Goals\": \"{{ $json.chatInput.Question7 }}\",\n  \"90-Day Goals\": \"{{ $json.chatInput.Question8 }}\",\n  \"Wants Help Testing or Scaling Program\": \"{{ $json.chatInput.Question9 }}\",\n  \"Email\": \"{{ $json.chatInput.Question10 }}\"\n\n}\n\n📄 OUTPUT REQUIREMENTS\n\nFormatting Rules\n\n# Launch, Test and Iterate\n\nPilot Program Overview Instructions:  \nPROGRAM NAME: ________________________________\nPROGRAM DESCRIPTION:\nDescribe the program you're testing in your pilot. Include activities, target \naudience, and delivery format (in-person, virtual, hybrid).\nPLANNED LAUNCH DATE: ________________________________\nTARGET PARTICIPANT COUNT: ________________________________\n\n# Pilot Program Overview Output Final Sample:\nPilot Program Overview:\nPROGRAM NAME:\nDigital Skills Accelerator – Queens Women in Tech\n\nPROGRAM DESCRIPTION:\nA 6-week hybrid skills development and mentorship program designed for 20 women from immigrant and low-income backgrounds in Queens, New York, who have at least a high school diploma or GED and are not currently employed in full-time digital work. The program will include:\n- Weekly virtual workshops on digital literacy, social media marketing, and basic coding.\n- In-person networking meetups with local tech companies.\n- One-on-one mentorship with experienced female tech professionals.\n\nPLANNED LAUNCH DATE: October 15, 2025\n\nTARGET PARTICIPANT COUNT: 20 participants\n\n\n# Metrics & Measurement Plan Instructions:\nList the metrics you plan to track to measure your pilot’s success.\n- Attendance rate (%)\n- Participant satisfaction survey results\n- Pre/post knowledge improvement\n- Testimonials collected\n- Referral or sign-up for next cohort\n\nMetrics & Measurement Plan Sample Final Output:\nWe will track:\n- Attendance rate (%) for all sessions.\n- Participant satisfaction survey results (post-session & post-program).\n- Pre- and post-program skills assessment scores.\n- Number of testimonials collected (written & video).\n- Number of participants who apply for further training or employment within 3 months.\n\n# Feedback & Improvement System Instructions:\nDo you have a system to collect participant feedback? [  ] Yes   [  ] No\nIf yes, describe your method (e.g., Google Forms, verbal check-ins, QR \ncodes).\nUpload testimonials or survey results to use in reports, grant applications, \nand marketing materials\n\nFeedback & Improvement Sample Final Putput:\n☑ Yes — feedback system in place.\nMethod:\n- Post-session Google Form surveys (5 quick questions).\n- Anonymous QR code survey for candid responses.\n- End-of-program verbal focus group discussions.\n\nAll testimonials and survey data will be stored in Google Drive for use in final reporting, grant applications, and marketing materials.\n\n# 30/60/90 Day Action Plan Instructions:\n30-DAY GOALS:\n- Finalize pilot curriculum and schedule\n- Recruit and confirm pilot participants\n- Promote launch on social media and email list\nCustom: ___________________________________________________\n60-DAY GOALS:\n- Deliver pilot sessions\n- Collect weekly feedback from participants\n- Adjust curriculum as needed\nCustom: ___________________________________________________\n90-DAY GOALS:\n- Complete pilot and conduct final survey\n- Analyze results and testimonials\n- Create internal report and presentation for next round\nCustom: ___________________________________________________\n\n30/60/90 Day Action Plan Sample Final Output:\n30-DAY GOALS:\n- Finalize pilot curriculum and speaker lineup.\n- Recruit and confirm all participants via community partners.\n- Promote launch via social media, community boards, and newsletters.\n- Custom: Secure donated laptops for participants without devices.\n\n60-DAY GOALS:\n- Deliver weekly workshops and mentorship sessions.\n- Collect weekly feedback and monitor engagement.\n- Adjust workshop content based on participant needs.\n- Custom: Introduce bonus “career readiness” session with mock interviews.\n\n90-DAY GOALS:\n- Complete all program sessions and mentorship matches.\n- Conduct final survey and in-depth interviews with participants.\n- Analyze program data for strengths and improvement areas.\n- Create internal evaluation report and present findings to stakeholders.\n- Custom: Publish success stories on website and social media.\n\n#Pilot Review Snapshot (Post-Launch) Instructions\n- Total # of Participants Enrolled: _________\n- Completion Rate (%): _________\n- # of Positive Testimonials: _________\n- Summary of Key Learnings:\n   • What worked well:\n   • What needs improvement:\n   • What we’ll change next time:\n\n\nPilot Review Snapshot (Post-Launch)Pilot Review Snapshot (Post-Launch)\nFinal Sample Output:\n- Total # of Participants Enrolled: 20\n- Completion Rate (%): 90%\n- # of Positive Testimonials: 16\nSummary of Key Learnings:\nWhat worked well:\n• Hands-on workshops kept engagement high.\n• One-on-one mentorship helped participants feel supported.\n• Networking events successfully connected participants with hiring managers.\nWhat needs improvement:\n• Need more technical depth in coding sessions.\n• Evening sessions worked better than daytime for attendance.\nWhat we’ll change next time:\n• Include advanced coding options for interested participants.\n• Shift all sessions to evenings or weekends to boost participation.\n\n\n\n\n📌 MANDATORY OUTPUT RULE — USE BELOW HTML CODE BELOW FOR THE FINAL OUTPUT\n- As your final step, you must create the output following 100% this HTML.\n- You are not allowed to return plain text outside of the HTML.\n- Generate PG Smart Systems and Other input content dynamically depending on the quality of the input.\n- Keep the order and section names exactly as in the template — no extra or missing sections.\n- The document must strictly match the \"HTML Output Template\" provided below.\n- MANDATORY TO GIVE HTML CODE IN OUTPUT \n- Analyze the complete input and generate a full dataset for the heading \"Pilot Review Snapshot\". The output must include:\nTotal # of Participants Enrolled: _________\nCompletion Rate (%): _________\n# of Positive Testimonials: _________\nSummary of Key Learnings:\n• What worked well: _________\n• What needs improvement: _________\n• What we’ll change next time: _________\n\n\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Launch, Test & Iterate</title>\n<style>\n  body {\n    font-family: \"Times New Roman\", serif;\n    font-size: 12pt;\n    color: #000;\n    margin: 1in;\n    line-height: 1.4;\n  }\n  h1 {\n    font-size: 28pt;\n    color: #1155cc;\n    font-weight: 700;\n    text-align: center;\n    margin: 0 0 12px 0;\n  }\n  h2 {\n    font-weight: bold;\n    text-align: center;\n    margin-bottom: 1em;\n  }\n  p {\n    margin: 0.2em 0;\n  }\n  ul {\n    margin: 0.2em 0 0.2em 1.2em;\n  }\n  .section {\n    margin-bottom: 1em;\n  }\n</style>\n</head>\n<body>\n\n<h1>Launch, Test &amp; Iterate</h1>\n\n<h2>1. Pilot Program Overview</h2>\n<p><strong>PROGRAM NAME:</strong> 6-Week Entrepreneurship Bootcamp for Small Business Owners</p>\n<p><strong>PROGRAM DESCRIPTION:</strong> We are launching a 6-week entrepreneurship bootcamp for 15 aspiring small business owners in Chicago’s South Side. Each week focuses on a core topic: business planning, marketing, financial literacy, legal setup, and pitching. Participants will complete a business plan and present it at a final pitch event with local investors. We’ll track attendance, assess business plan quality, and collect feedback after each session via Google Forms.</p>\n<p><strong>PLANNED LAUNCH DATE:</strong> March 15, 2026</p>\n<p><strong>TARGET PARTICIPANT COUNT:</strong> 15 participants</p>\n\n<h2>2. Metrics & Measurement Plan</h2>\n<p>We will track:</p>\n<ul>\n  <li>Attendance rate (%) for all sessions.</li>\n  <li>Participant satisfaction survey results (post-session & post-program).</li>\n  <li>Quality of business plans.</li>\n</ul>\n\n<h2>3. Feedback & Improvement System</h2>\n<p><strong>☑ Yes — feedback system in place.</strong></p>\n<p><strong>Method:</strong></p>\n<ul>\n  <li>Post-session Google Form surveys.</li>\n</ul>\n<p>All testimonials and survey data will be stored in Google Drive for use in final reporting, grant applications, and marketing materials.</p>\n\n<h2>4. 30/60/90 Day Action Plan</h2>\n<p><strong>30-DAY GOALS:</strong></p>\n<ul>\n  <li>Recruit 15 participants from local community centers and online ads.</li>\n  <li>Finalize bootcamp curriculum.</li>\n  <li>Secure 3 guest speakers from the local business community.</li>\n</ul>\n\n<p><strong>60-DAY GOALS:</strong></p>\n<ul>\n  <li>Host final pitch event with at least 10 investors present.</li>\n  <li>Help at least 5 participants register their business legally.</li>\n  <li>Submit 2 grant applications for program expansion.</li>\n</ul>\n\n<p><strong>90-DAY GOALS:</strong></p>\n<ul>\n  <li>Host final pitch event with at least 10 investors present.</li>\n  <li>Help at least 5 participants register their business legally.</li>\n  <li>Submit 2 grant applications for program expansion.</li>\n</ul>\n\n<h2>5. Pilot Review Snapshot (Post-Launch)</h2>\n<p><strong>Total # of Participants Enrolled:</strong> To be determined</p>\n<p><strong>Completion Rate (%):</strong> To be determined</p>\n<p><strong># of Positive Testimonials:</strong> To be determined</p>\n\n<p><strong>Summary of Key Learnings:</strong></p>\n<p><strong>What worked well:</strong></p>\n<ul>\n  <li>To be determined</li>\n</ul>\n\n<p><strong>What needs improvement:</strong></p>\n<ul>\n  <li>To be determined</li>\n</ul>\n\n<p><strong>What we’ll change next time:</strong></p>\n<ul>\n  <li>To be determined</li>\n</ul>\n\n</body>\n</html>\n\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[2208,336],"id":"aa0c1824-e8bf-4248-8335-d6b7a8645cb0","name":"Launch, Test & Iterate"},{"parameters":{"base":{"__rl":true,"value":"appKmOMoTZqvMAXNT","mode":"list","cachedResultName":"Precise-Grants","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT"},"table":{"__rl":true,"value":"tblghpffpoOvWmUnr","mode":"list","cachedResultName":"Stage3-Build-your-brand-monetize","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT/tblghpffpoOvWmUnr"},"id":"={{ $json.body.record_id }}","options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[1360,560],"id":"c18bf285-f6cc-44e5-a324-bc9322204a69","name":"Get a record2","credentials":{"airtableTokenApi":{"id":"T9wFFI0zQyNKM6on","name":"Jamshed's Airtable"}}},{"parameters":{"operation":"update","base":{"__rl":true,"value":"appKmOMoTZqvMAXNT","mode":"list","cachedResultName":"Precise-Grants","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT"},"table":{"__rl":true,"value":"tbl55OUpNfqnNWtw2","mode":"list","cachedResultName":"Stage4-Launch-Test-Iterate","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT/tbl55OUpNfqnNWtw2"},"columns":{"mappingMode":"defineBelow","value":{"Generated Doc Link":"={{ $json[\"document-link\"] }}","RecordId":"={{ $('Webhook').item.json.body.record_id }}"},"matchingColumns":["RecordId"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"string","readOnly":true,"removed":true},{"id":"RecordId","displayName":"RecordId","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":false},{"id":"Id","displayName":"Id","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":true},{"id":"Generated Doc Link","displayName":"Generated Doc Link","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Question1","displayName":"Question1","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question2","displayName":"Question2","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question3","displayName":"Question3","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question4","displayName":"Question4","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question5","displayName":"Question5","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question6","displayName":"Question6","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question7","displayName":"Question7","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question8","displayName":"Question8","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question9","displayName":"Question9","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question10","displayName":"Question10","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[5152,896],"id":"5ef6098c-fa1d-443a-942d-02dcfafeafbe","name":"Airtable Logging3","credentials":{"airtableTokenApi":{"id":"T9wFFI0zQyNKM6on","name":"Jamshed's Airtable"}}},{"parameters":{"httpMethod":"POST","path":"b55cc48c-d0c9-4f10-9877-d06545ea37d7","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[1104,560],"id":"b25860b3-e974-439e-ba41-ebcd993472da","name":"Webhook","webhookId":"b55cc48c-d0c9-4f10-9877-d06545ea37d7"},{"parameters":{"method":"POST","url":"=https://docs.googleapis.com/v1/documents/{{ $json.id }}:batchUpdate","authentication":"predefinedCredentialType","nodeCredentialType":"googleDocsOAuth2Api","sendBody":true,"specifyBody":"json","jsonBody":"{\n  \"requests\": [\n    {\n      \"createHeader\": {\n        \"type\": \"DEFAULT\"\n      }\n    },\n    {\n      \"createFooter\": {\n        \"type\": \"DEFAULT\"\n      }\n    }\n  ]\n}\n","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4432,896],"id":"9c3193cd-42c0-49e0-b2f0-332ddc1b5884","name":"Making Header and Footer in that GDOC to put header and footer images","credentials":{"googleDocsOAuth2Api":{"id":"bJ0fWqhPY7867Lfi","name":"Jamshed-google-doc"}}},{"parameters":{"method":"POST","url":"=https://docs.googleapis.com/v1/documents/{{ $json.documentId }}:batchUpdate","authentication":"predefinedCredentialType","nodeCredentialType":"googleDocsOAuth2Api","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"requests\": [\n    {\n      \"insertInlineImage\": {\n        \"uri\": \"https://drive.google.com/uc?export=view&id=13DEgh4OtwmSbs9irkQ4J0YGODB5_AcIH\",\n        \"location\": {\n          \"segmentId\": \"{{ $json.replies[0].createHeader.headerId }}\",\n          \"index\": 0\n        },\n        \"objectSize\": {\n          \"height\": {\n            \"magnitude\": 100,\n            \"unit\": \"PT\"\n          },\n          \"width\": {\n            \"magnitude\": 468,\n            \"unit\": \"PT\"\n          }\n        }\n      }\n    }\n  ]\n}\n","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4656,896],"id":"37cc9030-aa38-4ef5-922f-8d1bab13f26f","name":"Putting images into header and footer","credentials":{"googleDocsOAuth2Api":{"id":"bJ0fWqhPY7867Lfi","name":"Jamshed-google-doc"}}},{"parameters":{"assignments":{"assignments":[{"id":"83e667ea-a929-4170-afda-b71b1b94646e","name":"document-link","value":"=https://docs.google.com/document/d/{{ $json.documentId }}/edit?tab=t.0","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[4896,896],"id":"a6119d87-21b8-40b1-a4c3-0f2d30b823cd","name":"Prepare Upload Fields","notesInFlow":true}],"connections":{"Wrap into chatInput3":{"main":[[{"node":"Launch, Test & Iterate","type":"main","index":0}]]},"Prepare Upload Fields3":{"main":[[{"node":"Build Google Docs Request2","type":"main","index":0}]]},"Upload to Google Docs3":{"main":[[{"node":"Making Header and Footer in that GDOC to put header and footer images","type":"main","index":0}]]},"Markdown3":{"main":[[{"node":"Prepare Upload Fields3","type":"main","index":0}]]},"OpenAI Chat Model6":{"ai_languageModel":[[{"node":"Launch, Test & Iterate","type":"ai_languageModel","index":0}]]},"RAGTOOL3":{"ai_tool":[[{"node":"Launch, Test & Iterate","type":"ai_tool","index":0}]]},"OpenAI Chat Model7":{"ai_languageModel":[[{"node":"RAGTOOL3","type":"ai_languageModel","index":0}]]},"Pinecone Vector Store2":{"ai_vectorStore":[[{"node":"RAGTOOL3","type":"ai_vectorStore","index":0}]]},"Embeddings OpenAI2":{"ai_embedding":[[{"node":"Pinecone Vector Store2","type":"ai_embedding","index":0}]]},"Code2":{"main":[[{"node":"Markdown3","type":"main","index":0}]]},"Build Google Docs Request2":{"main":[[{"node":"Upload to Google Docs3","type":"main","index":0}]]},"Launch, Test & Iterate":{"main":[[{"node":"Code2","type":"main","index":0}]]},"Get a record2":{"main":[[{"node":"Wrap into chatInput3","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"Get a record2","type":"main","index":0}]]},"Making Header and Footer in that GDOC to put header and footer images":{"main":[[{"node":"Putting images into header and footer","type":"main","index":0}]]},"Putting images into header and footer":{"main":[[{"node":"Prepare Upload Fields","type":"main","index":0}]]},"Prepare Upload Fields":{"main":[[{"node":"Airtable Logging3","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"cd8c6420-3e80-4c97-8681-655a64f274b9","triggerCount":0,"tags":[]}