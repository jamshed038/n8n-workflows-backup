{"createdAt":"2025-07-31T12:49:05.976Z","updatedAt":"2025-08-04T14:56:47.000Z","id":"LdT6btnKiUoRHvjJ","name":"Updated-Form-Based","active":true,"isArchived":false,"nodes":[{"parameters":{"jsCode":"// Wrap each incoming item inside a `chatInput` key\nreturn items.map(item => {\n  return {\n    json: {\n      chatInput: item.json\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1568,656],"id":"e44bd36d-5826-48e1-8443-3a2450c908cc","name":"Wrap into chatInput"},{"parameters":{"assignments":{"assignments":[{"id":"e7ee03ac-13e3-4fca-a7bc-57c8fc56dc42","name":"document_name","value":"=LEGAL FORMATION OUTPUT DOCUMENT","type":"string"},{"id":"48a07ef2-ae46-4bfc-aa7e-d92a74ef46d6","name":"html_content","value":"={{ $json.data }}","type":"string"},{"id":"22b02fba-ba72-423a-b92f-1191a183a554","name":"drive_folder_id","value":"1g5VR97sP3DjUPTbE4LzEdw27Hgb-JLa1","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[4080,816],"id":"2dfee626-64eb-4c42-9854-4fe90af6d65a","name":"Prepare Upload Fields","notesInFlow":true},{"parameters":{"method":"POST","url":"https://www.googleapis.com/upload/drive/v3/files","authentication":"predefinedCredentialType","nodeCredentialType":"googleDriveOAuth2Api","sendQuery":true,"queryParameters":{"parameters":[{"name":"uploadType","value":"multipart"},{"name":"supportsAllDrives","value":"true"}]},"sendBody":true,"contentType":"raw","rawContentType":"multipart/related; boundary=divider","body":"={{ $json.rawData }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4496,816],"id":"95238fbc-5124-4dc3-97b7-9dd782c3d1de","name":"Upload to Google Docs","notesInFlow":true,"credentials":{"googleDriveOAuth2Api":{"id":"RO1XYx2xtjvQILlF","name":"Jamshed's Drive account"}}},{"parameters":{"content":"# Markdown to HTML \n## Converts markdown-format SOP into styled HTML for Google Drive compatibility.\n\n# Build Google Docs Request\n## Sets file name, folder ID, and HTML content for Google Docs upload.\n\n# Multipart Builder \n## Formats HTML and metadata into multipart format for Drive upload with proper boundaries.\n\n# Upload to Google Docs \n## Uploads the formatted HTML to Google Drive as a new Google Doc inside a specific folder.\n\n#  Airtable Logging \n## Saves the generated document’s metadata and link in Airtable.\n\n\n\n\n","height":1104,"width":1616,"color":7},"type":"n8n-nodes-base.stickyNote","position":[3264,144],"typeVersion":1,"id":"880eae68-517b-4895-a867-4cdb17d6520c","name":"Sticky Note2"},{"parameters":{"mode":"markdownToHtml","markdown":"={{ $json.output }}","options":{}},"type":"n8n-nodes-base.markdown","typeVersion":1,"position":[3872,816],"id":"73c74cb1-3115-4870-89ca-f9773b7b16e9","name":"Markdown2"},{"parameters":{"content":"# Edit Fields\t\n## Set Static JSON Input — Provides sample organization and program data for the workflow to test against.\n\n# Code\t\n## Wrap into chatInput — Wraps incoming data under chatInput to match Langchain agent's expected structure.","height":1072,"width":1424},"type":"n8n-nodes-base.stickyNote","position":[528,160],"typeVersion":1,"id":"deb8dd53-a0a3-49d9-8e47-e51dd24d084f","name":"Sticky Note3"},{"parameters":{"content":" # VISION VALIDATION & POSITIONING REPORT AGENT\n## Generates SOP with 4 customized sections using the input data and system prompt.","height":1088,"width":1008,"color":6},"type":"n8n-nodes-base.stickyNote","position":[2096,160],"typeVersion":1,"id":"8347d272-72f9-45fd-971c-79e0d72dc834","name":"Sticky Note4"},{"parameters":{"model":{"__rl":true,"value":"gpt-4","mode":"list","cachedResultName":"gpt-4"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2288,608],"id":"53d4ba05-e733-4baa-b2dd-64ed85df2a24","name":"OpenAI Chat Model3","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"content":"\n\n# VISION VALIDATION & POSITIONING REPORT\n","height":1616,"width":5136,"color":3},"type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1,"id":"bdc6604c-02f3-426a-9c57-e00f943f2c63","name":"Sticky Note"},{"parameters":{"sessionIdType":"customKey","sessionKey":"=sop-document","tableName":"n8n_sop_document_histories"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[2208,576],"id":"1fa64b4b-fdb7-4757-b0a1-352057c514e2","name":"SOP Document Memory","credentials":{"postgres":{"id":"RVvoTUjJJ1ESHsVt","name":"Precise-grant"}}},{"parameters":{"description":"=Your Work is to fetch the tone of content which you get from the pinecone Vector Store.","topK":"=40"},"type":"@n8n/n8n-nodes-langchain.toolVectorStore","typeVersion":1.1,"position":[2640,608],"id":"e4a1e4e3-62cf-4fd8-9619-d4f775f9fd25","name":"RAGTOOL"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2944,848],"id":"7913072b-03e6-4356-84ed-d0fbe5f54055","name":"OpenAI Chat Model2","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"pineconeIndex":{"__rl":true,"value":"clienttesting","mode":"list","cachedResultName":"clienttesting"},"options":{"pineconeNamespace":"Sample Documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStorePinecone","typeVersion":1.3,"position":[2576,864],"id":"c66a163a-d775-4115-aa64-e70c886b1a3b","name":"Pinecone Vector Store5","credentials":{"pineconeApi":{"id":"INUAJbteVgOCaL5J","name":"Jamshed's PineconeApi account "}}},{"parameters":{"model":"text-embedding-3-large","options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[2576,1072],"id":"59f3acc2-4eea-4142-b283-4fd7f2fa634d","name":"Embeddings OpenAI6","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"jsCode":"const input = $json.output;\n\n// Dynamically remove the first paragraph that mentions \"tone\" or \"style\" and is followed by SOP content\nconst cleanedOutput = input.replace(\n  /^(.*?(tone|style)[\\s\\S]*?)(?=^# Standard Operating Procedure|^## Standard Operating Procedure|^---\\n# Standard Operating Procedure)/im,\n  ''\n);\n\nreturn {\n  json: {\n    output: cleanedOutput.trim()\n  }\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2720,320],"id":"251186bc-8c87-4524-b4c5-2cea318b4f4c","name":"Code5"},{"parameters":{"jsCode":"const boundary = 'divider';\nconst docName = $input.first().json.document_name;\nconst folderId = $input.first().json.drive_folder_id;\nconst htmlContent = $input.first().json.html_content;\n\nfunction preserveLinksAndHeadings(html) {\n  let processedHtml = html;\n\n  // Fix <a> tags\n  processedHtml = processedHtml.replace(/<a\\s+href=[\"']([^\"']+)[\"'][^>]*>(.*?)<\\/a>/gi, '<a href=\"$1\">$2</a>');\n  processedHtml = processedHtml.replace(/<a\\s+href=[\"'](?!https?:\\/\\/|mailto:|tel:)([^\"']+)[\"']>/gi, '<a href=\"https://$1\">');\n\n  // ✅ Replace <strong> with inline-styled <h2> for blue color and no spacing\n  processedHtml = processedHtml.replace(/<strong>(.*?)<\\/strong>/gi, '<h2 style=\"color:#1155cc; margin:0;\">$1</h2>');\n\n  return processedHtml;\n}\n\nconst metadata = JSON.stringify({\n  name: docName,\n  mimeType: \"application/vnd.google-apps.document\",\n  parents: [folderId]\n});\n\nconst processedHtmlContent = preserveLinksAndHeadings(htmlContent);\n\nconst htmlWithStyles = `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <style>\n    body {\n      font-family: Calibri, sans-serif;\n      font-size: 11pt;\n      color: #000000;\n    }\n    p {\n      margin: 0;\n    }\n    h2 {\n      font-family: Calibri, sans-serif;\n      font-size: 13pt;\n      font-weight: bold;\n      margin: 0;\n    }\n    a {\n      color: #1155cc;\n      text-decoration: underline;\n    }\n  </style>\n</head>\n<body>\n  ${processedHtmlContent}\n</body>\n</html>\n`;\n\nlet body = `--${boundary}\\r\\n`;\nbody += `Content-Type: application/json; charset=UTF-8\\r\\n\\r\\n`;\nbody += `${metadata}\\r\\n`;\nbody += `--${boundary}\\r\\n`;\nbody += `Content-Type: text/html\\r\\n\\r\\n`;\nbody += `${htmlWithStyles}\\r\\n`;\nbody += `--${boundary}--\\r\\n`;\n\nreturn {\n  rawData: body\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4272,816],"id":"d7cd5177-0088-433d-b247-56000762f123","name":"Build Google Docs Request3"},{"parameters":{"operation":"update","base":{"__rl":true,"value":"appKmOMoTZqvMAXNT","mode":"list","cachedResultName":"Precise-Grants","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT"},"table":{"__rl":true,"value":"tblVsYwR8xmmrw797","mode":"list","cachedResultName":"Stage1-Validate-the-vision","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT/tblVsYwR8xmmrw797"},"columns":{"mappingMode":"defineBelow","value":{"Generated Doc Link":"=https://docs.google.com/document/d/{{ $json.id }}/edit?tab=t.0 ","RecordId":"={{ $('Webhook').item.json.body.record_id }}"},"matchingColumns":["RecordId"],"schema":[{"id":"RecordId","displayName":"RecordId","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":false},{"id":"Id","displayName":"Id","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":false},{"id":"Generated Doc Link","displayName":"Generated Doc Link","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Question1","displayName":"Question1","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question2","displayName":"Question2","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question3","displayName":"Question3","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question4","displayName":"Question4","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question5","displayName":"Question5","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question6","displayName":"Question6","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question7","displayName":"Question7","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question8","displayName":"Question8","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question9","displayName":"Question9","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question10","displayName":"Question10","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question11","displayName":"Question11","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[4720,816],"id":"af47b914-8efe-4524-b68c-2a718cb5788b","name":"Airtable Logging","credentials":{"airtableTokenApi":{"id":"c6IbQTcvLSXeD2At","name":"Client-Main-Precise-Grant"}}},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[912,6992],"id":"d3c80cc3-9cd1-4288-a308-11ab86ae90ce","name":"When clicking ‘Execute workflow’"},{"parameters":{"jsCode":"// Wrap each incoming item inside a `chatInput` key\nreturn items.map(item => {\n  return {\n    json: {\n      chatInput: item.json\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1808,2448],"id":"848704e3-dcd0-46d8-8914-e4465d74d8ec","name":"Wrap into chatInput1"},{"parameters":{"assignments":{"assignments":[{"id":"e7ee03ac-13e3-4fca-a7bc-57c8fc56dc42","name":"document_name","value":"=Legal Formation Output Document","type":"string"},{"id":"48a07ef2-ae46-4bfc-aa7e-d92a74ef46d6","name":"html_content","value":"={{ $json.data }}","type":"string"},{"id":"22b02fba-ba72-423a-b92f-1191a183a554","name":"drive_folder_id","value":"1g5VR97sP3DjUPTbE4LzEdw27Hgb-JLa1","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[3872,2720],"id":"0e7157f9-0961-431d-9b71-ffe473587211","name":"Prepare Upload Fields1","notesInFlow":true},{"parameters":{"method":"POST","url":"https://www.googleapis.com/upload/drive/v3/files","authentication":"predefinedCredentialType","nodeCredentialType":"googleDriveOAuth2Api","sendQuery":true,"queryParameters":{"parameters":[{"name":"uploadType","value":"multipart"},{"name":"supportsAllDrives","value":"true"}]},"sendBody":true,"contentType":"raw","rawContentType":"multipart/related; boundary=divider","body":"={{ $json.rawData }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4288,2720],"id":"076264e1-e3c7-4586-911d-218593411af0","name":"Upload to Google Docs1","notesInFlow":true,"credentials":{"googleDriveOAuth2Api":{"id":"RO1XYx2xtjvQILlF","name":"Jamshed's Drive account"}}},{"parameters":{"content":"# Markdown to HTML \n## Converts markdown-format SOP into styled HTML for Google Drive compatibility.\n\n# Build Google Docs Request\n## Sets file name, folder ID, and HTML content for Google Docs upload.\n\n# Multipart Builder \n## Formats HTML and metadata into multipart format for Drive upload with proper boundaries.\n\n# Upload to Google Docs \n## Uploads the formatted HTML to Google Drive as a new Google Doc inside a specific folder.\n\n#  Airtable Logging \n## Saves the generated document’s metadata and link in Airtable.\n\n\n\n\n","height":1104,"width":1616,"color":7},"type":"n8n-nodes-base.stickyNote","position":[3280,2048],"typeVersion":1,"id":"24841e56-1657-4dbb-8f60-a36b8079b417","name":"Sticky Note5"},{"parameters":{"mode":"markdownToHtml","markdown":"={{ $json.output }}","options":{}},"type":"n8n-nodes-base.markdown","typeVersion":1,"position":[3648,2720],"id":"ff4c7cd9-c60b-4fc5-a435-16778a41f370","name":"Markdown"},{"parameters":{"content":"# Edit Fields\t\n## Set Static JSON Input — Provides sample organization and program data for the workflow to test against.\n\n# Code\t\n## Wrap into chatInput — Wraps incoming data under chatInput to match Langchain agent's expected structure.","height":1072,"width":1424},"type":"n8n-nodes-base.stickyNote","position":[528,2064],"typeVersion":1,"id":"6ff4254c-cc10-42c8-9457-9b28c5cd9c16","name":"Sticky Note6"},{"parameters":{"content":" # Legal Formation Output Document AGENT\n## Generates SOP with 4 customized sections using the input data and system prompt.","height":1088,"width":1008,"color":6},"type":"n8n-nodes-base.stickyNote","position":[2096,2064],"typeVersion":1,"id":"9b418759-083c-4a8c-9ae8-4f17c0a8301d","name":"Sticky Note7"},{"parameters":{"model":{"__rl":true,"value":"gpt-4","mode":"list","cachedResultName":"gpt-4"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2160,2496],"id":"75a9b71b-6570-4a1e-928f-c1cbed325741","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"content":"\n\n# Legal Formation Output Document\n","height":1616,"width":5136,"color":3},"type":"n8n-nodes-base.stickyNote","position":[0,1904],"typeVersion":1,"id":"14a46cfa-eacb-49e8-b5e8-e91fbec73905","name":"Sticky Note1"},{"parameters":{"sessionIdType":"customKey","sessionKey":"=sop-document","tableName":"n8n_sop_document_histories"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[2288,2464],"id":"4d287071-145e-4aee-8db4-d9f8a2ef780a","name":"SOP Document Memory1","credentials":{"postgres":{"id":"RVvoTUjJJ1ESHsVt","name":"Precise-grant"}}},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2816,2736],"id":"7011d4c6-8107-4748-871f-33d252c36f29","name":"OpenAI Chat Model4","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"pineconeIndex":{"__rl":true,"value":"clienttesting","mode":"list","cachedResultName":"clienttesting"},"options":{"pineconeNamespace":"Sample Documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStorePinecone","typeVersion":1.3,"position":[2448,2752],"id":"6ea666ee-bf07-4a46-9068-9a3ffe3409f1","name":"Pinecone Vector Store","credentials":{"pineconeApi":{"id":"INUAJbteVgOCaL5J","name":"Jamshed's PineconeApi account "}}},{"parameters":{"model":"text-embedding-3-large","options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[2448,2960],"id":"48c34e1e-648e-49e8-83df-408fc163f2de","name":"Embeddings OpenAI","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"jsCode":"const input = $json.output;\n\n// Dynamically remove the first paragraph that mentions \"tone\" or \"style\" and is followed by SOP content\nconst cleanedOutput = input.replace(\n  /^(.*?(tone|style)[\\s\\S]*?)(?=^# Standard Operating Procedure|^## Standard Operating Procedure|^---\\n# Standard Operating Procedure)/im,\n  ''\n);\n\nreturn {\n  json: {\n    output: cleanedOutput.trim()\n  }\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2512,2224],"id":"fb9b0bb3-67d9-40fd-8da6-6b17baec56d7","name":"Code"},{"parameters":{"jsCode":"const boundary = 'divider';\nconst docName = $input.first().json.document_name;\nconst folderId = $input.first().json.drive_folder_id;\nconst htmlContent = $input.first().json.html_content;\nconst orgName = $input.first().json[\"Organization Name\"] || \"Organization\";\n\n// Optional: prepend org name at top (if needed)\nconst orgHeader = `\n  <p style=\"font-family:Calibri;\"><strong>Organization:</strong> ${orgName}</p>\n`;\n\n// Process HTML to ensure links are preserved\nfunction preserveLinks(htmlContent) {\n    let processedHtml = htmlContent;\n\n    // Fix incomplete or malformed anchor tags\n    processedHtml = processedHtml.replace(/<a\\s+href=[\"']([^\"']+)[\"'][^>]*>(.*?)<\\/a>/gi, '<a href=\"$1\">$2</a>');\n\n    // Ensure all links use proper protocols\n    processedHtml = processedHtml.replace(\n      /<a\\s+href=[\"'](?!https?:\\/\\/|mailto:|tel:)([^\"']+)[\"']>/gi,\n      '<a href=\"https://$1\">'\n    );\n\n    return processedHtml;\n}\n\nconst metadata = JSON.stringify({\n  name: docName,\n  mimeType: \"application/vnd.google-apps.document\",\n  parents: [folderId]\n});\n\nconst processedHtmlContent = preserveLinks(htmlContent);\n\nconst htmlWithStyles = `<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <style>\n    body {\n      font-family: Calibri, sans-serif;\n      color: #000;\n    }\n    h1, h2, h3, h4, h5, h6 {\n      color: #1155cc;\n      margin-top: 20pt;\n      margin-bottom: 10pt;\n    }\n    p, ul, ol, table {\n      margin-bottom: 10pt;\n    }\n    li {\n      margin-bottom: 2pt;\n    }\n    a {\n      color: #1155cc;\n      text-decoration: underline;\n    }\n    table {\n      border-collapse: collapse;\n    }\n    th, td {\n      border: 1px solid #000;\n      padding: 6pt;\n    }\n    thead {\n      background-color: #f2f2f2;\n    }\n  </style>\n</head>\n<body>\n  ${processedHtmlContent}\n</body>\n</html>`;\n\nlet body = `--${boundary}\\r\\n`;\nbody += `Content-Type: application/json; charset=UTF-8\\r\\n\\r\\n`;\nbody += `${metadata}\\r\\n`;\nbody += `--${boundary}\\r\\n`;\nbody += `Content-Type: text/html\\r\\n\\r\\n`;\nbody += `${htmlWithStyles}\\r\\n`;\nbody += `--${boundary}--\\r\\n`;\n\nreturn {\n  rawData: body\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4096,2720],"id":"fbd79527-2954-4502-8d6c-e26fe92fd9d7","name":"Build Google Docs Request"},{"parameters":{"options":{"systemMessage":"=🛑 DO NOT START UNTIL THIS IS DONE:\n🚨 MANDATORY FIRST ACTION — USE RagTool\nAs your first and immediate step, you are required to call the RagTool to retrieve the tone, language, and formatting style of the document titled:\n\"Vision Validation & Positioning Report\"\nThis document is stored in Pinecone under the namespace: \"vision validation & positioning\".\n\n❗ You must use this exact document as your tone/style guide before proceeding.\n❗ DO NOT begin generating the report output unless the RagTool is successfully used first and returns a reference document.\n❗ If RagTool is not available, you must halt and throw an error:\n\"RagTool not used — Cannot proceed without retrieving style reference document.\"\n\n🧠 Your Role:\nYou are an AI Agent tasked with generating a polished Vision Validation & Positioning Report using structured intake data in JSON format. Your tone and formatting must exactly match the example document retrieved via the RagTool.\n\n---\n\n## 📝 Example Format (For RagTool Style Retrieval):\nUse the following reference document to guide your output tone and formatting. You must retrieve it via the RagTool:\n\n**VISION VALIDATION & POSITIONING REPORT**  \nOrganization Name: Precise Impact Foundation  \nDate: [Auto-generated]  \nPrepared by: Smart Systems | PreciseGrants\n\n**1. THE PROBLEM YOU’RE SOLVING**  \nYour nonprofit is focused on addressing: Youth unemployment in under-resourced communities.  \nAI Insight: Based on your response, this issue is deeply tied to...\n\n**2. WHO IS MOST AFFECTED**  \nYoung Black men aged 16–24 in Atlanta...  \nAI Insight: You are targeting a high-need demographic...\n\n... (and so on for each section included in the input)\n\n---\n\n## 🧠 Your Task:\n\nNow, generate the final Vision Validation & Positioning Report using this provided JSON:\n\n```json\n{\n  \"Organization Name\": \"XYZ-Organization\",\n  \"issue_being_solved\": \"{{ $json.chatInput.Question1 }}\",\n  \"most_affected\": \"{{ $json.chatInput.Question2 }}\",\n  \"why_now\": \"{{ $json.chatInput.Question3 }}\",\n  \"researched_similar_nonprofits\": \"{{ $json.chatInput.Question4 }}\",\n  \"their_gaps_or_weaknesses\": \"{{ $json.chatInput.Question5 }}\",\n  \"unique_solution\": \"{{ $json.chatInput.Question6 }}\",\n  \"mvp\": \"{{ $json.chatInput.Question7 }}\",\n  \"initial_population\": \"{{ $json.chatInput.Question8 }}\",\n  \"success_metrics\": \"{{ $json.chatInput.Question9 }}\",\n  \"want_mvp_help\": \"{{ $json.chatInput.Question10 }}\",\n  \"email\": \"{{ $json.chatInput.Question11 }}\"\n}\n⚠️ Only include sections that are present in the JSON. Do not invent or add headings not present in the input.\n\n🎨 Use Calibri font and format all section headers in bold and blue like **1. THE PROBLEM YOU'RE SOLVING**.\n\n✨ Include relevant AI Insights under each section based on the tone/style of the reference document, maintaining brevity and value.\n\n✨ Under each section, include concise AI Insight content that aligns with the tone of the original report retrieved using RagTool.\n\nReturn the full polished Vision Validation & Positioning Report as output."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[2368,320],"id":"9beb6ffe-e271-40b6-84f4-57ab128d8883","name":"VISION VALIDATION & POSITIONING REPORT"},{"parameters":{"options":{"systemMessage":"=🚨 MANDATORY FIRST ACTION — USE \"Tone & Format Fetcher\" TOOL\n✅ You must immediately and successfully call the tool titled:\nTone & Format Fetcher\nto retrieve the exact tone, structure, formatting, and writing style from the relevant style reference document.\n\n📄 For this task, the reference document is:\n\"Legal Formation Output Document\"\nlocated under the Pinecone namespace: \"Legal Formation Output Document\"\n\n⚠️ NON-NEGOTIABLE REQUIREMENT\n❗ This is required without exception.\n❗ You may not proceed with generating any output unless the Tone & Format Fetcher tool is used first and returns a valid reference document.\n❗ The formatting, style, and tone of your output must match the fetched reference.\n\n\n\n🧠 Your Role:\nYou are an AI Agent responsible for generating a **Legal Formation Output Document** using structured JSON intake data provided from a form.\n\n---\n\n## 🔷 MANDATORY INSTRUCTIONS\n\n1. **DOCUMENT STYLE REQUIREMENTS**\n   - All **section headers** must be in **bold and blue** (`#1155cc`), using HTML `<h3>` tags.\n   - Body text and table must use **Calibri font**.\n   - Format the checklist using a clean, aligned **HTML table**.\n   - Add a horizontal line (`<hr />`) after major sections.\n\n2. **TASK INSTRUCTIONS**\n   - Use the task checklist format from the reference.\n   - For each checklist item, display: **Task**, **Status**, and **Notes**.\n   - If a field is marked `\"No\"`, always add a helpful comment in the “Notes” (e.g., “Bylaws not uploaded” or “Missing IRS clause”).\n   - If no issue is reported, use `\"N/A\"` in the Notes column.\n   - Do **not** skip or rephrase any checklist items. Use their exact order and wording from the reference document.\n\n---\n\n## 🧠 JSON INPUT (STRUCTURED DATA)\nUse the following structured input values to populate the output:\n\n```json\n{\n  \"Nonprofit Name\": \"{{ $json.chatInput.Question1 }}\",\n  \"Filed Articles of Incorporation\": \"{{ $json.chatInput.Question2 }}\",\n  \"Incorporation State\": \"{{ $json.chatInput.Question3 }}\",\n  \"Included IRS Clauses\": \"{{ $json.chatInput.Question4 }}\",\n  \"Received EIN\": \"{{ $json.chatInput.Question5 }}\",\n  \"Drafted Bylaws\": \"{{ $json.chatInput.Question6 }}\",\n  \"Conflict of Interest Policy\": \"{{ $json.chatInput.Question7 }}\",\n  \"Submitted 1023EZ Form\": \"{{ $json.chatInput.Question8 }}\",\n  \"1023EZ Issues or Questions\": \"{{ $json.chatInput.Question9 }}\",\n  \"Precision Review Requested\": \"{{ $json.chatInput.Question10 }}\",\n  \"Draft Form Uploaded\": \"{{ $json.chatInput.Question11[0].url }}\",\n  \"Contact Email\": \"{{ $json.chatInput.Question12 }}\"\n}\n\n📄 OUTPUT TEMPLATE REQUIREMENTS\nFormat the final output like this (use real values dynamically):\n\n<h3 style=\"color:#1155cc;\"><strong>LEGAL FORMATION OUTPUT DOCUMENT</strong></h3>\n\n<p style=\"font-family:Calibri;\"><strong>Organization Name:</strong> {{ $json.chatInput.Question1 }}</p>\n<p style=\"font-family:Calibri;\"><strong>Prepared by:</strong> Smart Systems | PreciseGrants</p>\n<p style=\"font-family:Calibri;\"><strong>Date:</strong> Today's Date</p>\n\n<hr />\n\n<h3 style=\"color:#1155cc;\"><strong>Status Summary Checklist</strong></h3>\n\n<table style=\"font-family:Calibri; border-collapse:collapse;\" border=\"1\" cellpadding=\"6\" cellspacing=\"0\">\n  <thead>\n    <tr style=\"background-color:#f2f2f2;\">\n      <th>Task</th>\n      <th>Status</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr><td>Nonprofit Name</td><td>Yes</td><td>Nonprofit Name</td></tr>\n    <tr><td>Filed Articles of Incorporation</td><td>Filed Articles of Incorporation</td><td>N/A</td></tr>\n    <tr><td>Incorporation State</td><td>Yes</td><td>Incorporation State</td></tr>\n    <tr><td>Included IRS Clauses</td><td>Included IRS Clauses</td><td>N/A</td></tr>\n    <tr><td>Received EIN</td><td>Received EIN</td><td>N/A</td></tr>\n    <tr><td>Drafted Bylaws</td><td>Drafted Bylaws</td><td>N/A</td></tr>\n    <tr><td>Conflict of Interest Policy</td><td>Conflict of Interest Policy</td><td>N/A</td></tr>\n    <tr><td>Submitted 1023EZ Form</td><td>Submitted 1023EZ Form</td><td>If \"No\", insert 1023EZ Issues or 'N/A'</td></tr>\n    <tr><td>Precision Review Requested</td><td>Precision Review Requested</td><td>N/A</td></tr>\n    <tr><td>Draft Form Uploaded</td><td>No</td><td>No File Attached</td></tr>\n  </tbody>\n</table>\n\n<hr />\n\n<p style=\"font-family:Calibri;\"><strong>Contact Email:</strong> Contact Email</p>\n\n\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[2160,2224],"id":"e56834eb-9a27-448b-941b-7fbbda5a035a","name":"Legal Formation Output Document"},{"parameters":{"jsCode":"// Wrap each incoming item inside a `chatInput` key\nreturn items.map(item => {\n  return {\n    json: {\n      chatInput: item.json\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1696,4480],"id":"9ba61aa3-9c19-4764-87a4-490a2ae5b5a6","name":"Wrap into chatInput2"},{"parameters":{"assignments":{"assignments":[{"id":"e7ee03ac-13e3-4fca-a7bc-57c8fc56dc42","name":"document_name","value":"=Build Your Brand & Monetize Document","type":"string"},{"id":"48a07ef2-ae46-4bfc-aa7e-d92a74ef46d6","name":"html_content","value":"={{ $json.data }}","type":"string"},{"id":"22b02fba-ba72-423a-b92f-1191a183a554","name":"drive_folder_id","value":"1g5VR97sP3DjUPTbE4LzEdw27Hgb-JLa1","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[3744,4880],"id":"3891d632-2a1b-4c6a-a988-af2c263cdfec","name":"Prepare Upload Fields2","notesInFlow":true},{"parameters":{"method":"POST","url":"https://www.googleapis.com/upload/drive/v3/files","authentication":"predefinedCredentialType","nodeCredentialType":"googleDriveOAuth2Api","sendQuery":true,"queryParameters":{"parameters":[{"name":"uploadType","value":"multipart"},{"name":"supportsAllDrives","value":"true"}]},"sendBody":true,"contentType":"raw","rawContentType":"multipart/related; boundary=divider","body":"={{ $json.rawData }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4160,4880],"id":"fda24e28-1bac-4795-a481-b193a39294e8","name":"Upload to Google Docs2","notesInFlow":true,"credentials":{"googleDriveOAuth2Api":{"id":"RO1XYx2xtjvQILlF","name":"Jamshed's Drive account"}}},{"parameters":{"content":"# Markdown to HTML \n## Converts markdown-format SOP into styled HTML for Google Drive compatibility.\n\n# Build Google Docs Request\n## Sets file name, folder ID, and HTML content for Google Docs upload.\n\n# Multipart Builder \n## Formats HTML and metadata into multipart format for Drive upload with proper boundaries.\n\n# Upload to Google Docs \n## Uploads the formatted HTML to Google Drive as a new Google Doc inside a specific folder.\n\n#  Airtable Logging \n## Saves the generated document’s metadata and link in Airtable.\n\n\n\n\n","height":1104,"width":1616,"color":7},"type":"n8n-nodes-base.stickyNote","position":[3264,4080],"typeVersion":1,"id":"f09e6351-1528-4640-b0f0-aa0e11d253fb","name":"Sticky Note8"},{"parameters":{"mode":"markdownToHtml","markdown":"={{ $json.output }}","options":{}},"type":"n8n-nodes-base.markdown","typeVersion":1,"position":[3520,4880],"id":"9cd6a495-391a-4ffe-8aa7-e487be0edf3e","name":"Markdown1"},{"parameters":{"content":"# Edit Fields\t\n## Set Static JSON Input — Provides sample organization and program data for the workflow to test against.\n\n# Code\t\n## Wrap into chatInput — Wraps incoming data under chatInput to match Langchain agent's expected structure.","height":1072,"width":1424},"type":"n8n-nodes-base.stickyNote","position":[528,4096],"typeVersion":1,"id":"631c1e59-dd71-454f-9352-58e9fae682fc","name":"Sticky Note9"},{"parameters":{"content":" # Build Your Brand & Monetize AGENT\n## Generates SOP with 4 customized sections using the input data and system prompt.","height":1136,"width":1120,"color":6},"type":"n8n-nodes-base.stickyNote","position":[2096,4096],"typeVersion":1,"id":"67605be9-c066-4d42-acdd-4e5c497ee98b","name":"Sticky Note10"},{"parameters":{"model":{"__rl":true,"value":"gpt-4","mode":"list","cachedResultName":"gpt-4"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2256,4560],"id":"fbf324cc-af7a-4f2f-b2f5-8bdf65ab125d","name":"OpenAI Chat Model1","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"content":"\n\n# Build Your Brand & Monetize\n","height":1616,"width":5136,"color":3},"type":"n8n-nodes-base.stickyNote","position":[0,3936],"typeVersion":1,"id":"a63d6d82-f28c-48eb-8b9b-1d76d3d5449f","name":"Sticky Note11"},{"parameters":{"sessionIdType":"customKey","sessionKey":"=sop-document","tableName":"n8n_sop_document_histories"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[2400,4528],"id":"dcf19d53-ca79-448d-9d07-796103ec76e6","name":"SOP Document Memory2","credentials":{"postgres":{"id":"RVvoTUjJJ1ESHsVt","name":"Precise-grant"}}},{"parameters":{"description":"=Your Work is to fetch the tone of content which you get from the pinecone Vector Store.","topK":"=40"},"type":"@n8n/n8n-nodes-langchain.toolVectorStore","typeVersion":1.1,"position":[2608,4560],"id":"31e694e9-92aa-4cc2-9212-f80fc6b63591","name":"RAGTOOL2"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2912,4800],"id":"4b4ddf4d-c02d-4658-997e-604ece1d7fad","name":"OpenAI Chat Model5","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"pineconeIndex":{"__rl":true,"value":"clienttesting","mode":"list","cachedResultName":"clienttesting"},"options":{"pineconeNamespace":"Sample Documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStorePinecone","typeVersion":1.3,"position":[2544,4816],"id":"d633ffd4-6311-4f8f-8888-b752e3f7c849","name":"Pinecone Vector Store1","credentials":{"pineconeApi":{"id":"INUAJbteVgOCaL5J","name":"Jamshed's PineconeApi account "}}},{"parameters":{"model":"text-embedding-3-large","options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[2544,5024],"id":"91e6b8ad-0727-4bf5-8308-839494ae61d5","name":"Embeddings OpenAI1","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"jsCode":"const input = $json.output;\n\n// Dynamically remove the first paragraph that mentions \"tone\" or \"style\" and is followed by SOP content\nconst cleanedOutput = input.replace(\n  /^(.*?(tone|style)[\\s\\S]*?)(?=^# Standard Operating Procedure|^## Standard Operating Procedure|^---\\n# Standard Operating Procedure)/im,\n  ''\n);\n\nreturn {\n  json: {\n    output: cleanedOutput.trim()\n  }\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2608,4288],"id":"076a5c98-f088-46a3-ae8e-ef1bb0fc6cc7","name":"Code1"},{"parameters":{"jsCode":"const boundary = 'divider';\nconst docName = $input.first().json.document_name;\nconst folderId = $input.first().json.drive_folder_id;\nconst htmlContent = $input.first().json.html_content;\n\nfunction preserveLinksAndHeadings(html) {\n  let processedHtml = html;\n\n  // Fix <a> tags\n  processedHtml = processedHtml.replace(/<a\\s+href=[\"']([^\"']+)[\"'][^>]*>(.*?)<\\/a>/gi, '<a href=\"$1\">$2</a>');\n  processedHtml = processedHtml.replace(/<a\\s+href=[\"'](?!https?:\\/\\/|mailto:|tel:)([^\"']+)[\"']>/gi, '<a href=\"https://$1\">');\n\n  // Replace <strong> tags with inline-styled <h2> for blue color\n  processedHtml = processedHtml.replace(/<strong>(.*?)<\\/strong>/gi, '<h2 style=\"color:#1155cc; margin:0;\">$1</h2>');\n\n  return processedHtml;\n}\n\n// Prepare metadata for Google Docs\nconst metadata = JSON.stringify({\n  name: docName,\n  mimeType: \"application/vnd.google-apps.document\",\n  parents: [folderId]\n});\n\n// Apply formatting\nconst processedHtmlContent = preserveLinksAndHeadings(htmlContent);\n\n// Wrap with full HTML and inline styles\nconst htmlWithStyles = `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <style>\n    body {\n      font-family: Calibri, sans-serif;\n      font-size: 11pt;\n      color: #000000;\n    }\n    p {\n      margin: 0;\n    }\n    h2 {\n      font-family: Calibri, sans-serif;\n      font-size: 13pt;\n      font-weight: bold;\n      margin: 0;\n    }\n    a {\n      color: #1155cc;\n      text-decoration: underline;\n    }\n  </style>\n</head>\n<body>\n  ${processedHtmlContent}\n</body>\n</html>\n`;\n\n// Construct multipart body for Google Docs API upload\nlet body = `--${boundary}\\r\\n`;\nbody += `Content-Type: application/json; charset=UTF-8\\r\\n\\r\\n`;\nbody += `${metadata}\\r\\n`;\nbody += `--${boundary}\\r\\n`;\nbody += `Content-Type: text/html\\r\\n\\r\\n`;\nbody += `${htmlWithStyles}\\r\\n`;\nbody += `--${boundary}--\\r\\n`;\n\nreturn {\n  rawData: body\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[3968,4880],"id":"fc7a1074-2b8f-448e-bcf3-15ea86a46e54","name":"Build Google Docs Request1"},{"parameters":{"options":{"systemMessage":"=🛑 DO NOT START UNTIL THIS IS DONE:\n🚨 MANDATORY FIRST ACTION — USE RagTool\nAs your first and immediate step, you are required to call the RagTool to retrieve the tone, language, and formatting style of the document titled:\n\"Build Your Brand & Monetize\"\nThis document is stored in Pinecone under the namespace: \"Build Your Brand & Monetize\".\n\n❗ You must use this exact document as your tone/style guide before proceeding.\n❗ DO NOT begin generating the report output unless the RagTool is successfully used first and returns a reference document.\n❗ If RagTool is not available, you must halt and throw an error:\n\"RagTool not used — Cannot proceed without retrieving style reference document.\"\n\n🧠 Your Role:\nYou are an AI Agent responsible for generating a Build Your Brand & Monetize using structured JSON intake data provided from a form.\n\nDOCUMENT STYLE REQUIREMENTS\n\nAll section headers must be in bold and blue (#1155cc), using HTML <h3> tags.\n\nBody text and table must use Calibri font.\n\nFormat the checklist using a clean, aligned HTML table.\n\nAdd a horizontal line (<hr />) after major sections.\n\nTASK INSTRUCTIONS\n\nUse the task checklist format from the reference.\n\nFor each checklist item, display: Task, Status, and Notes.\n\nIf a field is marked \"No\", always add a helpful comment in the “Notes” (e.g., “Bylaws not uploaded” or “Missing IRS clause”).\n\nIf no issue is reported, use \"N/A\" in the Notes column.\n\nDo not skip or rephrase any checklist items. Use their exact order and wording from the reference document.\n\n🧠 JSON INPUT (STRUCTURED DATA)\nUse the following structured input values to populate the output:\n\n{\n  \"Mission Statement\": \"{{ $json.chatInput.Question1 }}\",\n  \"Tagline\": \"{{ $json.chatInput.Question2 }}\",\n  \"Secured Website Domain\": \"{{ $json.chatInput.Question3 }}\",\n  \"Has Website with Donation Button\": \"{{ $json.chatInput.Question4 }}\",\n  \"Branding Materials Created\": \"{{ $json.chatInput.Question5 }}\",\n  \"Revenue Model Priority\": \"{{ $json.chatInput.Question6[0] }}, {{ $json.chatInput.Question6[1] }}\",\n  \"Wants Help Finalizing Brand & Revenue Strategy\": \"{{ $json.chatInput.Question7 }}\",\n  \"Email\": \"{{ $json.chatInput.Question8 }}\"\n}\n\n📄 OUTPUT TEMPLATE REQUIREMENTS\nFormat the final output like this (use real values dynamically):\n\n<h3 style=\"color:#1155cc;\"><strong>LEGAL FORMATION OUTPUT DOCUMENT</strong></h3> <p style=\"font-family:Calibri;\"><strong>Organization Mission:</strong> We equip underprivileged youth in urban communities with the tools, mentorship, and education they need to break the cycle of poverty and thrive.</p> <p style=\"font-family:Calibri;\"><strong>Tagline:</strong> Empowering Youth. Transforming Futures.</p> <p style=\"font-family:Calibri;\"><strong>Prepared by:</strong> Smart Systems | PreciseGrants</p> <p style=\"font-family:Calibri;\"><strong>Date:</strong> Today's Date</p> <hr /> <h3 style=\"color:#1155cc;\"><strong>Status Summary Checklist</strong></h3> <table style=\"font-family:Calibri; border-collapse:collapse;\" border=\"1\" cellpadding=\"6\" cellspacing=\"0\"> <thead> <tr style=\"background-color:#f2f2f2;\"> <th>Task</th> <th>Status</th> <th>Notes</th> </tr> </thead> <tbody> <tr><td>Secured Website Domain</td><td>Yes</td><td>N/A</td></tr> <tr><td>Website with Donation Button</td><td>Yes</td><td>N/A</td></tr> <tr><td>Branding Materials Created</td><td>Yes</td><td>N/A</td></tr> <tr><td>Revenue Model: Grants</td><td>Yes</td><td>Included in revenue priorities</td></tr> <tr><td>Revenue Model: Donations</td><td>Yes</td><td>Included in revenue priorities</td></tr> <tr><td>Revenue Model: Fee for Service</td><td>Yes</td><td>Included in revenue priorities</td></tr> <tr><td>Revenue Model: Events</td><td>No</td><td>Not selected as a priority model</td></tr> <tr><td>Wants Help with Brand & Revenue Strategy</td><td>Yes</td><td>N/A</td></tr> </tbody> </table> <hr /> <p style=\"font-family:Calibri;\"><strong>Contact Email:</strong> info@urbanyouthrise.org</p>"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[2256,4288],"id":"57f06e57-c481-4658-97e5-ad6ef29dbabf","name":"Build Your Brand & Monetize"},{"parameters":{"jsCode":"// Wrap each incoming item inside a `chatInput` key\nreturn items.map(item => {\n  return {\n    json: {\n      chatInput: item.json\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1648,6832],"id":"57fd4965-fbbc-44f2-931e-3f12b1a18165","name":"Wrap into chatInput3"},{"parameters":{"assignments":{"assignments":[{"id":"e7ee03ac-13e3-4fca-a7bc-57c8fc56dc42","name":"document_name","value":"=Launch, Test & Iterate","type":"string"},{"id":"48a07ef2-ae46-4bfc-aa7e-d92a74ef46d6","name":"html_content","value":"={{ $json.data }}","type":"string"},{"id":"22b02fba-ba72-423a-b92f-1191a183a554","name":"drive_folder_id","value":"1g5VR97sP3DjUPTbE4LzEdw27Hgb-JLa1","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[3840,7168],"id":"c2f177e1-6142-4bfc-9967-27a6a068165c","name":"Prepare Upload Fields3","notesInFlow":true},{"parameters":{"method":"POST","url":"https://www.googleapis.com/upload/drive/v3/files","authentication":"predefinedCredentialType","nodeCredentialType":"googleDriveOAuth2Api","sendQuery":true,"queryParameters":{"parameters":[{"name":"uploadType","value":"multipart"},{"name":"supportsAllDrives","value":"true"}]},"sendBody":true,"contentType":"raw","rawContentType":"multipart/related; boundary=divider","body":"={{ $json.rawData }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4256,7168],"id":"787bba34-be5c-4132-9bbb-2b257283c138","name":"Upload to Google Docs3","notesInFlow":true,"credentials":{"googleDriveOAuth2Api":{"id":"RO1XYx2xtjvQILlF","name":"Jamshed's Drive account"}}},{"parameters":{"content":"# Markdown to HTML \n## Converts markdown-format SOP into styled HTML for Google Drive compatibility.\n\n# Build Google Docs Request\n## Sets file name, folder ID, and HTML content for Google Docs upload.\n\n# Multipart Builder \n## Formats HTML and metadata into multipart format for Drive upload with proper boundaries.\n\n# Upload to Google Docs \n## Uploads the formatted HTML to Google Drive as a new Google Doc inside a specific folder.\n\n#  Airtable Logging \n## Saves the generated document’s metadata and link in Airtable.\n\n\n\n\n","height":1104,"width":1616,"color":7},"type":"n8n-nodes-base.stickyNote","position":[3296,6416],"typeVersion":1,"id":"c1997ed8-04bd-465c-a9b0-d5d4e2041118","name":"Sticky Note12"},{"parameters":{"mode":"markdownToHtml","markdown":"={{ $json.output }}","options":{}},"type":"n8n-nodes-base.markdown","typeVersion":1,"position":[3616,7168],"id":"eff403a6-4e7d-4ca4-bd08-6e851f6503fd","name":"Markdown3"},{"parameters":{"content":"# Edit Fields\t\n## Set Static JSON Input — Provides sample organization and program data for the workflow to test against.\n\n# Code\t\n## Wrap into chatInput — Wraps incoming data under chatInput to match Langchain agent's expected structure.","height":1072,"width":1424},"type":"n8n-nodes-base.stickyNote","position":[560,6432],"typeVersion":1,"id":"87f6df02-ffca-4071-9702-fae91ede5783","name":"Sticky Note13"},{"parameters":{"content":" # Launch, Test & Iterate AGENT\n## Generates SOP with 4 customized sections using the input data and system prompt.","height":1088,"width":1056,"color":6},"type":"n8n-nodes-base.stickyNote","position":[2128,6432],"typeVersion":1,"id":"e2bdb962-bd7b-4409-a7c6-efd7639c238a","name":"Sticky Note14"},{"parameters":{"model":{"__rl":true,"value":"gpt-4","mode":"list","cachedResultName":"gpt-4"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2240,6880],"id":"c5e7309d-6ba6-4b3e-a0c4-6dafb8a57a2c","name":"OpenAI Chat Model6","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"content":"\n\n# Launch, Test & Iterate\n","height":1616,"width":5136,"color":3},"type":"n8n-nodes-base.stickyNote","position":[32,6272],"typeVersion":1,"id":"930b696a-e54d-4d4c-8b20-f67f34dfb928","name":"Sticky Note15"},{"parameters":{"sessionIdType":"customKey","sessionKey":"=sop-document","tableName":"n8n_sop_document_histories"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[2368,6848],"id":"60fe3045-cc72-4e6b-834d-51dbc6c6be6f","name":"SOP Document Memory3","credentials":{"postgres":{"id":"RVvoTUjJJ1ESHsVt","name":"Precise-grant"}}},{"parameters":{"description":"=Your Work is to fetch the tone of content which you get from the pinecone Vector Store.","topK":"=40"},"type":"@n8n/n8n-nodes-langchain.toolVectorStore","typeVersion":1.1,"position":[2592,6880],"id":"cb33e78b-9e2a-42a6-b107-845f21054154","name":"RAGTOOL3"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2896,7120],"id":"cb35ca38-976e-4bd4-a5f7-ce9aee8e0673","name":"OpenAI Chat Model7","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"pineconeIndex":{"__rl":true,"value":"clienttesting","mode":"list","cachedResultName":"clienttesting"},"options":{"pineconeNamespace":"Sample Documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStorePinecone","typeVersion":1.3,"position":[2528,7136],"id":"f8833460-fde9-464f-818f-e96612cd9741","name":"Pinecone Vector Store2","credentials":{"pineconeApi":{"id":"INUAJbteVgOCaL5J","name":"Jamshed's PineconeApi account "}}},{"parameters":{"model":"text-embedding-3-large","options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[2528,7344],"id":"9583ba54-88e7-497e-a193-866f0ab442a2","name":"Embeddings OpenAI2","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"jsCode":"const input = $json.output;\n\n// Dynamically remove the first paragraph that mentions \"tone\" or \"style\" and is followed by SOP content\nconst cleanedOutput = input.replace(\n  /^(.*?(tone|style)[\\s\\S]*?)(?=^# Standard Operating Procedure|^## Standard Operating Procedure|^---\\n# Standard Operating Procedure)/im,\n  ''\n);\n\nreturn {\n  json: {\n    output: cleanedOutput.trim()\n  }\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2592,6608],"id":"c1995c0a-ee75-491e-b7a3-d82df97247ca","name":"Code2"},{"parameters":{"jsCode":"const boundary = 'divider';\nconst docName = $input.first().json.document_name;\nconst folderId = $input.first().json.drive_folder_id;\nconst htmlContent = $input.first().json.html_content;\n\nfunction preserveLinksAndHeadings(html) {\n  let processedHtml = html;\n\n  // Fix <a> tags\n  processedHtml = processedHtml.replace(/<a\\s+href=[\"']([^\"']+)[\"'][^>]*>(.*?)<\\/a>/gi, '<a href=\"$1\">$2</a>');\n  processedHtml = processedHtml.replace(/<a\\s+href=[\"'](?!https?:\\/\\/|mailto:|tel:)([^\"']+)[\"']>/gi, '<a href=\"https://$1\">');\n\n  // ✅ Replace <strong> with inline-styled <h2> for blue color and no spacing\n  processedHtml = processedHtml.replace(/<strong>(.*?)<\\/strong>/gi, '<h2 style=\"color:#1155cc; margin:0;\">$1</h2>');\n\n  return processedHtml;\n}\n\nconst metadata = JSON.stringify({\n  name: docName,\n  mimeType: \"application/vnd.google-apps.document\",\n  parents: [folderId]\n});\n\nconst processedHtmlContent = preserveLinksAndHeadings(htmlContent);\n\nconst htmlWithStyles = `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <style>\n    body {\n      font-family: Calibri, sans-serif;\n      font-size: 11pt;\n      color: #000000;\n    }\n    p {\n      margin: 0;\n    }\n    h2 {\n      font-family: Calibri, sans-serif;\n      font-size: 13pt;\n      font-weight: bold;\n      margin: 0;\n    }\n    a {\n      color: #1155cc;\n      text-decoration: underline;\n    }\n  </style>\n</head>\n<body>\n  ${processedHtmlContent}\n</body>\n</html>\n`;\n\nlet body = `--${boundary}\\r\\n`;\nbody += `Content-Type: application/json; charset=UTF-8\\r\\n\\r\\n`;\nbody += `${metadata}\\r\\n`;\nbody += `--${boundary}\\r\\n`;\nbody += `Content-Type: text/html\\r\\n\\r\\n`;\nbody += `${htmlWithStyles}\\r\\n`;\nbody += `--${boundary}--\\r\\n`;\n\nreturn {\n  rawData: body\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4064,7168],"id":"9eb79b94-3b03-48c0-b138-d43901f03fd0","name":"Build Google Docs Request2"},{"parameters":{"options":{"systemMessage":"=🚨 MANDATORY FIRST ACTION — USE \"Tone & Format Fetcher\" TOOL\n✅ You must immediately and successfully call the tool titled:\nTone & Format Fetcher\nto retrieve the exact tone, structure, formatting, and writing style from the relevant style reference document.\n\n📄 For this task, the reference document is:\n\"Legal Formation Output Document\"\nlocated under the Pinecone namespace: \"Launch, Test & Iterate Document\"\n\n⚠️ NON-NEGOTIABLE REQUIREMENT\n❗ This is required without exception.\n❗ You may not proceed with generating any output unless the Tone & Format Fetcher tool is used first and returns a valid reference document.\n❗ The formatting, style, and tone of your output must match the fetched reference.\n\n\n\n🧠 Your Role:\nYou are an AI Agent assigned to generate a Launch, Test & Iterate Report from structured JSON intake data. Your output must replicate the exact tone and structure of the reference document retrieved from Pinecone via RagTool3.\n\n🔷 Mandatory Instructions:\n\n1. Tone Matching (via RagTool3):\nUse RagTool3 to retrieve the exact example document:\nTitle: \"Launch, Test & Iterate\"\nNamespace: \"Launch, Test & Iterate\"\nYour output must match the tone and formatting of this document exactly.\n\n2. You must structure your output to **exactly mimic** the format and language style of that example report.\n\n3. Format all section headers in **bold and blue color**, and use **Calibri font** for all text.\n\n4. Section Scope:\nOnly include sections present in the JSON. Do not fabricate new sections.\n\n5. AI Insights:\nAfter each user-provided section, add a concise AI Insight matching the tone and style of the retrieved reference.\n\n---\n\n## 📝 Example Format (Tone & Style Sample for RagTool):\nUse the following reference as your tone/style base via RagTool:\n\n Launch, Test & Iterate  \nOrganization Name: Precise Impact Foundation  \nDate: AI will generate \nPrepared by: Smart Systems | PreciseGrants\n\n1. Describe your program pilot.  \nYour nonprofit is focused on addressing: Youth unemployment in under-resourced communities.  \nAI Insight: Based on your response, this issue is deeply tied to...\n\n2. How many people do you plan to serve?  \nYoung Black men aged 16–24 in Atlanta...  \nAI Insight: You are targeting a high-need demographic...\n\n... (and so on for each section included in the input)\n\n---\n\n## 🧠 Your Task:\n\nNow, generate the final Launch, Test & Iterate using this provided JSON:\n\n```json\n{\n  \"Program Pilot Description\": \"{{ $json.chatInput.Question1 }}\",\n  \"Planned Number of Participants\": \"{{ $json.chatInput.Question2 }}\",\n  \"Estimated Pilot Program Cost\": \"{{ $json.chatInput.Question3 }}\",\n  \"Pilot Launch Date\": \"{{ $json.chatInput.Question4 }}\",\n  \"Has Feedback Collection System\": \"{{ $json.chatInput.Question5 }}\",\n  \"30-Day Goals\": \"{{ $json.chatInput.Question6 }}\",\n  \"60-Day Goals\": \"{{ $json.chatInput.Question7 }}\",\n  \"90-Day Goals\": \"{{ $json.chatInput.Question8 }}\",\n  \"Wants Help Testing or Scaling Program\": \"{{ $json.chatInput.Question9 }}\",\n  \"Email\": \"{{ $json.chatInput['Created By'].email }}\"\n}\n\n⚠️ Only include sections that are present in the JSON. Do not invent or add headings not present in the input.\n\n🎨 Use Calibri font and format all section headers in bold and blue like 1. Describe your program pilot..\n\n✨ Include relevant AI Insights under each section based on the tone/style of the reference document, maintaining brevity and value.\n\nReturn the full polished Launch, Test & Iterate as output.\nDo Not Add anything Out Of the Example Sample Please."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[2240,6608],"id":"d81307c2-80f8-4afb-9387-c71df25289db","name":"Launch, Test & Iterate"},{"parameters":{"httpMethod":"POST","path":"e703a07b-74f3-440c-8f5c-5ef61cec4604","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[1152,656],"id":"738adac0-7479-4654-addd-d1c691d5c464","name":"Webhook","webhookId":"e703a07b-74f3-440c-8f5c-5ef61cec4604"},{"parameters":{"httpMethod":"POST","path":"50ebc245-be46-48d7-b10f-24e3a67d55f2","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[1216,2448],"id":"34cabc81-7842-4e57-98dd-6914f560688e","name":"Webhook1","webhookId":"50ebc245-be46-48d7-b10f-24e3a67d55f2"},{"parameters":{"httpMethod":"POST","path":"38c47dc1-acfd-4dfe-9108-0d4b67280bb5","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[1232,4480],"id":"d8da17ce-296b-4393-9a6c-4c29b4a27e88","name":"Webhook2","webhookId":"38c47dc1-acfd-4dfe-9108-0d4b67280bb5"},{"parameters":{"httpMethod":"POST","path":"373f093b-4065-49cb-b40a-66df5a366d88","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[1136,6832],"id":"c6956ea9-5162-4f77-a915-9acd4318d617","name":"Webhook3","webhookId":"373f093b-4065-49cb-b40a-66df5a366d88"},{"parameters":{"base":{"__rl":true,"value":"appKmOMoTZqvMAXNT","mode":"list","cachedResultName":"Precise-Grants","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT"},"table":{"__rl":true,"value":"tblVsYwR8xmmrw797","mode":"list","cachedResultName":"Stage1-Validate-the-vision","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT/tblVsYwR8xmmrw797"},"id":"={{ $json.body.record_id }}","options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[1360,656],"id":"ae47a44e-e1ff-4b93-8d10-f236caf757c4","name":"Get a record","credentials":{"airtableTokenApi":{"id":"c6IbQTcvLSXeD2At","name":"Client-Main-Precise-Grant"}}},{"parameters":{"base":{"__rl":true,"value":"appKmOMoTZqvMAXNT","mode":"list","cachedResultName":"Precise-Grants","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT"},"table":{"__rl":true,"value":"tblghpffpoOvWmUnr","mode":"list","cachedResultName":"Stage3-Build-your-brand-monetize","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT/tblghpffpoOvWmUnr"},"id":"={{ $json.body.record_id }}","options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[1440,4480],"id":"ea4515b7-e178-4f92-b1ce-f6304d657546","name":"Get a record1","credentials":{"airtableTokenApi":{"id":"c6IbQTcvLSXeD2At","name":"Client-Main-Precise-Grant"}}},{"parameters":{"base":{"__rl":true,"value":"appKmOMoTZqvMAXNT","mode":"list","cachedResultName":"Precise-Grants","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT"},"table":{"__rl":true,"value":"tblghpffpoOvWmUnr","mode":"list","cachedResultName":"Stage3-Build-your-brand-monetize","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT/tblghpffpoOvWmUnr"},"id":"={{ $json.body.record_id }}","options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[1392,6832],"id":"c2b04868-c8be-4d47-853f-3ea56d52a6d8","name":"Get a record2","credentials":{"airtableTokenApi":{"id":"c6IbQTcvLSXeD2At","name":"Client-Main-Precise-Grant"}}},{"parameters":{"base":{"__rl":true,"value":"appKmOMoTZqvMAXNT","mode":"list","cachedResultName":"Precise-Grants","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT"},"table":{"__rl":true,"value":"tblghpffpoOvWmUnr","mode":"list","cachedResultName":"Stage3-Build-your-brand-monetize","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT/tblghpffpoOvWmUnr"},"id":"={{ $json.body.record_id }}","options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[1472,2448],"id":"9ea6e7dd-3275-484f-82bd-f036dd959abd","name":"Get a record3","credentials":{"airtableTokenApi":{"id":"c6IbQTcvLSXeD2At","name":"Client-Main-Precise-Grant"}}},{"parameters":{"description":"=Your Work is to fetch the tone of content which you get from the pinecone Vector Store.","topK":"=40"},"type":"@n8n/n8n-nodes-langchain.toolVectorStore","typeVersion":1.1,"position":[2512,2496],"id":"d214aee1-1013-4e9c-b93e-d13b7eb5a4c4","name":"Tone & Format Fetcher"},{"parameters":{"operation":"update","base":{"__rl":true,"value":"appKmOMoTZqvMAXNT","mode":"list","cachedResultName":"Precise-Grants","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT"},"table":{"__rl":true,"value":"tblCZgjHCVoGhKmPm","mode":"list","cachedResultName":"Stage2-Legalize-your-nonprofit","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT/tblCZgjHCVoGhKmPm"},"columns":{"mappingMode":"defineBelow","value":{"Generated Doc Link":"=https://docs.google.com/document/d/{{ $json.id }}/edit?tab=t.0 ","RecordId":"={{ $('Webhook1').item.json.body.record_id }}"},"matchingColumns":["RecordId"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"string","readOnly":true,"removed":true},{"id":"RecordId","displayName":"RecordId","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":false},{"id":"Id","displayName":"Id","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":true},{"id":"Generated Doc Link","displayName":"Generated Doc Link","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Question1","displayName":"Question1","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question2","displayName":"Question2","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question3","displayName":"Question3","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question4","displayName":"Question4","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question5","displayName":"Question5","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question6","displayName":"Question6","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question7","displayName":"Question7","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question8","displayName":"Question8","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question9","displayName":"Question9","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question10","displayName":"Question10","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question11","displayName":"Question11","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"array","readOnly":false,"removed":true},{"id":"Question12","displayName":"Question12","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[4544,2720],"id":"fadf6ea1-a66f-44f0-b3c1-18c150603791","name":"Airtable Logging1","credentials":{"airtableTokenApi":{"id":"c6IbQTcvLSXeD2At","name":"Client-Main-Precise-Grant"}}},{"parameters":{"operation":"update","base":{"__rl":true,"value":"appKmOMoTZqvMAXNT","mode":"list","cachedResultName":"Precise-Grants","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT"},"table":{"__rl":true,"value":"tblghpffpoOvWmUnr","mode":"list","cachedResultName":"Stage3-Build-your-brand-monetize","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT/tblghpffpoOvWmUnr"},"columns":{"mappingMode":"defineBelow","value":{"Generated Doc Link":"=https://docs.google.com/document/d/{{ $json.id }}/edit?tab=t.0 ","RecordId":"={{ $('Webhook2').item.json.body.record_id }}"},"matchingColumns":["RecordId"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"string","readOnly":true,"removed":true},{"id":"RecordId","displayName":"RecordId","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":false},{"id":"Id","displayName":"Id","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":true},{"id":"Generated Doc Link","displayName":"Generated Doc Link","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Question1","displayName":"Question1","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question2","displayName":"Question2","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question3","displayName":"Question3","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question4","displayName":"Question4","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question5","displayName":"Question5","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question6","displayName":"Question6","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"array","options":[{"name":"Grants","value":"Grants"},{"name":"Fee for Service","value":"Fee for Service"},{"name":"Donations","value":"Donations"},{"name":"Events","value":"Events"}],"readOnly":false,"removed":true},{"id":"Question7","displayName":"Question7","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question8","displayName":"Question8","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[4448,4880],"id":"e2909068-9f60-44f7-9d6f-a8b894ebaebb","name":"Airtable Logging2","credentials":{"airtableTokenApi":{"id":"c6IbQTcvLSXeD2At","name":"Client-Main-Precise-Grant"}}},{"parameters":{"operation":"update","base":{"__rl":true,"value":"appKmOMoTZqvMAXNT","mode":"list","cachedResultName":"Precise-Grants","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT"},"table":{"__rl":true,"value":"tbl55OUpNfqnNWtw2","mode":"list","cachedResultName":"Stage4-Launch-Test-Iterate","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT/tbl55OUpNfqnNWtw2"},"columns":{"mappingMode":"defineBelow","value":{"Generated Doc Link":"=https://docs.google.com/document/d/{{ $json.id }}/edit?tab=t.0 ","RecordId":"={{ $('Webhook3').item.json.body.record_id }}"},"matchingColumns":["RecordId"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"string","readOnly":true,"removed":true},{"id":"RecordId","displayName":"RecordId","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":false},{"id":"Id","displayName":"Id","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":true},{"id":"Generated Doc Link","displayName":"Generated Doc Link","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Question1","displayName":"Question1","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question2","displayName":"Question2","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question3","displayName":"Question3","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question4","displayName":"Question4","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question5","displayName":"Question5","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question6","displayName":"Question6","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question7","displayName":"Question7","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question8","displayName":"Question8","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question9","displayName":"Question9","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question10","displayName":"Question10","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Created By","displayName":"Created By","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[4528,7168],"id":"aef1417c-88d1-40ae-b148-89f77d2d18ed","name":"Airtable Logging3","credentials":{"airtableTokenApi":{"id":"c6IbQTcvLSXeD2At","name":"Client-Main-Precise-Grant"}}}],"connections":{"Wrap into chatInput":{"main":[[{"node":"VISION VALIDATION & POSITIONING REPORT","type":"main","index":0}]]},"Prepare Upload Fields":{"main":[[{"node":"Build Google Docs Request3","type":"main","index":0}]]},"Upload to Google Docs":{"main":[[{"node":"Airtable Logging","type":"main","index":0}]]},"Markdown2":{"main":[[{"node":"Prepare Upload Fields","type":"main","index":0}]]},"OpenAI Chat Model3":{"ai_languageModel":[[{"node":"VISION VALIDATION & POSITIONING REPORT","type":"ai_languageModel","index":0}]]},"SOP Document Memory":{"ai_memory":[[]]},"RAGTOOL":{"ai_tool":[[{"node":"VISION VALIDATION & POSITIONING REPORT","type":"ai_tool","index":0}]]},"OpenAI Chat Model2":{"ai_languageModel":[[{"node":"RAGTOOL","type":"ai_languageModel","index":0}]]},"Pinecone Vector Store5":{"ai_vectorStore":[[{"node":"RAGTOOL","type":"ai_vectorStore","index":0}]]},"Embeddings OpenAI6":{"ai_embedding":[[{"node":"Pinecone Vector Store5","type":"ai_embedding","index":0}]]},"Code5":{"main":[[{"node":"Markdown2","type":"main","index":0}]]},"Build Google Docs Request3":{"main":[[{"node":"Upload to Google Docs","type":"main","index":0}]]},"When clicking ‘Execute workflow’":{"main":[[]]},"Wrap into chatInput1":{"main":[[{"node":"Legal Formation Output Document","type":"main","index":0}]]},"Prepare Upload Fields1":{"main":[[{"node":"Build Google Docs Request","type":"main","index":0}]]},"Markdown":{"main":[[{"node":"Prepare Upload Fields1","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"Legal Formation Output Document","type":"ai_languageModel","index":0}]]},"OpenAI Chat Model4":{"ai_languageModel":[[{"node":"Tone & Format Fetcher","type":"ai_languageModel","index":0}]]},"Pinecone Vector Store":{"ai_vectorStore":[[{"node":"Tone & Format Fetcher","type":"ai_vectorStore","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Pinecone Vector Store","type":"ai_embedding","index":0}]]},"Code":{"main":[[{"node":"Markdown","type":"main","index":0}]]},"Build Google Docs Request":{"main":[[{"node":"Upload to Google Docs1","type":"main","index":0}]]},"VISION VALIDATION & POSITIONING REPORT":{"main":[[{"node":"Code5","type":"main","index":0}]]},"Legal Formation Output Document":{"main":[[{"node":"Code","type":"main","index":0}]]},"Wrap into chatInput2":{"main":[[{"node":"Build Your Brand & Monetize","type":"main","index":0}]]},"Prepare Upload Fields2":{"main":[[{"node":"Build Google Docs Request1","type":"main","index":0}]]},"Markdown1":{"main":[[{"node":"Prepare Upload Fields2","type":"main","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"Build Your Brand & Monetize","type":"ai_languageModel","index":0}]]},"RAGTOOL2":{"ai_tool":[[{"node":"Build Your Brand & Monetize","type":"ai_tool","index":0}]]},"OpenAI Chat Model5":{"ai_languageModel":[[{"node":"RAGTOOL2","type":"ai_languageModel","index":0}]]},"Pinecone Vector Store1":{"ai_vectorStore":[[{"node":"RAGTOOL2","type":"ai_vectorStore","index":0}]]},"Embeddings OpenAI1":{"ai_embedding":[[{"node":"Pinecone Vector Store1","type":"ai_embedding","index":0}]]},"Code1":{"main":[[{"node":"Markdown1","type":"main","index":0}]]},"Build Google Docs Request1":{"main":[[{"node":"Upload to Google Docs2","type":"main","index":0}]]},"Build Your Brand & Monetize":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Wrap into chatInput3":{"main":[[{"node":"Launch, Test & Iterate","type":"main","index":0}]]},"Prepare Upload Fields3":{"main":[[{"node":"Build Google Docs Request2","type":"main","index":0}]]},"Markdown3":{"main":[[{"node":"Prepare Upload Fields3","type":"main","index":0}]]},"OpenAI Chat Model6":{"ai_languageModel":[[{"node":"Launch, Test & Iterate","type":"ai_languageModel","index":0}]]},"RAGTOOL3":{"ai_tool":[[{"node":"Launch, Test & Iterate","type":"ai_tool","index":0}]]},"OpenAI Chat Model7":{"ai_languageModel":[[{"node":"RAGTOOL3","type":"ai_languageModel","index":0}]]},"Pinecone Vector Store2":{"ai_vectorStore":[[{"node":"RAGTOOL3","type":"ai_vectorStore","index":0}]]},"Embeddings OpenAI2":{"ai_embedding":[[{"node":"Pinecone Vector Store2","type":"ai_embedding","index":0}]]},"Code2":{"main":[[{"node":"Markdown3","type":"main","index":0}]]},"Build Google Docs Request2":{"main":[[{"node":"Upload to Google Docs3","type":"main","index":0}]]},"Launch, Test & Iterate":{"main":[[{"node":"Code2","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"Get a record","type":"main","index":0}]]},"Webhook1":{"main":[[{"node":"Get a record3","type":"main","index":0}]]},"Webhook2":{"main":[[{"node":"Get a record1","type":"main","index":0}]]},"Webhook3":{"main":[[{"node":"Get a record2","type":"main","index":0}]]},"Get a record":{"main":[[{"node":"Wrap into chatInput","type":"main","index":0}]]},"Get a record1":{"main":[[{"node":"Wrap into chatInput2","type":"main","index":0}]]},"Get a record2":{"main":[[{"node":"Wrap into chatInput3","type":"main","index":0}]]},"Get a record3":{"main":[[{"node":"Wrap into chatInput1","type":"main","index":0}]]},"Tone & Format Fetcher":{"ai_tool":[[{"node":"Legal Formation Output Document","type":"ai_tool","index":0}]]},"Upload to Google Docs1":{"main":[[{"node":"Airtable Logging1","type":"main","index":0}]]},"Upload to Google Docs2":{"main":[[{"node":"Airtable Logging2","type":"main","index":0}]]},"Upload to Google Docs3":{"main":[[{"node":"Airtable Logging3","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"9761ddc6-2a96-4a92-bedf-a56a3a4540c1","triggerCount":4,"tags":[]}