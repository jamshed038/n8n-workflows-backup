{"createdAt":"2025-09-05T12:45:28.378Z","updatedAt":"2025-09-05T13:24:37.000Z","id":"I4S0N5tCP7g89Luq","name":"Automated Multi-Account Email Outreach","active":false,"isArchived":false,"nodes":[{"parameters":{"jsCode":"// Get all input data from merged results\nconst allInputs = $('Merge').all();\n\nconsole.log('Total inputs received:', allInputs.length);\nconsole.log('Sample input structure:', JSON.stringify(allInputs[0], null, 2));\n\n// Count emails sent per sender account\nconst sentCounts = {};\n\n// Process each input item to count emails per sender\nfor (const item of allInputs) {\n  const data = item.json || item;\n  \n  // Try to find sender email in various possible data paths\n  let senderEmail = data.senderEmail || \n                   data.from || \n                   data.email ||\n                   data.sender ||\n                   (data.headers && data.headers.from) ||\n                   null;\n  \n  // Extract original counter value\n  let originalCounter = parseInt(data.originalCounter || 0);\n  \n  console.log('Processing item - Sender:', senderEmail, 'Original Counter:', originalCounter);\n  \n  if (senderEmail) {\n    if (!sentCounts[senderEmail]) {\n      sentCounts[senderEmail] = {\n        email: senderEmail,\n        count: 0,\n        originalCounter: originalCounter\n      };\n    }\n    sentCounts[senderEmail].count += 1;\n  } else {\n    console.log('Warning: No sender email found in item:', JSON.stringify(data, null, 2));\n  }\n}\n\nconsole.log('Email counts calculated:', sentCounts);\n\n// If we couldn't extract sender info from the merged data,\n// we need to get it from the original assignment data\nif (Object.keys(sentCounts).length === 0) {\n  console.log('No sender emails found in merged data, checking for assignment data...');\n  \n  // Try to get data from the node that assigned the emails\n  const assignmentData = $('Assign Emails').all();\n  console.log('Assignment data:', JSON.stringify(assignmentData, null, 2));\n  \n  // Count based on assignment data\n  for (const assignment of assignmentData) {\n    const data = assignment.json;\n    const senderEmail = data.senderEmail;\n    const originalCounter = parseInt(data.originalCounter || 0);\n    \n    if (senderEmail) {\n      if (!sentCounts[senderEmail]) {\n        sentCounts[senderEmail] = {\n          email: senderEmail,\n          count: 0,\n          originalCounter: originalCounter\n        };\n      }\n      sentCounts[senderEmail].count += 1;\n    }\n  }\n}\n\n// Create final output with updated counter values\nconst updates = Object.values(sentCounts).map(acc => ({\n  email: acc.email,\n  newCounter: acc.originalCounter + acc.count,\n  emailsSent: acc.count,\n  previousCounter: acc.originalCounter\n}));\n\nconsole.log('Final counter updates:', updates);\n\n// Return empty array if no updates to prevent errors\nif (updates.length === 0) {\n  console.log('Warning: No counter updates generated');\n  return [];\n}\n\nreturn updates.map(update => ({ json: update }));"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[7392,3696],"id":"6439b02d-6a11-4832-ad9e-d12625132179","name":"Calculate Counter Updates"},{"parameters":{"jsCode":"// Smart email assignment logic - Dynamic Round Robin\nconst emailAccounts = $('EmailCounter Table').all();\nconst leads = $('Leads Table').all();\n\nconsole.log(`Received ${leads.length} leads to process`);\n\n// Get available accounts with remaining capacity\nlet availableAccounts = [];\nfor (let idx = 0; idx < emailAccounts.length; idx++) {\n  const account = emailAccounts[idx];\n  const counter = parseInt(account.json.Counter || 0);\n  const limit = parseInt(account.json.Limit || 0);\n  const remaining = limit - counter;\n  console.log(`Account ${account.json.Emails}: Counter=${counter}, Limit=${limit}, Remaining=${remaining}`);\n  if (remaining > 0) {\n    availableAccounts.push({\n      email: account.json.Emails,\n      name: account.json.Name,\n      accountIndex: idx,\n      originalCounter: counter,\n      remaining: remaining,\n      assigned: 0\n    });\n  }\n}\n\nconsole.log(`Found ${availableAccounts.length} accounts with capacity`);\n\n// If no accounts available, return a \"drained\" flag\nif (availableAccounts.length === 0) {\n  console.log('No email accounts have remaining capacity');\n  return [{\n    json: {\n      status: \"drained\",\n      message: \"All email accounts have reached their maximum limit. No leads were assigned.\"\n    }\n  }];\n}\n\n// Round-robin assignment for all received leads\nconst emailsToSend = [];\nlet accountIndex = 0;\n\nfor (let i = 0; i < leads.length; i++) {\n  let assigned = false;\n  let attempts = 0;\n\n  while (!assigned && attempts < availableAccounts.length) {\n    const account = availableAccounts[accountIndex];\n\n    // Check if this account still has capacity\n    if (account.assigned < account.remaining) {\n      const lead = leads[i];\n\n      emailsToSend.push({\n        // Lead info\n        leadEmail: lead.json.Email || lead.json.email,\n        firstName: lead.json.FirstName || lead.json.firstName,\n        companyName: lead.json.CompanyName || lead.json.companyName,\n        iceBreaker: lead.json.IceBreaker || lead.json.iceBreaker,\n\n        // Sender info\n        senderEmail: account.email,\n        senderName: account.name,\n        accountIndex: account.accountIndex,\n        originalCounter: account.originalCounter,\n\n        // Lead identification\n        OrganizationId: lead.json.OrganizationId,\n        recordId: lead.json.id, // IMPORTANT: Airtable recordId for updating send_status\n      });\n\n      account.assigned++;\n      assigned = true;\n\n      console.log(`Assigned lead ${i + 1} to ${account.email} (${account.assigned}/${account.remaining})`);\n    }\n\n    // Move to next account (round-robin)\n    accountIndex = (accountIndex + 1) % availableAccounts.length;\n    attempts++;\n  }\n\n  // If we couldn't assign this lead, we've hit capacity limits\n  if (!assigned) {\n    console.log(`Hit capacity limits. Assigned ${emailsToSend.length} out of ${leads.length} leads`);\n    break;\n  }\n}\n\n// Log final distribution\nconst distribution = {};\nemailsToSend.forEach(email => {\n  distribution[email.senderEmail] = (distribution[email.senderEmail] || 0) + 1;\n});\nconsole.log(`Final assignment: ${emailsToSend.length} emails distributed as:`, distribution);\n\n// Return for n8n\nreturn emailsToSend.map(email => ({ json: email }));\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4128,3712],"id":"af2c8dc7-7d31-4853-b183-f054d86fbd59","name":"Assign Emails"},{"parameters":{"sendTo":"=haider.irenictech@gmail.com","subject":"=Quick Question About {{ $('Leads Table').item.json.organization_name }}","emailType":"text","message":"=Hi {{ $('Leads Table').item.json.f_name }},\n\n{{ $json.iceBreaker }}\n\nWould love to chat about how we can help {{ $('Leads Table').item.json.organization_name }}.\n\nBest,\n{{ $json.senderName }}","options":{"appendAttribution":false}},"type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[5856,3536],"id":"1a2fe19b-3880-46bb-a186-3e6bd55d2bcc","name":"Irenic","webhookId":"55f0b3a1-6956-43c8-9d1b-5acbdd36338b","alwaysOutputData":true,"credentials":{"gmailOAuth2":{"id":"dGFjRRdCcxA2JKoz","name":"Jamshed's Gmail account "}}},{"parameters":{"sendTo":"=haider.irenictech@gmail.com","subject":"=Partnership Opportunity - {{ $('Leads Table').item.json.organization_name }}","emailType":"text","message":"=Hello {{ $('Leads Table').item.json.f_name }},\n\n{{ $json.iceBreaker }}\n\nI think there's a great opportunity for {{ $('Leads Table').item.json.organization_name }} here.\n\nBest regards,\n{{ $json.senderName }}","options":{"appendAttribution":false}},"type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[5856,3904],"id":"bb492adb-8f97-4128-b49d-5a310fd75bf5","name":"Ice","webhookId":"abf42aa3-bd94-431f-80d8-a021e0c2cc68","alwaysOutputData":true,"credentials":{"gmailOAuth2":{"id":"dGFjRRdCcxA2JKoz","name":"Jamshed's Gmail account "}}},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[3568,3712],"id":"befc8ded-ce52-4751-9b85-5eacd4e82578","name":"When clicking ‘Execute workflow’"},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[7056,3696],"id":"c689786b-271b-4af1-a111-b531e90c114b","name":"Merge"},{"parameters":{"amount":30},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[6256,3536],"id":"9bcf9bfc-4522-4520-b3dc-7a4fb45ff71d","name":"Wait","webhookId":"a08c2a80-6fe0-4ec6-8e0f-906887806f0a"},{"parameters":{},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[6304,3904],"id":"b8178d21-97e7-4153-91aa-5561192ed018","name":"Wait1","webhookId":"a08c2a80-6fe0-4ec6-8e0f-906887806f0a"},{"parameters":{"operation":"update","base":{"__rl":true,"value":"appl2wsINWrM8alBK","mode":"list","cachedResultName":"Apollo Leads","cachedResultUrl":"https://airtable.com/appl2wsINWrM8alBK"},"table":{"__rl":true,"value":"tblrgEj7t2XNxeo0S","mode":"list","cachedResultName":"Leads","cachedResultUrl":"https://airtable.com/appl2wsINWrM8alBK/tblrgEj7t2XNxeo0S"},"columns":{"mappingMode":"defineBelow","value":{"send_status":"sent","Record Id":"={{ $('Route Between Emails').item.json.recordId }}","Mail Id For Sending":"={{ $json.id }}"},"matchingColumns":["Record Id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"string","readOnly":true,"removed":true},{"id":"Record Id","displayName":"Record Id","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":false},{"id":"OrganizationId","displayName":"OrganizationId","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"personid","displayName":"personid","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"f_name","displayName":"f_name","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"l_name","displayName":"l_name","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"leadEmail","displayName":"leadEmail","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"email_stauts","displayName":"email_stauts","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"delivered","value":"delivered"},{"name":"bounced","value":"bounced"},{"name":"opened","value":"opened"},{"name":"clicked","value":"clicked"},{"name":"spam","value":"spam"},{"name":"unsubscribed","value":"unsubscribed"},{"name":"pending","value":"pending"},{"name":"failed","value":"failed"},{"name":"verified","value":"verified"},{"name":"http://www.linkedin.com/in/michaelchen","value":"http://www.linkedin.com/in/michaelchen"}],"readOnly":false,"removed":true},{"id":"linkedin_url","displayName":"linkedin_url","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"headline","displayName":"headline","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"organization_name","displayName":"organization_name","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"industry","displayName":"industry","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"organizationwebsite","displayName":"organizationwebsite","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"city","displayName":"city","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"country","displayName":"country","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"state","displayName":"state","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"estimated_num_emp","displayName":"estimated_num_emp","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"number","readOnly":false,"removed":true},{"id":"organizatio_keywords0","displayName":"organizatio_keywords0","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"organizatio_keywords1","displayName":"organizatio_keywords1","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"organizatio_keywords2","displayName":"organizatio_keywords2","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"IceBreaker","displayName":"IceBreaker","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Phone Number","displayName":"Phone Number","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Mail Id For Sending","displayName":"Mail Id For Sending","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"send_status","displayName":"send_status","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"sent","value":"sent"},{"name":"not sent","value":"not sent"},{"name":"fail","value":"fail"}],"readOnly":false,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[6048,3536],"id":"12b711df-076c-4e19-bd92-635c13e2e0d6","name":"Update Status For Mail 1","credentials":{"airtableTokenApi":{"id":"lYx395AS3k5eJCOi","name":"We-wire-Account-test"}}},{"parameters":{"operation":"update","base":{"__rl":true,"value":"appl2wsINWrM8alBK","mode":"list","cachedResultName":"Apollo Leads","cachedResultUrl":"https://airtable.com/appl2wsINWrM8alBK"},"table":{"__rl":true,"value":"tbl9tJ931fzJqn5Fg","mode":"list","cachedResultName":"Email Counter","cachedResultUrl":"https://airtable.com/appl2wsINWrM8alBK/tbl9tJ931fzJqn5Fg"},"columns":{"mappingMode":"defineBelow","value":{"Emails":"={{ $json.email }}","Counter":"={{ $json.newCounter }}"},"matchingColumns":["Emails"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"string","readOnly":true,"removed":true},{"id":"Emails","displayName":"Emails","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Limit","displayName":"Limit","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"number","readOnly":false,"removed":true},{"id":"Counter","displayName":"Counter","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"number","readOnly":false,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[7648,3696],"id":"f9ae4b7b-0f76-4624-8e26-63fb4cb798ea","name":"Update Counter","credentials":{"airtableTokenApi":{"id":"lYx395AS3k5eJCOi","name":"We-wire-Account-test"}}},{"parameters":{"operation":"search","base":{"__rl":true,"value":"appl2wsINWrM8alBK","mode":"list","cachedResultName":"Apollo Leads","cachedResultUrl":"https://airtable.com/appl2wsINWrM8alBK"},"table":{"__rl":true,"value":"tbl9tJ931fzJqn5Fg","mode":"list","cachedResultName":"Email Counter","cachedResultUrl":"https://airtable.com/appl2wsINWrM8alBK/tbl9tJ931fzJqn5Fg"},"options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[3776,3712],"id":"ccbde410-8af0-4ce1-b341-d732b373ba59","name":"EmailCounter Table","credentials":{"airtableTokenApi":{"id":"lYx395AS3k5eJCOi","name":"We-wire-Account-test"}}},{"parameters":{"operation":"search","base":{"__rl":true,"value":"appl2wsINWrM8alBK","mode":"list","cachedResultName":"Apollo Leads","cachedResultUrl":"https://airtable.com/appl2wsINWrM8alBK"},"table":{"__rl":true,"value":"tblrgEj7t2XNxeo0S","mode":"list","cachedResultName":"Leads","cachedResultUrl":"https://airtable.com/appl2wsINWrM8alBK/tblrgEj7t2XNxeo0S"},"filterByFormula":"={{ '{send_status} = \\\"not sent\\\"' }}","options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[3968,3712],"id":"4a7945e5-a830-49a4-87ad-ca8890e56621","name":"Leads Table","executeOnce":true,"credentials":{"airtableTokenApi":{"id":"lYx395AS3k5eJCOi","name":"We-wire-Account-test"}}},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.senderEmail }}","rightValue":"haider.irenictech@gmail.com","operator":{"type":"string","operation":"equals"},"id":"72e84526-860e-49f8-af45-c919bd574eac"}],"combinator":"and"},"renameOutput":true,"outputKey":"haider.irenictech@gmail.com"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"a4d84cad-450d-414a-aa68-67ed03620338","leftValue":"={{ $json.senderEmail }}","rightValue":"iceicebaby0900@gmail.com","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"iceicebaby0900@gmail.com"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[5424,3728],"id":"7e629870-2059-4378-afa6-72821a4cbc57","name":"Route Between Emails"},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[5648,3536],"id":"20b70dc9-7c0f-4241-9a06-9561a80a72bf","name":"Batch Processing"},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[5632,3888],"id":"0bae6e5d-f473-42e7-b9c7-a2af4b0d753f","name":"Batch Processing 1"},{"parameters":{"content":"# Dynamic Round-Robin Email Outreach","height":2144,"width":6256,"color":2},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[2400,2736],"id":"97bad2c5-0d04-4fb1-8da5-ceccc931f197","name":"Sticky Note3"},{"parameters":{"sendTo":"haider.irenictech@gmail.com","subject":"Accounts Limit Reached!","emailType":"text","message":"=Just letting you know that all your email accounts have hit their daily sending limits. That means no new leads can be processed until the counters reset.\n\nHere’s the quick rundown:\n\nEvery account is currently at full capacity\n\nLead assignment has been paused for now\n\nThings will resume automatically once the limits refresh\n\nNo action needed from your side right now — just keep in mind that sending will pick back up once your accounts are ready again.","options":{"appendAttribution":false}},"type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[4656,3616],"id":"f0690bad-978f-4e5a-8c12-776063c1ac31","name":"Send Mail if Account Drained","webhookId":"1fd98343-e7ff-4f75-a94b-7cf676a6d483","credentials":{"gmailOAuth2":{"id":"dGFjRRdCcxA2JKoz","name":"Jamshed's Gmail account "}}},{"parameters":{"content":"## EmailCounter Table\n### - Fetch all email accounts with their current counter and limit values from Airtable.  \n### - This sets the baseline for email distribution capacity.\n\n## Leads Table\n### - Fetch leads from Airtable where `send_status = \"not sent\"`.  \n### - These are the pending leads that need outreach.\n\n## Assign Emails\n### - Round-robin assignment of leads across available sender accounts  \n### - while respecting quota limits (round robbin style).\n\n## Sen Email if Account Drained\n### - Sends an email to email to user if all acounts have reached there sending capacity","height":912,"width":1744},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[3200,3184],"id":"7d6f8e28-5ac8-4286-b66c-81362e40d918","name":"Sticky Note4"},{"parameters":{"content":"## Route Between Emails\n### - Route emails to the correct Gmail account based on the senderEmail (e.g., Irenic vs Ice).\n\n## Batch Processing\n### - Send emails one by one in batches to avoid hitting API limits.  \n### - Each loop processes one email at a time.\n\n## Send Email via Irenic Account\n### - Send personalized email via Gmail account: **irenictech@gmail.com**(example)\n\n## Send Email via Ice Account\n### - Send personalized email via Gmail account: **icebaby@gmail.com**(example)\n\n## Update Status For Mail\n### - Update Airtable lead record with `send_status = \"sent\"` and store Mail ID.\n\n## Wait\n### - Waits in between email sending.","height":1296,"width":1744,"color":3},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[4992,2992],"id":"e425da5a-7e58-4b09-ad34-47d4388b1038","name":"Sticky Note5"},{"parameters":{"content":"## Merge\n### - Collect results of sent emails from all Gmail accounts for consolidated processing.\n\n## Calculate Counter Updates\n### - Calculate new counter values for each sender account based on how many emails were actually sent.\n\n## Update Counters\n### - Update Airtable **Email Counter** table with the new counters.","height":704,"width":1104,"color":4},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[6784,3392],"id":"6ae469c6-8f63-4328-bbca-236f17a7bd96","name":"Sticky Note6"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"34a107a1-45f8-4f14-8680-45deaad83d15","leftValue":"={{ $json.status }}","rightValue":"drained","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[4400,3712],"id":"935d2b4f-5da6-47a5-a1ed-5ced92e5db84","name":"If1"},{"parameters":{"operation":"update","base":{"__rl":true,"value":"appl2wsINWrM8alBK","mode":"list","cachedResultName":"Apollo Leads","cachedResultUrl":"https://airtable.com/appl2wsINWrM8alBK"},"table":{"__rl":true,"value":"tblrgEj7t2XNxeo0S","mode":"list","cachedResultName":"Leads","cachedResultUrl":"https://airtable.com/appl2wsINWrM8alBK/tblrgEj7t2XNxeo0S"},"columns":{"mappingMode":"defineBelow","value":{"send_status":"sent","Record Id":"={{ $('Route Between Emails').item.json.recordId }}","Mail Id For Sending":"={{ $json.id }}"},"matchingColumns":["Record Id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"string","readOnly":true,"removed":true},{"id":"Record Id","displayName":"Record Id","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":false},{"id":"OrganizationId","displayName":"OrganizationId","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"personid","displayName":"personid","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"f_name","displayName":"f_name","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"l_name","displayName":"l_name","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"leadEmail","displayName":"leadEmail","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"email_stauts","displayName":"email_stauts","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"delivered","value":"delivered"},{"name":"bounced","value":"bounced"},{"name":"opened","value":"opened"},{"name":"clicked","value":"clicked"},{"name":"spam","value":"spam"},{"name":"unsubscribed","value":"unsubscribed"},{"name":"pending","value":"pending"},{"name":"failed","value":"failed"},{"name":"verified","value":"verified"},{"name":"http://www.linkedin.com/in/michaelchen","value":"http://www.linkedin.com/in/michaelchen"}],"readOnly":false,"removed":true},{"id":"linkedin_url","displayName":"linkedin_url","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"headline","displayName":"headline","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"organization_name","displayName":"organization_name","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"industry","displayName":"industry","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"organizationwebsite","displayName":"organizationwebsite","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"city","displayName":"city","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"country","displayName":"country","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"state","displayName":"state","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"estimated_num_emp","displayName":"estimated_num_emp","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"number","readOnly":false,"removed":true},{"id":"organizatio_keywords0","displayName":"organizatio_keywords0","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"organizatio_keywords1","displayName":"organizatio_keywords1","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"organizatio_keywords2","displayName":"organizatio_keywords2","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"IceBreaker","displayName":"IceBreaker","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Phone Number","displayName":"Phone Number","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Mail Id For Sending","displayName":"Mail Id For Sending","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"send_status","displayName":"send_status","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"sent","value":"sent"},{"name":"not sent","value":"not sent"},{"name":"fail","value":"fail"}],"readOnly":false,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[6128,3904],"id":"fd76c3a1-ba8c-48a8-87f0-cddcf5dbbb4e","name":"Update Status For Mail ","credentials":{"airtableTokenApi":{"id":"lYx395AS3k5eJCOi","name":"We-wire-Account-test"}}}],"connections":{"Calculate Counter Updates":{"main":[[{"node":"Update Counter","type":"main","index":0}]]},"Assign Emails":{"main":[[{"node":"If1","type":"main","index":0}]]},"Irenic":{"main":[[{"node":"Update Status For Mail 1","type":"main","index":0}]]},"Ice":{"main":[[{"node":"Update Status For Mail ","type":"main","index":0}]]},"When clicking ‘Execute workflow’":{"main":[[{"node":"EmailCounter Table","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Calculate Counter Updates","type":"main","index":0}]]},"Wait":{"main":[[{"node":"Batch Processing","type":"main","index":0}]]},"Wait1":{"main":[[{"node":"Batch Processing 1","type":"main","index":0}]]},"Update Status For Mail 1":{"main":[[{"node":"Wait","type":"main","index":0}]]},"EmailCounter Table":{"main":[[{"node":"Leads Table","type":"main","index":0}]]},"Leads Table":{"main":[[{"node":"Assign Emails","type":"main","index":0}]]},"Route Between Emails":{"main":[[{"node":"Batch Processing","type":"main","index":0}],[{"node":"Batch Processing 1","type":"main","index":0}]]},"Batch Processing":{"main":[[{"node":"Merge","type":"main","index":0}],[{"node":"Irenic","type":"main","index":0}]]},"Batch Processing 1":{"main":[[{"node":"Merge","type":"main","index":1}],[{"node":"Ice","type":"main","index":0}]]},"If1":{"main":[[{"node":"Send Mail if Account Drained","type":"main","index":0}],[{"node":"Route Between Emails","type":"main","index":0}]]},"Update Status For Mail ":{"main":[[{"node":"Wait1","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"16995819-324d-428c-8c73-4f48268d1eea","triggerCount":0,"shared":[{"createdAt":"2025-09-05T12:45:28.384Z","updatedAt":"2025-09-05T12:45:28.384Z","role":"workflow:owner","workflowId":"I4S0N5tCP7g89Luq","projectId":"6EdZFkSJTSDUHwBl"}],"tags":[]}