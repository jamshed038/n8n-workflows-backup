{"createdAt":"2025-08-08T09:16:37.885Z","updatedAt":"2025-08-11T07:30:02.000Z","id":"EQzPk037ycP7HbJz","name":"Client-Rivision-Precise-Grants","active":false,"isArchived":false,"nodes":[{"parameters":{"jsCode":"// Wrap each incoming item inside a `chatInput` key\nreturn items.map(item => {\n  return {\n    json: {\n      chatInput: item.json\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1568,656],"id":"4ccb1cb7-3410-4c00-9d7c-f4ab825f95c4","name":"Wrap into chatInput"},{"parameters":{"assignments":{"assignments":[{"id":"e7ee03ac-13e3-4fca-a7bc-57c8fc56dc42","name":"document_name","value":"=LEGAL FORMATION OUTPUT DOCUMENT","type":"string"},{"id":"48a07ef2-ae46-4bfc-aa7e-d92a74ef46d6","name":"html_content","value":"={{ $json.data }}","type":"string"},{"id":"22b02fba-ba72-423a-b92f-1191a183a554","name":"drive_folder_id","value":"1g5VR97sP3DjUPTbE4LzEdw27Hgb-JLa1","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[4080,816],"id":"5a5dba13-a85b-4495-a0e0-9ff4c7bef595","name":"Prepare Upload Fields","notesInFlow":true},{"parameters":{"method":"POST","url":"https://www.googleapis.com/upload/drive/v3/files","authentication":"predefinedCredentialType","nodeCredentialType":"googleDriveOAuth2Api","sendQuery":true,"queryParameters":{"parameters":[{"name":"uploadType","value":"multipart"},{"name":"supportsAllDrives","value":"true"}]},"sendBody":true,"contentType":"raw","rawContentType":"multipart/related; boundary=divider","body":"={{ $json.rawData }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4496,816],"id":"e0d3d91b-62a7-4aa9-9255-91622add4f7a","name":"Upload to Google Docs","notesInFlow":true,"credentials":{"googleDriveOAuth2Api":{"id":"RO1XYx2xtjvQILlF","name":"Jamshed's Drive account"}}},{"parameters":{"content":"# Markdown to HTML \n## Converts markdown-format SOP into styled HTML for Google Drive compatibility.\n\n# Build Google Docs Request\n## Sets file name, folder ID, and HTML content for Google Docs upload.\n\n# Multipart Builder \n## Formats HTML and metadata into multipart format for Drive upload with proper boundaries.\n\n# Upload to Google Docs \n## Uploads the formatted HTML to Google Drive as a new Google Doc inside a specific folder.\n\n#  Airtable Logging \n## Saves the generated document’s metadata and link in Airtable.\n\n\n\n\n","height":1104,"width":1616,"color":7},"type":"n8n-nodes-base.stickyNote","position":[3264,144],"typeVersion":1,"id":"9c1a41fe-93bf-454d-bc27-730123229239","name":"Sticky Note2"},{"parameters":{"mode":"markdownToHtml","markdown":"={{ $json.output }}","options":{}},"type":"n8n-nodes-base.markdown","typeVersion":1,"position":[3872,816],"id":"f940f0fd-1734-4062-9b4d-6200c3bca898","name":"Markdown2"},{"parameters":{"content":"# Edit Fields\t\n## Set Static JSON Input — Provides sample organization and program data for the workflow to test against.\n\n# Code\t\n## Wrap into chatInput — Wraps incoming data under chatInput to match Langchain agent's expected structure.","height":1072,"width":1424},"type":"n8n-nodes-base.stickyNote","position":[528,160],"typeVersion":1,"id":"e0de1be8-2ebd-4ff9-95a6-7eeeee62a28a","name":"Sticky Note3"},{"parameters":{"content":" # VISION VALIDATION & POSITIONING REPORT AGENT\n## Generates SOP with 4 customized sections using the input data and system prompt.","height":1088,"width":1008,"color":6},"type":"n8n-nodes-base.stickyNote","position":[2096,160],"typeVersion":1,"id":"ac1b472b-04a7-4d03-a05e-1966a793a9d0","name":"Sticky Note4"},{"parameters":{"model":{"__rl":true,"value":"gpt-4o","mode":"list","cachedResultName":"gpt-4o"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2288,608],"id":"a349b740-9b90-4591-932e-be4091c860f1","name":"OpenAI Chat Model3","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"content":"\n\n# VISION VALIDATION & POSITIONING REPORT\n","height":1616,"width":5136,"color":3},"type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1,"id":"5874ac3e-33e9-4e2b-b4ef-6cbee7f8a8a7","name":"Sticky Note"},{"parameters":{"sessionIdType":"customKey","sessionKey":"=sop-document","tableName":"n8n_sop_document_histories"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[2448,608],"id":"4eba1fb5-374a-41d8-b4f4-1f582f28a6a5","name":"SOP Document Memory","credentials":{"postgres":{"id":"RVvoTUjJJ1ESHsVt","name":"Precise-grant"}}},{"parameters":{"description":"=Your Work is to fetch the tone of content which you get from the pinecone Vector Store.","topK":"=40"},"type":"@n8n/n8n-nodes-langchain.toolVectorStore","typeVersion":1.1,"position":[2640,608],"id":"8c960038-6583-4225-9c24-3f0d5c3635a7","name":"RAGTOOL"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2944,848],"id":"ee366c91-7483-4e96-958c-6dbb62ab6ea5","name":"OpenAI Chat Model2","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"pineconeIndex":{"__rl":true,"value":"clienttesting","mode":"list","cachedResultName":"clienttesting"},"options":{"pineconeNamespace":"Sample Documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStorePinecone","typeVersion":1.3,"position":[2576,864],"id":"570a2158-3c00-4018-87c1-4e03777b30fc","name":"Pinecone Vector Store5","credentials":{"pineconeApi":{"id":"INUAJbteVgOCaL5J","name":"Jamshed's PineconeApi account "}}},{"parameters":{"model":"text-embedding-3-large","options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[2576,1072],"id":"f9a33ae0-f258-4789-8b77-84959cdb6e45","name":"Embeddings OpenAI6","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"jsCode":"const input = $json.output;\n\n// Dynamically remove the first paragraph that mentions \"tone\" or \"style\" and is followed by SOP content\nconst cleanedOutput = input.replace(\n  /^(.*?(tone|style)[\\s\\S]*?)(?=^# Standard Operating Procedure|^## Standard Operating Procedure|^---\\n# Standard Operating Procedure)/im,\n  ''\n);\n\nreturn {\n  json: {\n    output: cleanedOutput.trim()\n  }\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2720,320],"id":"e615c562-4d0c-48c2-a44e-665e2c7ace3e","name":"Code5"},{"parameters":{"jsCode":"const boundary = 'divider';\nconst docName = $input.first().json.document_name;\nconst folderId = $input.first().json.drive_folder_id;\nconst htmlContent = $input.first().json.html_content;\n\nfunction preserveLinksAndHeadings(html) {\n  let processedHtml = html;\n\n  // Fix <a> tags\n  processedHtml = processedHtml.replace(/<a\\s+href=[\"']([^\"']+)[\"'][^>]*>(.*?)<\\/a>/gi, '<a href=\"$1\">$2</a>');\n  processedHtml = processedHtml.replace(/<a\\s+href=[\"'](?!https?:\\/\\/|mailto:|tel:)([^\"']+)[\"']>/gi, '<a href=\"https://$1\">');\n\n  // Replace <strong> headings with blue H2\n  processedHtml = processedHtml.replace(/<strong>(.*?)<\\/strong>\\s*(?=<br|<\\/p|<em|<ul|$)/gi, '<h2 style=\"color:#1155cc; margin:0;\">$1</h2>');\n\n  return processedHtml;\n}\n\nfunction convertLastHeadingToTable(html) {\n  const regex = /(<strong>MARKET POSITIONING SUMMARY<\\/strong>[\\s\\S]*?)(<p><em>|<ul>|<\\/body>|<\\/html>|$)/i;\n  const match = html.match(regex);\n  if (!match) return html;\n\n  const sectionHtml = match[1];\n\n  const pairs = [];\n\n  // 1. Try markdown-style table first\n  const mdTableRegex = /\\|([^|]+)\\|([^|]+)\\|/g;\n  let mdMatch;\n  while ((mdMatch = mdTableRegex.exec(sectionHtml)) !== null) {\n    const key = mdMatch[1].trim();\n    const value = mdMatch[2].trim();\n    if (key && value) pairs.push({ key, value });\n  }\n\n  // 2. Try <strong>Key</strong>: Value pattern\n  if (pairs.length === 0) {\n    const kvRegex = /<strong>(.*?)<\\/strong>\\s*:\\s*([^<]+)(?:<br\\s*\\/?>)?/gi;\n    let kvMatch;\n    while ((kvMatch = kvRegex.exec(sectionHtml)) !== null) {\n      pairs.push({ key: kvMatch[1].trim(), value: kvMatch[2].trim() });\n    }\n  }\n\n  // 3. Fallback: detect \"Key   Value\" (spaces or tabs) or \"Key<br>Value\"\n  if (pairs.length === 0) {\n    // Remove strong tags for easier parsing\n    let textOnly = sectionHtml\n      .replace(/<strong>/gi, \"\")\n      .replace(/<\\/strong>/gi, \"\")\n      .replace(/<br\\s*\\/?>/gi, \"\\n\");\n\n    // Split lines and extract pairs\n    textOnly.split(\"\\n\").forEach(line => {\n      const clean = line.trim().replace(/\\s+/g, \" \");\n      if (!clean) return;\n      const parts = clean.split(/\\s{2,}|:\\s*/); // 2+ spaces or colon\n      if (parts.length >= 2) {\n        pairs.push({\n          key: parts[0].trim(),\n          value: parts.slice(1).join(\" \").trim()\n        });\n      }\n    });\n  }\n\n  if (pairs.length === 0) return html; // nothing to convert\n\n  // Build table HTML\n  const rows = pairs.map(({ key, value }) => `\n    <tr>\n      <td style=\"border:1px solid black; padding:6px; font-weight:bold; width:40%;\">${key}</td>\n      <td style=\"border:1px solid black; padding:6px; width:60%;\">${value}</td>\n    </tr>\n  `).join('');\n\n  const tableHtml = `\n    <h2 style=\"color:#1155cc; margin:0;\">Market Positioning Summary</h2>\n    <table style=\"border-collapse:collapse; width:100%; font-family:Calibri, sans-serif; font-size:11pt; margin-top:4px;\">\n      ${rows}\n    </table>\n  `;\n\n  return html.replace(sectionHtml, tableHtml);\n}\n\n\nconst processedHtmlContent = convertLastHeadingToTable(\n  preserveLinksAndHeadings(htmlContent)\n);\n\nconst htmlWithStyles = `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <style>\n    body {\n      font-family: Calibri, sans-serif;\n      font-size: 11pt;\n      color: #000000;\n    }\n    p {\n      margin: 0;\n    }\n    h2 {\n      font-family: Calibri, sans-serif;\n      font-size: 13pt;\n      font-weight: bold;\n      margin: 0;\n      color: #1155cc;\n    }\n    a {\n      color: #1155cc;\n      text-decoration: underline;\n    }\n    table {\n      margin-top: 4px;\n    }\n  </style>\n</head>\n<body>\n  ${processedHtmlContent}\n</body>\n</html>\n`;\n\nconst metadata = JSON.stringify({\n  name: docName,\n  mimeType: \"application/vnd.google-apps.document\",\n  parents: [folderId]\n});\n\nlet body = `--${boundary}\\r\\n`;\nbody += `Content-Type: application/json; charset=UTF-8\\r\\n\\r\\n`;\nbody += `${metadata}\\r\\n`;\nbody += `--${boundary}\\r\\n`;\nbody += `Content-Type: text/html\\r\\n\\r\\n`;\nbody += `${htmlWithStyles}\\r\\n`;\nbody += `--${boundary}--\\r\\n`;\n\nreturn {\n  rawData: body\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4272,816],"id":"40196231-57f4-4808-a23a-8ec3db04e803","name":"Build Google Docs Request3"},{"parameters":{"operation":"update","base":{"__rl":true,"value":"appKmOMoTZqvMAXNT","mode":"list","cachedResultName":"Precise-Grants","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT"},"table":{"__rl":true,"value":"tblVsYwR8xmmrw797","mode":"list","cachedResultName":"Stage1-Validate-the-vision","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT/tblVsYwR8xmmrw797"},"columns":{"mappingMode":"defineBelow","value":{"Generated Doc Link":"=https://docs.google.com/document/d/{{ $json.id }}/edit?tab=t.0 ","RecordId":"={{ $('Webhook').item.json.body.record_id }}"},"matchingColumns":["RecordId"],"schema":[{"id":"RecordId","displayName":"RecordId","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":false},{"id":"Id","displayName":"Id","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":false},{"id":"Generated Doc Link","displayName":"Generated Doc Link","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Question1","displayName":"Question1","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question2","displayName":"Question2","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question3","displayName":"Question3","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question4","displayName":"Question4","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question5","displayName":"Question5","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question6","displayName":"Question6","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question7","displayName":"Question7","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question8","displayName":"Question8","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question9","displayName":"Question9","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question10","displayName":"Question10","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question11","displayName":"Question11","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[4720,816],"id":"ff9e655e-5824-444a-998d-509034298323","name":"Airtable Logging","credentials":{"airtableTokenApi":{"id":"c6IbQTcvLSXeD2At","name":"Client-Main-Precise-Grant"}}},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[912,6704],"id":"0813b1c9-a89e-4886-9137-5ab97c89fc9d","name":"When clicking ‘Execute workflow’"},{"parameters":{"jsCode":"// Wrap each incoming item inside a `chatInput` key\nreturn items.map(item => {\n  return {\n    json: {\n      chatInput: item.json\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2336,2224],"id":"634e3ac9-3a07-465d-b3bc-56eca3d15d85","name":"Wrap into chatInput1"},{"parameters":{"assignments":{"assignments":[{"id":"e7ee03ac-13e3-4fca-a7bc-57c8fc56dc42","name":"document_name","value":"=Legal Formation Output Document","type":"string"},{"id":"48a07ef2-ae46-4bfc-aa7e-d92a74ef46d6","name":"html_content","value":"={{ $json.data }}","type":"string"},{"id":"22b02fba-ba72-423a-b92f-1191a183a554","name":"drive_folder_id","value":"1g5VR97sP3DjUPTbE4LzEdw27Hgb-JLa1","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[4080,2720],"id":"5dc4b268-3b5d-49b7-8c76-2337742299ab","name":"Prepare Upload Fields1","notesInFlow":true},{"parameters":{"method":"POST","url":"https://www.googleapis.com/upload/drive/v3/files","authentication":"predefinedCredentialType","nodeCredentialType":"googleDriveOAuth2Api","sendQuery":true,"queryParameters":{"parameters":[{"name":"uploadType","value":"multipart"},{"name":"supportsAllDrives","value":"true"}]},"sendBody":true,"contentType":"raw","rawContentType":"multipart/related; boundary=divider","body":"={{ $json.rawData }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4496,2720],"id":"3ac11a06-9725-4ebd-9484-e5b6c71da012","name":"Upload to Google Docs1","notesInFlow":true,"credentials":{"googleDriveOAuth2Api":{"id":"RO1XYx2xtjvQILlF","name":"Jamshed's Drive account"}}},{"parameters":{"content":"# Markdown to HTML \n## Converts markdown-format SOP into styled HTML for Google Drive compatibility.\n\n# Build Google Docs Request\n## Sets file name, folder ID, and HTML content for Google Docs upload.\n\n# Multipart Builder \n## Formats HTML and metadata into multipart format for Drive upload with proper boundaries.\n\n# Upload to Google Docs \n## Uploads the formatted HTML to Google Drive as a new Google Doc inside a specific folder.\n\n#  Airtable Logging \n## Saves the generated document’s metadata and link in Airtable.\n\n\n\n\n","height":1152,"width":1616,"color":7},"type":"n8n-nodes-base.stickyNote","position":[3488,2016],"typeVersion":1,"id":"90f58822-8f98-441b-96c4-a049c3c94925","name":"Sticky Note5"},{"parameters":{"mode":"markdownToHtml","markdown":"={{ $json.output }}","options":{}},"type":"n8n-nodes-base.markdown","typeVersion":1,"position":[3856,2720],"id":"1171a69e-1e07-48b8-8387-c6912610e2eb","name":"Markdown"},{"parameters":{"content":"# Edit Fields\t\n## Set Static JSON Input — Provides sample organization and program data for the workflow to test against.\n\n# Code\t\n## Wrap into chatInput — Wraps incoming data under chatInput to match Langchain agent's expected structure.","height":1072,"width":1872},"type":"n8n-nodes-base.stickyNote","position":[144,2064],"typeVersion":1,"id":"42de5575-f6a6-4047-af1a-a73b14210fc7","name":"Sticky Note6"},{"parameters":{"content":" # Legal Formation Output Document AGENT\n## Generates SOP with 4 customized sections using the input data and system prompt.","height":1088,"width":1328,"color":6},"type":"n8n-nodes-base.stickyNote","position":[2080,2064],"typeVersion":1,"id":"b9b6194a-ec2a-4eb8-ba4c-4505203d4c97","name":"Sticky Note7"},{"parameters":{"model":{"__rl":true,"value":"gpt-4o","mode":"list","cachedResultName":"gpt-4o"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2528,2496],"id":"f2f8f1da-592a-4fd0-a609-7d1587156f4e","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"content":"\n\n# Legal Formation Output Document\n","height":1616,"width":5136,"color":3},"type":"n8n-nodes-base.stickyNote","position":[0,1904],"typeVersion":1,"id":"6752f727-ad43-46b7-a694-8bb6ab236bab","name":"Sticky Note1"},{"parameters":{"sessionIdType":"customKey","sessionKey":"=sop-document","tableName":"n8n_sop_document_histories"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[2368,2576],"id":"d37a7aaf-69a7-488f-bdb6-707d5b34d4d1","name":"SOP Document Memory1","credentials":{"postgres":{"id":"RVvoTUjJJ1ESHsVt","name":"Precise-grant"}}},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[3184,2736],"id":"f4eb90e9-8739-412d-a028-ddd359e53a88","name":"OpenAI Chat Model4","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"pineconeIndex":{"__rl":true,"value":"clienttesting","mode":"list","cachedResultName":"clienttesting"},"options":{"pineconeNamespace":"Sample Documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStorePinecone","typeVersion":1.3,"position":[2816,2752],"id":"dd676a83-b089-402b-bcb5-6b829fc0d119","name":"Pinecone Vector Store","credentials":{"pineconeApi":{"id":"INUAJbteVgOCaL5J","name":"Jamshed's PineconeApi account "}}},{"parameters":{"model":"text-embedding-3-large","options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[2816,2960],"id":"c106c112-ac74-4c72-b420-cdc62d064cc3","name":"Embeddings OpenAI","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"jsCode":"const input = $json.output;\n\n// Dynamically remove the first paragraph that mentions \"tone\" or \"style\" and is followed by SOP content\nconst cleanedOutput = input.replace(\n  /^(.*?(tone|style)[\\s\\S]*?)(?=^# Standard Operating Procedure|^## Standard Operating Procedure|^---\\n# Standard Operating Procedure)/im,\n  ''\n);\n\nreturn {\n  json: {\n    output: cleanedOutput.trim()\n  }\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2880,2224],"id":"d1173b32-58cc-4c96-b664-7a9fd93d05cc","name":"Code"},{"parameters":{"jsCode":"const boundary = 'divider';\nconst docName = $input.first().json.document_name;\nconst folderId = $input.first().json.drive_folder_id;\nconst htmlContent = $input.first().json.html_content;\nconst orgName = $input.first().json[\"Organization Name\"] || \"Organization\";\n\n// Optional: prepend org name at top (if needed)\nconst orgHeader = `\n  <p style=\"font-family:Calibri;\"><strong>Organization:</strong> ${orgName}</p>\n`;\n\n// Process HTML to ensure links are preserved\nfunction preserveLinks(htmlContent) {\n    let processedHtml = htmlContent;\n\n    // Fix incomplete or malformed anchor tags\n    processedHtml = processedHtml.replace(/<a\\s+href=[\"']([^\"']+)[\"'][^>]*>(.*?)<\\/a>/gi, '<a href=\"$1\">$2</a>');\n\n    // Ensure all links use proper protocols\n    processedHtml = processedHtml.replace(\n      /<a\\s+href=[\"'](?!https?:\\/\\/|mailto:|tel:)([^\"']+)[\"']>/gi,\n      '<a href=\"https://$1\">'\n    );\n\n    return processedHtml;\n}\n\nconst metadata = JSON.stringify({\n  name: docName,\n  mimeType: \"application/vnd.google-apps.document\",\n  parents: [folderId]\n});\n\nconst processedHtmlContent = preserveLinks(htmlContent);\n\nconst htmlWithStyles = `<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <style>\n    body {\n      font-family: Calibri, sans-serif;\n      color: #000;\n    }\n    h1, h2, h3, h4, h5, h6 {\n      color: #1155cc;\n      margin-top: 20pt;\n      margin-bottom: 10pt;\n    }\n    p, ul, ol, table {\n      margin-bottom: 10pt;\n    }\n    li {\n      margin-bottom: 2pt;\n    }\n    a {\n      color: #1155cc;\n      text-decoration: underline;\n    }\n    table {\n      border-collapse: collapse;\n    }\n    th, td {\n      border: 1px solid #000;\n      padding: 6pt;\n    }\n    thead {\n      background-color: #f2f2f2;\n    }\n  </style>\n</head>\n<body>\n  ${processedHtmlContent}\n</body>\n</html>`;\n\nlet body = `--${boundary}\\r\\n`;\nbody += `Content-Type: application/json; charset=UTF-8\\r\\n\\r\\n`;\nbody += `${metadata}\\r\\n`;\nbody += `--${boundary}\\r\\n`;\nbody += `Content-Type: text/html\\r\\n\\r\\n`;\nbody += `${htmlWithStyles}\\r\\n`;\nbody += `--${boundary}--\\r\\n`;\n\nreturn {\n  rawData: body\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4304,2720],"id":"c9b1577c-8146-4fb2-9e5b-7d83e4387fe0","name":"Build Google Docs Request"},{"parameters":{"options":{"systemMessage":"=🛑 DO NOT START UNTIL THIS IS DONE:\n🚨 MANDATORY FIRST ACTION — USE RagTool\nAs your first and immediate step, you are required to call the RagTool to retrieve the tone, language, and formatting style of the document titled:\n\"Vision Validation & Positioning Report\"\nThis document is stored in Pinecone under the namespace: \"vision validation & positioning\".\n\n❗ You must use this exact document as your tone/style guide before proceeding.\n❗ DO NOT begin generating the report output unless the RagTool is successfully used first and returns a reference document.\n❗ If RagTool is not available, you must halt and throw an error:\n\"RagTool not used — Cannot proceed without retrieving style reference document.\"\n\n\n🚨 MANDATORY SECOND ACTION — USE Document TOOL\nYou must call the Document tool to retrieve the full and complete Vision Validation & Positioning Report template.\nThis ensures you know all required headings and structure for the final report.\n\n❗ The Document tool is the only source for the full report outline and mandatory sections.\n\n❗ If any section headings from the Document tool’s output are missing in the structured input, you must still generate professional, relevant, and consistent content for them using the style and tone from the RagTool reference document.\n\n❗ If the Document tool is not available, you must halt and throw an error:\n\"Document tool not used — Cannot proceed without retrieving full template.\"\n\n\n\n🧠 Your Role:\nYou are an AI Agent tasked with generating a polished Vision Validation & Positioning Report using structured intake data in JSON format.\n\n- Your tone, style, and formatting must exactly match the RagTool reference document.\n- Your section headings and structure must exactly match the Document tool’s template.\n- Any section not provided in the intake JSON must still be generated in a manner consistent with both tools’ guidance.\n\n---\n\n## 📝 Example Format (For RagTool Style Retrieval):\nUse the following reference document to guide your output tone and formatting. You must retrieve it via the RagTool:\n\n**VISION VALIDATION & POSITIONING REPORT**  \nOrganization Name: Precise Impact Foundation  \nDate: [Auto-generated]  \nPrepared by: Smart Systems | PreciseGrants\n\n**1. THE PROBLEM YOU’RE SOLVING**  \nYour nonprofit is focused on addressing: Youth unemployment in under-resourced communities.  \nAI Insight: Based on your response, this issue is deeply tied to...\n\n**2. WHO IS MOST AFFECTED**  \nYoung Black men aged 16–24 in Atlanta...  \nAI Insight: You are targeting a high-need demographic...\n\n... (and so on for each section included in the Document tool’s template.)\n\n## 🧠 Your Task:\n\nNow, generate the final Vision Validation & Positioning Report using this provided JSON:\n\n```json\n{\n  \"Organization Name\": \"XYZ-Organization\",\n  \"issue_being_solved\": \"{{ $json.chatInput.Question1 }}\",\n  \"most_affected\": \"{{ $json.chatInput.Question2 }}\",\n  \"why_now\": \"{{ $json.chatInput.Question3 }}\",\n  \"researched_similar_nonprofits\": \"{{ $json.chatInput.Question4 }}\",\n  \"their_gaps_or_weaknesses\": \"{{ $json.chatInput.Question5 }}\",\n  \"unique_solution\": \"{{ $json.chatInput.Question6 }}\",\n  \"mvp\": \"{{ $json.chatInput.Question7 }}\",\n  \"initial_population\": \"{{ $json.chatInput.Question8 }}\",\n  \"success_metrics\": \"{{ $json.chatInput.Question9 }}\",\n  \"want_mvp_help\": \"{{ $json.chatInput.Question10 }}\",\n  \"email\": \"{{ $json.chatInput.Question11 }}\"\n}\n\n🎨 Use Calibri font and format all section headers in bold and blue like **1. THE PROBLEM YOU'RE SOLVING**.\n\n✨ Include relevant AI Insights under each section based on the tone/style of the reference document, maintaining brevity and value.\n\n✨ Under each section, include concise AI Insight content that aligns with the tone of the original report retrieved using RagTool.\n\n📌 ## FINAL MANDATORY SECTION\nAt the end of the report, always append the following section titled:\nMARKET POSITIONING SUMMARY\n\n Area                           Atlanta, GA                                       \n Niche                          Youth workforce & leadership for Black male teens \n Unique Methodology             Fitness + Financial Literacy + Mentorship         \n Regional Gap                   Few culturally relevant programs in  SW Atlanta   \n MVP Focus                      8-week in-person training (pilot cohort of 15)    \n\nRULES:\nDo not copy example/sample values — all fields must be generated from the provided input data or context in the report.\n\nIf exact information is missing, infer logically from the input content while staying contextually accurate.\n\nKeep entries short, precise, and professional (max 12–15 words per cell).\n\nThe sequence is non-negotiable:\nStep 1 → RagTool retrieval (tone/style guide)\nStep 2 → Document tool retrieval (source template)\nStep 3 → Report generation with final section appended.\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[2368,320],"id":"9a6e1e4b-291a-4e79-8b40-1ad60609535d","name":"VISION VALIDATION & POSITIONING REPORT"},{"parameters":{"options":{"systemMessage":"=🚨 MANDATORY FIRST ACTION — USE \"Tone & Format Fetcher\" TOOL\n✅ You must immediately and successfully call the tool titled:\nTone & Format Fetcher\nto retrieve the exact tone, structure, formatting, and writing style from the relevant style reference document.\n\n📄 For this task, the reference document is:\n\"Legal Formation Output Document\"\nlocated under the Pinecone namespace: \"Legal Formation Output Document\"\n\n⚠️ NON-NEGOTIABLE REQUIREMENT\n❗ This is required without exception.\n❗ You may not proceed with generating any output unless the Tone & Format Fetcher tool is used first and returns a valid reference document.\n❗ The formatting, style, and tone of your output must match the fetched reference.\n\n\n🚨 MANDATORY SECOND ACTION — USE Document TOOL\nYou must call the Document tool to retrieve the full and complete Vision Validation & Positioning Report template.\nThis ensures you know all required headings and structure for the final report.\n\n❗ The Document tool is the only source for the full report outline and mandatory sections.\n\n❗ If any section headings from the Document tool’s output are missing in the structured input, you must still generate professional, relevant, and consistent content for them using the style and tone from the RagTool reference document.\n\n❗ If the Document tool is not available, you must halt and throw an error:\n\"Document tool not used — Cannot proceed without retrieving full template.\"\n\n\n🧠 Your Role\nYou are generating a Legal Formation Output Document using:\n- Structured JSON intake data from the form.\n- Full template content from the Document tool.\n\nYour final output must:\n- Exactly match the style/tone/formatting from the Tone & Format Fetcher reference.\n- Exactly match the headings, subheadings, and structure from the Document tool output.\n- Preserve all fixed wording, numbering, and subsections from the Document tool unless inserting JSON values.\n\n---\n\n🔷 MANDATORY INSTRUCTIONS\n1. DOCUMENT STYLE REQUIREMENTS\n- Section headers: <h3> tags, bold and blue (#1155cc).\n- Body text & tables: Calibri font.\n- Checklist: clean, aligned HTML table.\n- Horizontal rule <hr /> after major sections.\n\n2. TASK INSTRUCTIONS\n- Use checklist format from the reference.\n- Show Task, Status, and Notes exactly as in the reference order.\n- If \"No\", always give a helpful note.\n- If no issue, write \"N/A\".\n- Do not reword or skip checklist items.\n\n3. ADDITIONAL HEADINGS — ENFORCED FULL CONTENT REUSE\nFor any heading from the Document tool’s template that has no corresponding JSON input:\n\n- Always include the heading exactly as in the Document tool output — same wording, order, and formatting.\n- If the Document tool provides body content for that heading:\n- Insert that exact text, word-for-word, into the final output.\n- Preserve all original subsections, numbering, bullet points, formatting, and embedded clauses.\n- Only modify to insert dynamic JSON values where placeholders exist.\n- You are strictly prohibited from replacing, summarizing, shortening, paraphrasing, or omitting any part of the Document tool’s provided text for that heading.\n\nIf the Document tool provides a heading but no body content:\n- Generate professional, relevant text in the exact tone/style from the Tone & Format Fetcher reference.\n- All headings, subheadings, and fixed text must match the Document tool output exactly — no renaming, no reordering, no omissions.\n\n---\n\n## 🧠 JSON INPUT (STRUCTURED DATA)\nUse the following structured input values:\n\n```json\n{\n  \"Nonprofit Name\": \"{{ $json.chatInput.Question1 }}\",\n  \"Filed Articles of Incorporation\": \"{{ $json.chatInput.Question2 }}\",\n  \"Incorporation State\": \"{{ $json.chatInput.Question3 }}\",\n  \"Included IRS Clauses\": \"{{ $json.chatInput.Question4 }}\",\n  \"Received EIN\": \"{{ $json.chatInput.Question5 }}\",\n  \"Drafted Bylaws\": \"{{ $json.chatInput.Question6 }}\",\n  \"Conflict of Interest Policy\": \"{{ $json.chatInput.Question7 }}\",\n  \"Submitted 1023EZ Form\": \"{{ $json.chatInput.Question8 }}\",\n  \"1023EZ Issues or Questions\": \"{{ $json.chatInput.Question9 }}\",\n  \"Precision Review Requested\": \"{{ $json.chatInput.Question10 }}\",\n  \"Draft Form Uploaded\": \"{{ $json.chatInput.Question11 }}\",\n  \"Contact Email\": \"{{ $json.chatInput.Question12 }}\"\n}\n\n\n📄 OUTPUT TEMPLATE REQUIREMENTS\nFormat the final output like this (use real values dynamically):\n- All headings and their order must come from the Document tool output — no renaming, reordering, or omission.\n\n- If a heading exists in the Document tool output but has no corresponding JSON input, you must insert the exact body text from the Document tool for that section, word-for-word, with all formatting preserved.\n\n- If the Document tool provides no body text for that heading, generate professional, relevant, and logically consistent content in the style from the Tone & Format Fetcher reference.\n\n- You may only edit the Document tool text to insert relevant JSON values into placeholders.\n\n- No section may be left blank. No placeholder phrases like “This section will contain…” are allowed unless that is the exact text from the Document tool.\n\n<h3 style=\"color:#1155cc;\"><strong>LEGAL FORMATION OUTPUT DOCUMENT</strong></h3>\n\n<p style=\"font-family:Calibri;\"><strong>Organization Name:</strong> {{ $json.chatInput.Question1 }}</p>\n<p style=\"font-family:Calibri;\"><strong>Prepared by:</strong> Smart Systems | PreciseGrants</p>\n<p style=\"font-family:Calibri;\"><strong>Date:</strong> Today's Date</p>\n\n<hr />\n\n<h3 style=\"color:#1155cc;\"><strong>Status Summary Checklist</strong></h3>\n\n<table style=\"font-family:Calibri; border-collapse:collapse;\" border=\"1\" cellpadding=\"6\" cellspacing=\"0\">\n  <thead>\n    <tr style=\"background-color:#f2f2f2;\">\n      <th>Task</th>\n      <th>Status</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr><td>Nonprofit Name</td><td>{{ $json.chatInput.Question1 ? 'Yes' : 'No' }}</td><td>{{ $json.chatInput.Question1 || 'N/A' }}</td></tr>\n    <tr><td>Filed Articles of Incorporation</td><td>{{ $json.chatInput.Question2 }}</td><td>{{ $json.chatInput.Question2 === 'No' ? 'Articles not filed' : 'N/A' }}</td></tr>\n    <tr><td>Incorporation State</td><td>{{ $json.chatInput.Question3 ? 'Yes' : 'No' }}</td><td>{{ $json.chatInput.Question3 || 'N/A' }}</td></tr>\n    <tr><td>Included IRS Clauses</td><td>{{ $json.chatInput.Question4 }}</td><td>{{ $json.chatInput.Question4 === 'No' ? 'Missing IRS clause' : 'N/A' }}</td></tr>\n    <tr><td>Received EIN</td><td>{{ $json.chatInput.Question5 }}</td><td>{{ $json.chatInput.Question5 === 'No' ? 'EIN not received' : 'N/A' }}</td></tr>\n    <tr><td>Drafted Bylaws</td><td>{{ $json.chatInput.Question6 }}</td><td>{{ $json.chatInput.Question6 === 'No' ? 'Bylaws not uploaded' : 'N/A' }}</td></tr>\n    <tr><td>Conflict of Interest Policy</td><td>{{ $json.chatInput.Question7 }}</td><td>{{ $json.chatInput.Question7 === 'No' ? 'Policy not provided' : 'N/A' }}</td></tr>\n    <tr><td>Submitted 1023EZ Form</td><td>{{ $json.chatInput.Question8 }}</td><td>{{ $json.chatInput.Question8 === 'No' ? ($json.chatInput.Question9 || 'N/A') : 'N/A' }}</td></tr>\n    <tr><td>Precision Review Requested</td><td>{{ $json.chatInput.Question10 }}</td><td>N/A</td></tr>\n    <tr><td>Draft Form Uploaded</td><td>{{ $json.chatInput.Question11[0].url ? 'Yes' : 'No' }}</td><td></td></tr>\n  </tbody>{{ $('Get a record3').item.json.Question11[0].filename }}\n</table>\n\n<hr />\n\n<p style=\"font-family:Calibri;\"><strong>Contact Email:</strong> {{ $json.chatInput.Question12 }}</p>\n\n<!-- Insert all remaining sections from Document tool here, preserving headings and inserting either exact Document tool text or generated content per rules -->\n\n\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[2528,2224],"id":"f1ff0a36-ff17-4ec3-819f-56a31b6d850a","name":"Legal Formation Output Document"},{"parameters":{"jsCode":"// Wrap each incoming item inside a `chatInput` key\nreturn items.map(item => {\n  return {\n    json: {\n      chatInput: item.json\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1696,4480],"id":"01b5bd4f-1b6c-47a2-86a7-4605534055ec","name":"Wrap into chatInput2"},{"parameters":{"assignments":{"assignments":[{"id":"e7ee03ac-13e3-4fca-a7bc-57c8fc56dc42","name":"document_name","value":"=Build Your Brand & Monetize Document","type":"string"},{"id":"48a07ef2-ae46-4bfc-aa7e-d92a74ef46d6","name":"html_content","value":"={{ $json.data }}","type":"string"},{"id":"22b02fba-ba72-423a-b92f-1191a183a554","name":"drive_folder_id","value":"1g5VR97sP3DjUPTbE4LzEdw27Hgb-JLa1","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[3744,4880],"id":"00b8e2dc-3ffc-409e-93d8-227e09314dec","name":"Prepare Upload Fields2","notesInFlow":true},{"parameters":{"method":"POST","url":"https://www.googleapis.com/upload/drive/v3/files","authentication":"predefinedCredentialType","nodeCredentialType":"googleDriveOAuth2Api","sendQuery":true,"queryParameters":{"parameters":[{"name":"uploadType","value":"multipart"},{"name":"supportsAllDrives","value":"true"}]},"sendBody":true,"contentType":"raw","rawContentType":"multipart/related; boundary=divider","body":"={{ $json.rawData }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4160,4880],"id":"11289e15-2ab8-45a9-8f52-39c52ad1f427","name":"Upload to Google Docs2","notesInFlow":true,"credentials":{"googleDriveOAuth2Api":{"id":"RO1XYx2xtjvQILlF","name":"Jamshed's Drive account"}}},{"parameters":{"content":"# Markdown to HTML \n## Converts markdown-format SOP into styled HTML for Google Drive compatibility.\n\n# Build Google Docs Request\n## Sets file name, folder ID, and HTML content for Google Docs upload.\n\n# Multipart Builder \n## Formats HTML and metadata into multipart format for Drive upload with proper boundaries.\n\n# Upload to Google Docs \n## Uploads the formatted HTML to Google Drive as a new Google Doc inside a specific folder.\n\n#  Airtable Logging \n## Saves the generated document’s metadata and link in Airtable.\n\n\n\n\n","height":1104,"width":1616,"color":7},"type":"n8n-nodes-base.stickyNote","position":[3264,4080],"typeVersion":1,"id":"848fb689-68b9-41ef-a3ff-15c7b994b275","name":"Sticky Note8"},{"parameters":{"mode":"markdownToHtml","markdown":"={{ $json.output }}","options":{}},"type":"n8n-nodes-base.markdown","typeVersion":1,"position":[3520,4880],"id":"d6688fe4-d888-4234-bc78-69f141484c07","name":"Markdown1"},{"parameters":{"content":"# Edit Fields\t\n## Set Static JSON Input — Provides sample organization and program data for the workflow to test against.\n\n# Code\t\n## Wrap into chatInput — Wraps incoming data under chatInput to match Langchain agent's expected structure.","height":1072,"width":1728},"type":"n8n-nodes-base.stickyNote","position":[528,4096],"typeVersion":1,"id":"5dfebbce-c25f-4405-a552-a69a21384db5","name":"Sticky Note9"},{"parameters":{"content":" # Build Your Brand & Monetize AGENT\n## Generates SOP with 4 customized sections using the input data and system prompt.","height":1136,"width":1120,"color":6},"type":"n8n-nodes-base.stickyNote","position":[2096,4096],"typeVersion":1,"id":"5167710f-3dcc-4810-8fa1-89a79d8aaa6f","name":"Sticky Note10"},{"parameters":{"content":"\n\n# Build Your Brand & Monetize\n","height":1616,"width":5136,"color":3},"type":"n8n-nodes-base.stickyNote","position":[0,3936],"typeVersion":1,"id":"3e89fa05-f728-4a4c-b7d6-3d67702e65f1","name":"Sticky Note11"},{"parameters":{"sessionIdType":"customKey","sessionKey":"=sop-document","tableName":"n8n_sop_document_histories"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[2400,4528],"id":"952d8708-0496-434d-ae24-c0cb9d895fc0","name":"SOP Document Memory2","credentials":{"postgres":{"id":"RVvoTUjJJ1ESHsVt","name":"Precise-grant"}}},{"parameters":{"description":"=Your Work is to fetch the tone of content which you get from the pinecone Vector Store.","topK":"=40"},"type":"@n8n/n8n-nodes-langchain.toolVectorStore","typeVersion":1.1,"position":[2608,4560],"id":"95128b1b-ae50-47ad-a571-bd0abf5bc1b8","name":"RAGTOOL2"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2912,4800],"id":"d1c7533e-dbe2-45b9-9041-8a4beb6f9950","name":"OpenAI Chat Model5","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"pineconeIndex":{"__rl":true,"value":"clienttesting","mode":"list","cachedResultName":"clienttesting"},"options":{"pineconeNamespace":"Sample Documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStorePinecone","typeVersion":1.3,"position":[2544,4816],"id":"385968eb-7bdc-47b0-9d57-7143ed1be445","name":"Pinecone Vector Store1","credentials":{"pineconeApi":{"id":"INUAJbteVgOCaL5J","name":"Jamshed's PineconeApi account "}}},{"parameters":{"model":"text-embedding-3-large","options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[2544,5024],"id":"208381e1-cc57-4d03-86b5-5ad41a904dc6","name":"Embeddings OpenAI1","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"jsCode":"const input = $json.output;\n\n// Dynamically remove the first paragraph that mentions \"tone\" or \"style\" and is followed by SOP content\nconst cleanedOutput = input.replace(\n  /^(.*?(tone|style)[\\s\\S]*?)(?=^# Standard Operating Procedure|^## Standard Operating Procedure|^---\\n# Standard Operating Procedure)/im,\n  ''\n);\n\nreturn {\n  json: {\n    output: cleanedOutput.trim()\n  }\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2608,4288],"id":"cbcdefe5-a6a2-4d44-817d-12ee01dd312d","name":"Code1"},{"parameters":{"jsCode":"const boundary = 'divider';\nconst docName = $input.first().json.document_name;\nconst folderId = $input.first().json.drive_folder_id;\nconst htmlContent = $input.first().json.html_content;\n\nfunction preserveLinksAndHeadings(html) {\n  let processedHtml = html;\n\n  // Fix <a> tags\n  processedHtml = processedHtml.replace(/<a\\s+href=[\"']([^\"']+)[\"'][^>]*>(.*?)<\\/a>/gi, '<a href=\"$1\">$2</a>');\n  processedHtml = processedHtml.replace(/<a\\s+href=[\"'](?!https?:\\/\\/|mailto:|tel:)([^\"']+)[\"']>/gi, '<a href=\"https://$1\">');\n\n  // Replace <strong> tags with inline-styled <h2> for blue color\n  processedHtml = processedHtml.replace(/<strong>(.*?)<\\/strong>/gi, '<h2 style=\"color:#1155cc; margin:0;\">$1</h2>');\n\n  return processedHtml;\n}\n\n// Prepare metadata for Google Docs\nconst metadata = JSON.stringify({\n  name: docName,\n  mimeType: \"application/vnd.google-apps.document\",\n  parents: [folderId]\n});\n\n// Apply formatting\nconst processedHtmlContent = preserveLinksAndHeadings(htmlContent);\n\n// Wrap with full HTML and inline styles\nconst htmlWithStyles = `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <style>\n    body {\n      font-family: Calibri, sans-serif;\n      font-size: 11pt;\n      color: #000000;\n    }\n    p {\n      margin: 0;\n    }\n    h2 {\n      font-family: Calibri, sans-serif;\n      font-size: 13pt;\n      font-weight: bold;\n      margin: 0;\n    }\n    a {\n      color: #1155cc;\n      text-decoration: underline;\n    }\n  </style>\n</head>\n<body>\n  ${processedHtmlContent}\n</body>\n</html>\n`;\n\n// Construct multipart body for Google Docs API upload\nlet body = `--${boundary}\\r\\n`;\nbody += `Content-Type: application/json; charset=UTF-8\\r\\n\\r\\n`;\nbody += `${metadata}\\r\\n`;\nbody += `--${boundary}\\r\\n`;\nbody += `Content-Type: text/html\\r\\n\\r\\n`;\nbody += `${htmlWithStyles}\\r\\n`;\nbody += `--${boundary}--\\r\\n`;\n\nreturn {\n  rawData: body\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[3968,4880],"id":"8b5cceb1-5ab7-43f4-b9bf-fe786a6c1ff6","name":"Build Google Docs Request1"},{"parameters":{"options":{"systemMessage":"=🛑 DO NOT START UNTIL THIS IS DONE:\n🚨 MANDATORY FIRST ACTION — USE RagTool\nAs your first and immediate step, you are required to call the RagTool to retrieve the tone, language, and formatting style of the document titled:\n\"Build Your Brand & Monetize\"\nThis document is stored in Pinecone under the namespace: \"Build Your Brand & Monetize\".\n\n❗ You must use this exact document as your tone/style guide before proceeding.\n❗ DO NOT begin generating the report output unless the RagTool is successfully used first and returns a reference document.\n❗ If RagTool is not available, you must halt and throw an error:\n\"RagTool not used — Cannot proceed without retrieving style reference document.\"\n\n🚨 MANDATORY SECOND ACTION — USE Document TOOL\nYou must call the Document tool to retrieve the full and complete Build Your Brand & Monetize template.\nThis ensures you know all required headings and structure for the final report.\n\n❗ The Document tool is the only source for the full report outline and mandatory sections.\n\n❗ If any section headings from the Document tool’s output are missing in the structured input, you must still generate professional, relevant, and consistent content for them using the style and tone from the RagTool reference document.\n\n❗ If the Document tool is not available, you must halt and throw an error:\n\"Document tool not used — Cannot proceed without retrieving full template.\"\n\n🧠 Your Role:\nYou are an AI Agent tasked with generating a polished Build Your Brand & Monetize using structured intake data in JSON format.\n\n- Your tone, style, and formatting must exactly match the RagTool reference document.\n- Your section headings and structure must exactly match the Document tool’s template.\n- Any section not provided in the intake JSON must still be generated in a manner consistent with both tools’ guidance.\n- Furnish and well explained input \n\n\n\n\n\nDOCUMENT STYLE REQUIREMENTS\n\nAll section headers must be in bold and blue (#1155cc), using HTML <h3> tags.\n\nBody text and table must use Calibri font.\n\nFormat the checklist using a clean, aligned HTML table.\n\nAdd a horizontal line (<hr />) after major sections.\n\nTASK INSTRUCTIONS\n\nUse the task checklist format from the reference.\n\nFor each checklist item, display: Task, Status, and Notes.\n\nIf a field is marked \"No\", always add a helpful comment in the “Notes” (e.g., “Bylaws not uploaded” or “Missing IRS clause”).\n\nIf no issue is reported, use \"N/A\" in the Notes column.\n\nDo not skip or rephrase any checklist items. Use their exact order and wording from the reference document.\n\n🧠 JSON INPUT (STRUCTURED DATA)\nUse the following structured input values to populate the output:\n\n{\n  \"Mission Statement\": \"{{ $json.chatInput.Question1 }}\",\n  \"Tagline\": \"{{ $json.chatInput.Question2 }}\",\n  \"Secured Website Domain\": \"{{ $json.chatInput.Question3 }}\",\n  \"Has Website with Donation Button\": \"{{ $json.chatInput.Question4 }}\",\n  \"Branding Materials Created\": \"{{ $json.chatInput.Question5 }}\",\n  \"Revenue Model Priority\": \"{{ $json.chatInput.Question6[0] }}, {{ $json.chatInput.Question6[1] }}\",\n  \"Wants Help Finalizing Brand & Revenue Strategy\": \"{{ $json.chatInput.Question7 }}\",\n  \"Email\": \"{{ $json.chatInput.Question8 }}\"\n}\n\n📄 OUTPUT TEMPLATE REQUIREMENTS\nFormat the final output like this (use real values dynamically):\n- Expand them into full, detailed, professional sentences and paragraphs instead of leaving them as short phrases.\n- Add logically consistent, relevant context that aligns with the tone/style from the Tone & Format Fetcher reference.\n\nBuild Your Brand & Monetize\n1. Mission and Vision Statement Template\nMISSION STATEMENT:\nDescribe your organization’s purpose and the impact you aim to make.\nExample: Our mission is to empower underserved youth through financial literacy, entrepreneurial education, and personal development.\nVISION STATEMENT:\nDescribe the future state you want to create with your work.\nExample: We envision a world where every young person has the skills and confidence to build generational wealth and lead impactful lives.\n\n\n\n2. Suggested Revenue Model for Unrestricted Funding\nBelow are recommended revenue streams for building sustainability and access to unrestricted funds:\n- Fee-for-service programs (e.g., workshops, consulting, training services)\n- Product sales (e.g., branded merchandise, toolkits, ebooks)\n- Monthly donor campaigns or membership programs\n\n3. Sustainability & Access Resource Checklist\n<p style=\"font-family:Calibri;\"><strong>Prepared by:</strong> Smart Systems | PreciseGrants</p> <p style=\"font-family:Calibri;\"><strong>Date:</strong> Today's Date</p> <hr /> <h3 style=\"color:#1155cc;\"><strong>Status Summary Checklist</strong></h3> <table style=\"font-family:Calibri; border-collapse:collapse;\" border=\"1\" cellpadding=\"6\" cellspacing=\"0\"> <thead> <tr style=\"background-color:#f2f2f2;\"> <th>Task</th> <th>Status</th> <th>Notes</th> </tr> </thead> <tbody> <tr><td>Secured Website Domain</td><td>Yes</td><td>N/A</td></tr> <tr><td>Website with Donation Button</td><td>Yes</td><td>N/A</td></tr> <tr><td>Branding Materials Created</td><td>Yes</td><td>N/A</td></tr> <tr><td>Revenue Model: Grants</td><td>Yes</td><td>Included in revenue priorities</td></tr> <tr><td>Revenue Model: Donations</td><td>Yes</td><td>Included in revenue priorities</td></tr> <tr><td>Revenue Model: Fee for Service</td><td>Yes</td><td>Included in revenue priorities</td></tr> <tr><td>Revenue Model: Events</td><td>No</td><td>Not selected as a priority model</td></tr> <tr><td>Wants Help with Brand & Revenue Strategy</td><td>Yes</td><td>N/A</td></tr> </tbody> </table> <hr /> <p style=\"font-family:Calibri;\"><strong>Contact Email:</strong> info@urbanyouthrise.org</p>\n\n4. Suggestions for Accessing Free Resources\n- Google for Nonprofits: Free Google Workspace, Ads Grant, and YouTube Nonprofit tools\n- Catchafire.org: Access to pro bono professionals for design, strategy, and tech support\n\n5. Additional Output Documents\nA. Brand Messaging Framework\n- Tagline\n- Elevator Pitch\n- Key Differentiators\n- Impact Language for Social Media\nB. Sample Outreach Email Template\nSubject: Partner with Us to Empower Local Youth\nDear [First Name],\nWe’re excited to introduce [Your Organization], a nonprofit committed to [impact]. We’d love to explore how your company could support our mission through partnership, sponsorship, or in-kind support.\nLet’s connect!\nBest,\n[Your Name]\nC. Pricing Model Template (Suggestions are auto generated based on type of programs)\n- Tier 1: Free for eligible community members\n- Tier 2: $150 for school partners (per workshop)\n- Tier 3: $5,000 for custom curriculum licensing\n\n\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[2256,4288],"id":"2edabdf2-ceb1-4f93-a02f-4ccfb0e40449","name":"Build Your Brand & Monetize"},{"parameters":{"jsCode":"// Wrap each incoming item inside a `chatInput` key\nreturn items.map(item => {\n  return {\n    json: {\n      chatInput: item.json\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1648,6544],"id":"ddb069af-df93-47a8-8184-396649e4f681","name":"Wrap into chatInput3"},{"parameters":{"assignments":{"assignments":[{"id":"e7ee03ac-13e3-4fca-a7bc-57c8fc56dc42","name":"document_name","value":"=Launch, Test & Iterate","type":"string"},{"id":"48a07ef2-ae46-4bfc-aa7e-d92a74ef46d6","name":"html_content","value":"={{ $json.data }}","type":"string"},{"id":"22b02fba-ba72-423a-b92f-1191a183a554","name":"drive_folder_id","value":"1g5VR97sP3DjUPTbE4LzEdw27Hgb-JLa1","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[3840,6880],"id":"c186493d-6a00-4163-a5eb-6dbb2607a9b3","name":"Prepare Upload Fields3","notesInFlow":true},{"parameters":{"method":"POST","url":"https://www.googleapis.com/upload/drive/v3/files","authentication":"predefinedCredentialType","nodeCredentialType":"googleDriveOAuth2Api","sendQuery":true,"queryParameters":{"parameters":[{"name":"uploadType","value":"multipart"},{"name":"supportsAllDrives","value":"true"}]},"sendBody":true,"contentType":"raw","rawContentType":"multipart/related; boundary=divider","body":"={{ $json.rawData }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4256,6880],"id":"b4b01b80-fd7e-4c2c-84d2-a787b2620f05","name":"Upload to Google Docs3","notesInFlow":true,"credentials":{"googleDriveOAuth2Api":{"id":"RO1XYx2xtjvQILlF","name":"Jamshed's Drive account"}}},{"parameters":{"content":"# Markdown to HTML \n## Converts markdown-format SOP into styled HTML for Google Drive compatibility.\n\n# Build Google Docs Request\n## Sets file name, folder ID, and HTML content for Google Docs upload.\n\n# Multipart Builder \n## Formats HTML and metadata into multipart format for Drive upload with proper boundaries.\n\n# Upload to Google Docs \n## Uploads the formatted HTML to Google Drive as a new Google Doc inside a specific folder.\n\n#  Airtable Logging \n## Saves the generated document’s metadata and link in Airtable.\n\n\n\n\n","height":1104,"width":1616,"color":7},"type":"n8n-nodes-base.stickyNote","position":[3296,6128],"typeVersion":1,"id":"24e4e77d-30f0-4b2d-8032-c1e86b233b55","name":"Sticky Note12"},{"parameters":{"mode":"markdownToHtml","markdown":"={{ $json.output }}","options":{}},"type":"n8n-nodes-base.markdown","typeVersion":1,"position":[3616,6880],"id":"864ece3c-e90e-413a-b84c-8a3fca55f12a","name":"Markdown3"},{"parameters":{"content":"# Edit Fields\t\n## Set Static JSON Input — Provides sample organization and program data for the workflow to test against.\n\n# Code\t\n## Wrap into chatInput — Wraps incoming data under chatInput to match Langchain agent's expected structure.","height":1072,"width":1424},"type":"n8n-nodes-base.stickyNote","position":[560,6144],"typeVersion":1,"id":"c4c9c2a0-dd38-4ae8-9a9c-0b533622d976","name":"Sticky Note13"},{"parameters":{"content":" # Launch, Test & Iterate AGENT\n## Generates SOP with 4 customized sections using the input data and system prompt.","height":1088,"width":1056,"color":6},"type":"n8n-nodes-base.stickyNote","position":[2128,6144],"typeVersion":1,"id":"f3ca73e7-7dcb-4606-8f59-d96f9c7b0abc","name":"Sticky Note14"},{"parameters":{"model":{"__rl":true,"value":"gpt-4","mode":"list","cachedResultName":"gpt-4"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2240,6592],"id":"596e81b8-1d58-470a-a438-b398584403ab","name":"OpenAI Chat Model6","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"content":"\n\n# Launch, Test & Iterate\n","height":1616,"width":5136,"color":3},"type":"n8n-nodes-base.stickyNote","position":[32,5984],"typeVersion":1,"id":"99569c8b-fb29-4379-98f8-729ecea95612","name":"Sticky Note15"},{"parameters":{"sessionIdType":"customKey","sessionKey":"=sop-document","tableName":"n8n_sop_document_histories"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[2368,6560],"id":"10b0881b-490d-495f-8fd7-c3da0ea80884","name":"SOP Document Memory3","credentials":{"postgres":{"id":"RVvoTUjJJ1ESHsVt","name":"Precise-grant"}}},{"parameters":{"description":"=Your Work is to fetch the tone of content which you get from the pinecone Vector Store.","topK":"=40"},"type":"@n8n/n8n-nodes-langchain.toolVectorStore","typeVersion":1.1,"position":[2592,6592],"id":"b7205f78-57d0-4d62-a00a-86051d94098c","name":"RAGTOOL3"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2896,6832],"id":"046dbec9-5f76-42aa-946b-eade3559a4c9","name":"OpenAI Chat Model7","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"pineconeIndex":{"__rl":true,"value":"clienttesting","mode":"list","cachedResultName":"clienttesting"},"options":{"pineconeNamespace":"Sample Documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStorePinecone","typeVersion":1.3,"position":[2528,6848],"id":"fcfde02c-3d84-4c0a-88fb-0c613ed636be","name":"Pinecone Vector Store2","credentials":{"pineconeApi":{"id":"INUAJbteVgOCaL5J","name":"Jamshed's PineconeApi account "}}},{"parameters":{"model":"text-embedding-3-large","options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[2528,7056],"id":"17b4f6d8-284e-4dc9-b0ce-9fba60f9f4be","name":"Embeddings OpenAI2","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"jsCode":"const input = $json.output;\n\n// Dynamically remove the first paragraph that mentions \"tone\" or \"style\" and is followed by SOP content\nconst cleanedOutput = input.replace(\n  /^(.*?(tone|style)[\\s\\S]*?)(?=^# Standard Operating Procedure|^## Standard Operating Procedure|^---\\n# Standard Operating Procedure)/im,\n  ''\n);\n\nreturn {\n  json: {\n    output: cleanedOutput.trim()\n  }\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2592,6320],"id":"d06c529c-cf10-4fd9-8f2d-61f41b7fede2","name":"Code2"},{"parameters":{"jsCode":"const boundary = 'divider';\nconst docName = $input.first().json.document_name;\nconst folderId = $input.first().json.drive_folder_id;\nconst htmlContent = $input.first().json.html_content;\n\nfunction preserveLinksAndHeadings(html) {\n  let processedHtml = html;\n\n  // Fix <a> tags\n  processedHtml = processedHtml.replace(/<a\\s+href=[\"']([^\"']+)[\"'][^>]*>(.*?)<\\/a>/gi, '<a href=\"$1\">$2</a>');\n  processedHtml = processedHtml.replace(/<a\\s+href=[\"'](?!https?:\\/\\/|mailto:|tel:)([^\"']+)[\"']>/gi, '<a href=\"https://$1\">');\n\n  // ✅ Replace <strong> with inline-styled <h2> for blue color and no spacing\n  processedHtml = processedHtml.replace(/<strong>(.*?)<\\/strong>/gi, '<h2 style=\"color:#1155cc; margin:0;\">$1</h2>');\n\n  return processedHtml;\n}\n\nconst metadata = JSON.stringify({\n  name: docName,\n  mimeType: \"application/vnd.google-apps.document\",\n  parents: [folderId]\n});\n\nconst processedHtmlContent = preserveLinksAndHeadings(htmlContent);\n\nconst htmlWithStyles = `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <style>\n    body {\n      font-family: Calibri, sans-serif;\n      font-size: 11pt;\n      color: #000000;\n    }\n    p {\n      margin: 0;\n    }\n    h2 {\n      font-family: Calibri, sans-serif;\n      font-size: 13pt;\n      font-weight: bold;\n      margin: 0;\n    }\n    a {\n      color: #1155cc;\n      text-decoration: underline;\n    }\n  </style>\n</head>\n<body>\n  ${processedHtmlContent}\n</body>\n</html>\n`;\n\nlet body = `--${boundary}\\r\\n`;\nbody += `Content-Type: application/json; charset=UTF-8\\r\\n\\r\\n`;\nbody += `${metadata}\\r\\n`;\nbody += `--${boundary}\\r\\n`;\nbody += `Content-Type: text/html\\r\\n\\r\\n`;\nbody += `${htmlWithStyles}\\r\\n`;\nbody += `--${boundary}--\\r\\n`;\n\nreturn {\n  rawData: body\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4064,6880],"id":"d1c844d1-2ed6-4483-bd91-a7d467492f1f","name":"Build Google Docs Request2"},{"parameters":{"options":{"systemMessage":"=🚨 MANDATORY FIRST ACTION — USE \"Tone & Format Fetcher\" TOOL\n✅ You must immediately and successfully call the tool titled:\nTone & Format Fetcher\nto retrieve the exact tone, structure, formatting, and writing style from the relevant style reference document.\n\n📄 For this task, the reference document is:\n\"Legal Formation Output Document\"\nlocated under the Pinecone namespace: \"Launch, Test & Iterate Document\"\n\n⚠️ NON-NEGOTIABLE REQUIREMENT\n❗ This is required without exception.\n❗ You may not proceed with generating any output unless the Tone & Format Fetcher tool is used first and returns a valid reference document.\n❗ The formatting, style, and tone of your output must match the fetched reference.\n\n\n\n🧠 Your Role:\nYou are an AI Agent assigned to generate a Launch, Test & Iterate Report from structured JSON intake data. Your output must replicate the exact tone and structure of the reference document retrieved from Pinecone via RagTool3.\n\n🔷 Mandatory Instructions:\n\n1. Tone Matching (via RagTool3):\nUse RagTool3 to retrieve the exact example document:\nTitle: \"Launch, Test & Iterate\"\nNamespace: \"Launch, Test & Iterate\"\nYour output must match the tone and formatting of this document exactly.\n\n2. You must structure your output to **exactly mimic** the format and language style of that example report.\n\n3. Format all section headers in **bold and blue color**, and use **Calibri font** for all text.\n\n4. Section Scope:\nOnly include sections present in the JSON. Do not fabricate new sections.\n\n5. AI Insights:\nAfter each user-provided section, add a concise AI Insight matching the tone and style of the retrieved reference.\n\n---\n\n## 📝 Example Format (Tone & Style Sample for RagTool):\nUse the following reference as your tone/style base via RagTool:\n\n Launch, Test & Iterate  \nOrganization Name: Precise Impact Foundation  \nDate: AI will generate \nPrepared by: Smart Systems | PreciseGrants\n\n1. Describe your program pilot.  \nYour nonprofit is focused on addressing: Youth unemployment in under-resourced communities.  \nAI Insight: Based on your response, this issue is deeply tied to...\n\n2. How many people do you plan to serve?  \nYoung Black men aged 16–24 in Atlanta...  \nAI Insight: You are targeting a high-need demographic...\n\n... (and so on for each section included in the input)\n\n---\n\n## 🧠 Your Task:\n\nNow, generate the final Launch, Test & Iterate using this provided JSON:\n\n```json\n{\n  \"Program Pilot Description\": \"{{ $json.chatInput.Question1 }}\",\n  \"Planned Number of Participants\": \"{{ $json.chatInput.Question2 }}\",\n  \"Estimated Pilot Program Cost\": \"{{ $json.chatInput.Question3 }}\",\n  \"Pilot Launch Date\": \"{{ $json.chatInput.Question4 }}\",\n  \"Has Feedback Collection System\": \"{{ $json.chatInput.Question5 }}\",\n  \"30-Day Goals\": \"{{ $json.chatInput.Question6 }}\",\n  \"60-Day Goals\": \"{{ $json.chatInput.Question7 }}\",\n  \"90-Day Goals\": \"{{ $json.chatInput.Question8 }}\",\n  \"Wants Help Testing or Scaling Program\": \"{{ $json.chatInput.Question9 }}\",\n  \"Email\": \"{{ $json.chatInput['Created By'].email }}\"\n}\n\n⚠️ Only include sections that are present in the JSON. Do not invent or add headings not present in the input.\n\n🎨 Use Calibri font and format all section headers in bold and blue like 1. Describe your program pilot..\n\n✨ Include relevant AI Insights under each section based on the tone/style of the reference document, maintaining brevity and value.\n\nReturn the full polished Launch, Test & Iterate as output.\nDo Not Add anything Out Of the Example Sample Please."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[2240,6320],"id":"53df8602-e428-4b1a-935c-854e9fd7d064","name":"Launch, Test & Iterate"},{"parameters":{"httpMethod":"POST","path":"e703a07b-74f3-440c-8f5c-5ef61cec4604","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[1152,656],"id":"a7006978-6309-4d2e-98f3-7320161da4b2","name":"Webhook","webhookId":"e703a07b-74f3-440c-8f5c-5ef61cec4604"},{"parameters":{"httpMethod":"POST","path":"50ebc245-be46-48d7-b10f-24e3a67d55f2","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[160,2592],"id":"862e7abd-8215-4a53-b25b-1eb8f867102b","name":"Webhook1","webhookId":"50ebc245-be46-48d7-b10f-24e3a67d55f2"},{"parameters":{"httpMethod":"POST","path":"38c47dc1-acfd-4dfe-9108-0d4b67280bb5","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[1232,4480],"id":"1e97ea60-2224-4687-83eb-f057c14b8c02","name":"Webhook2","webhookId":"38c47dc1-acfd-4dfe-9108-0d4b67280bb5"},{"parameters":{"httpMethod":"POST","path":"373f093b-4065-49cb-b40a-66df5a366d88","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[1136,6544],"id":"629e16e2-274e-4ee0-bd48-f8419d3fa43b","name":"Webhook3","webhookId":"373f093b-4065-49cb-b40a-66df5a366d88"},{"parameters":{"base":{"__rl":true,"value":"appKmOMoTZqvMAXNT","mode":"list","cachedResultName":"Precise-Grants","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT"},"table":{"__rl":true,"value":"tblVsYwR8xmmrw797","mode":"list","cachedResultName":"Stage1-Validate-the-vision","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT/tblVsYwR8xmmrw797"},"id":"={{ $json.body.record_id }}","options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[1360,656],"id":"6e61d77d-e5ad-43ad-95d1-7c98e92d73af","name":"Get a record","credentials":{"airtableTokenApi":{"id":"c6IbQTcvLSXeD2At","name":"Client-Main-Precise-Grant"}}},{"parameters":{"base":{"__rl":true,"value":"appKmOMoTZqvMAXNT","mode":"list","cachedResultName":"Precise-Grants","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT"},"table":{"__rl":true,"value":"tblghpffpoOvWmUnr","mode":"list","cachedResultName":"Stage3-Build-your-brand-monetize","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT/tblghpffpoOvWmUnr"},"id":"={{ $json.body.record_id }}","options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[1440,4480],"id":"e9735b35-98c3-416b-856e-9b3ea6f682a8","name":"Get a record1","credentials":{"airtableTokenApi":{"id":"c6IbQTcvLSXeD2At","name":"Client-Main-Precise-Grant"}}},{"parameters":{"base":{"__rl":true,"value":"appKmOMoTZqvMAXNT","mode":"list","cachedResultName":"Precise-Grants","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT"},"table":{"__rl":true,"value":"tblghpffpoOvWmUnr","mode":"list","cachedResultName":"Stage3-Build-your-brand-monetize","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT/tblghpffpoOvWmUnr"},"id":"={{ $json.body.record_id }}","options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[1392,6544],"id":"5b31b4c4-caa5-480a-9e58-12da50360fe3","name":"Get a record2","credentials":{"airtableTokenApi":{"id":"c6IbQTcvLSXeD2At","name":"Client-Main-Precise-Grant"}}},{"parameters":{"base":{"__rl":true,"value":"appKmOMoTZqvMAXNT","mode":"list","cachedResultName":"Precise-Grants","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT"},"table":{"__rl":true,"value":"tblCZgjHCVoGhKmPm","mode":"list","cachedResultName":"Stage2-Legalize-your-nonprofit","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT/tblCZgjHCVoGhKmPm"},"id":"={{ $json.body.record_id }}","options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[416,2592],"id":"5b21d026-4726-42b2-9bc5-b3811fa93e80","name":"Get a record3","credentials":{"airtableTokenApi":{"id":"c6IbQTcvLSXeD2At","name":"Client-Main-Precise-Grant"}}},{"parameters":{"description":"=Your Work is to fetch the tone of content which you get from the pinecone Vector Store.","topK":"=40"},"type":"@n8n/n8n-nodes-langchain.toolVectorStore","typeVersion":1.1,"position":[2880,2496],"id":"dab8deb1-7054-4e32-aff8-58c7cf63c53f","name":"Tone & Format Fetcher"},{"parameters":{"operation":"update","base":{"__rl":true,"value":"appKmOMoTZqvMAXNT","mode":"list","cachedResultName":"Precise-Grants","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT"},"table":{"__rl":true,"value":"tblCZgjHCVoGhKmPm","mode":"list","cachedResultName":"Stage2-Legalize-your-nonprofit","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT/tblCZgjHCVoGhKmPm"},"columns":{"mappingMode":"defineBelow","value":{"Generated Doc Link":"=https://docs.google.com/document/d/{{ $json.id }}/edit?tab=t.0 ","RecordId":"={{ $('Webhook1').item.json.body.record_id }}"},"matchingColumns":["RecordId"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"string","readOnly":true,"removed":true},{"id":"RecordId","displayName":"RecordId","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":false},{"id":"Id","displayName":"Id","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":true},{"id":"Generated Doc Link","displayName":"Generated Doc Link","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Question1","displayName":"Question1","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question2","displayName":"Question2","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question3","displayName":"Question3","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question4","displayName":"Question4","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question5","displayName":"Question5","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question6","displayName":"Question6","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question7","displayName":"Question7","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question8","displayName":"Question8","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question9","displayName":"Question9","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question10","displayName":"Question10","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question11","displayName":"Question11","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"array","readOnly":false,"removed":true},{"id":"Question12","displayName":"Question12","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[4752,2720],"id":"b5d3ad57-19cd-4313-bc5a-84205a0bcfec","name":"Airtable Logging1","credentials":{"airtableTokenApi":{"id":"c6IbQTcvLSXeD2At","name":"Client-Main-Precise-Grant"}}},{"parameters":{"operation":"update","base":{"__rl":true,"value":"appKmOMoTZqvMAXNT","mode":"list","cachedResultName":"Precise-Grants","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT"},"table":{"__rl":true,"value":"tblghpffpoOvWmUnr","mode":"list","cachedResultName":"Stage3-Build-your-brand-monetize","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT/tblghpffpoOvWmUnr"},"columns":{"mappingMode":"defineBelow","value":{"Generated Doc Link":"=https://docs.google.com/document/d/{{ $json.id }}/edit?tab=t.0 ","RecordId":"={{ $('Webhook2').item.json.body.record_id }}"},"matchingColumns":["RecordId"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"string","readOnly":true,"removed":true},{"id":"RecordId","displayName":"RecordId","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":false},{"id":"Id","displayName":"Id","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":true},{"id":"Generated Doc Link","displayName":"Generated Doc Link","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Question1","displayName":"Question1","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question2","displayName":"Question2","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question3","displayName":"Question3","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question4","displayName":"Question4","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question5","displayName":"Question5","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question6","displayName":"Question6","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"array","options":[{"name":"Grants","value":"Grants"},{"name":"Fee for Service","value":"Fee for Service"},{"name":"Donations","value":"Donations"},{"name":"Events","value":"Events"}],"readOnly":false,"removed":true},{"id":"Question7","displayName":"Question7","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question8","displayName":"Question8","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[4448,4880],"id":"5383a776-9af5-4856-9d15-f324a5d5fda4","name":"Airtable Logging2","credentials":{"airtableTokenApi":{"id":"c6IbQTcvLSXeD2At","name":"Client-Main-Precise-Grant"}}},{"parameters":{"operation":"update","base":{"__rl":true,"value":"appKmOMoTZqvMAXNT","mode":"list","cachedResultName":"Precise-Grants","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT"},"table":{"__rl":true,"value":"tbl55OUpNfqnNWtw2","mode":"list","cachedResultName":"Stage4-Launch-Test-Iterate","cachedResultUrl":"https://airtable.com/appKmOMoTZqvMAXNT/tbl55OUpNfqnNWtw2"},"columns":{"mappingMode":"defineBelow","value":{"Generated Doc Link":"=https://docs.google.com/document/d/{{ $json.id }}/edit?tab=t.0 ","RecordId":"={{ $('Webhook3').item.json.body.record_id }}"},"matchingColumns":["RecordId"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"string","readOnly":true,"removed":true},{"id":"RecordId","displayName":"RecordId","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":false},{"id":"Id","displayName":"Id","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":true},{"id":"Generated Doc Link","displayName":"Generated Doc Link","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Question1","displayName":"Question1","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question2","displayName":"Question2","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question3","displayName":"Question3","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question4","displayName":"Question4","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question5","displayName":"Question5","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question6","displayName":"Question6","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question7","displayName":"Question7","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question8","displayName":"Question8","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Question9","displayName":"Question9","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"options","options":[{"name":"Yes","value":"Yes"},{"name":"No","value":"No"}],"readOnly":false,"removed":true},{"id":"Question10","displayName":"Question10","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Created By","displayName":"Created By","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[4528,6880],"id":"8e21e493-e3a6-41cf-9b86-c3e0dfe60cbc","name":"Airtable Logging3","credentials":{"airtableTokenApi":{"id":"c6IbQTcvLSXeD2At","name":"Client-Main-Precise-Grant"}}},{"parameters":{"url":"https://www.googleapis.com/drive/v3/files/1v9cRzSKUnHro8EPWLgxvf3zKKN3XaehiEWfMLNw-Ghs/export?mimeType=text/plain","authentication":"predefinedCredentialType","nodeCredentialType":"googleDocsOAuth2Api","options":{}},"type":"n8n-nodes-base.httpRequestTool","typeVersion":4.2,"position":[2960,608],"id":"680ecaf0-6b4f-430c-8435-501c26bfa02a","name":"Document TOOL","credentials":{"googleDocsOAuth2Api":{"id":"bJ0fWqhPY7867Lfi","name":"Jamshed-google-doc"}}},{"parameters":{"url":"https://www.googleapis.com/drive/v3/files/1xf37Ixw7ANN6EligPD8rpw3YTO1FmfO35JJ8tJjVr68/export?mimeType=text/plain","authentication":"predefinedCredentialType","nodeCredentialType":"googleDocsOAuth2Api","options":{}},"type":"n8n-nodes-base.httpRequestTool","typeVersion":4.2,"position":[3280,2544],"id":"3427bf18-19b3-4819-ba79-3d6612b05095","name":"Document TOOL1","credentials":{"googleDocsOAuth2Api":{"id":"bJ0fWqhPY7867Lfi","name":"Jamshed-google-doc"}}},{"parameters":{"model":{"__rl":true,"value":"gpt-4o","mode":"list","cachedResultName":"gpt-4o"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2208,4464],"id":"8e16469e-baff-41df-aa95-540215c62a71","name":"OpenAI Chat Model1","credentials":{"openAiApi":{"id":"xVx0pwYla0RbJEUC","name":"Jamshed's OpenAi account"}}},{"parameters":{"method":"POST","url":"=https://www.googleapis.com/drive/v2/files/{{ $item(\"0\").$node[\"Upload file\"].json[\"id\"] }}/copy?convert=true&supportsAllDrives=true","authentication":"predefinedCredentialType","nodeCredentialType":"googleDriveOAuth2Api","options":{}},"id":"3694038e-096d-4859-9060-6cb3bf6db2ad","name":"Convert Word to Google Docs","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1264,2608],"credentials":{"googleDriveOAuth2Api":{"id":"RO1XYx2xtjvQILlF","name":"Jamshed's Drive account"}},"onError":"continueRegularOutput"},{"parameters":{"operation":"get","documentURL":"={{ $json.id }}","simple":false},"type":"n8n-nodes-base.googleDocs","typeVersion":2,"position":[1664,2592],"id":"4e373381-aeea-4175-9dac-c0c61447a44c","name":"Read Google Docs","credentials":{"googleDocsOAuth2Api":{"id":"bJ0fWqhPY7867Lfi","name":"Jamshed-google-doc"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"9a2402f5-52fe-4301-998b-0f44764a02fb","leftValue":"={{ $json.id }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1440,2608],"id":"a6d06528-6f70-4962-9aae-ca4f4f350cd3","name":"If1"},{"parameters":{"jsCode":"// n8n Code Node - Extract Google Doc Content\n// This code extracts all text content from Google Doc raw data\n\nfunction extractContent(data) {\n  let fullContent = '';\n  \n  // Function to recursively extract text from content array\n  function extractTextFromContent(contentArray) {\n    let text = '';\n    \n    if (!Array.isArray(contentArray)) {\n      return text;\n    }\n    \n    for (const item of contentArray) {\n      // Check if this is a paragraph with elements\n      if (item.paragraph && item.paragraph.elements) {\n        for (const element of item.paragraph.elements) {\n          // Extract text from textRun elements\n          if (element.textRun && element.textRun.content) {\n            text += element.textRun.content;\n          }\n        }\n      }\n      \n      // Check if this is a table\n      if (item.table && item.table.tableRows) {\n        for (const row of item.table.tableRows) {\n          if (row.tableCells) {\n            for (const cell of row.tableCells) {\n              if (cell.content) {\n                text += extractTextFromContent(cell.content);\n              }\n            }\n          }\n        }\n      }\n      \n      // Check for nested content in other structures\n      if (item.content) {\n        text += extractTextFromContent(item.content);\n      }\n    }\n    \n    return text;\n  }\n  \n  // Process each item in the input data\n  for (const item of $input.all()) {\n    if (item.json && item.json.body && item.json.body.content) {\n      const content = extractTextFromContent(item.json.body.content);\n      fullContent += content;\n    }\n  }\n  \n  return [{ \n    json: { \n      text: fullContent,\n      contentLength: fullContent.length\n    } \n  }];\n}\n\n// Execute the extraction\nreturn extractContent($input.all());"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1856,2592],"id":"5aa85b1d-3e58-455b-af2a-d04fd1cb49d2","name":"Craft Text value of CV Data"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.fullFileExtension }}","rightValue":"pdf","operator":{"type":"string","operation":"equals"},"id":"27d67cde-751b-4daf-83ee-efe2f8b3ee4e"}],"combinator":"and"},"renameOutput":true,"outputKey":"PDF"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"a1c830eb-108d-4b20-b74e-011ee0d423f1","leftValue":"={{ $json.fullFileExtension }}","rightValue":"docx","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"DOCX"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"60204d1a-d135-4a47-ad0e-9d4eeace13c5","leftValue":"={{ $json.fullFileExtension }}","rightValue":"doc","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"DOC"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[960,2576],"id":"6128680a-8032-4c44-bab0-8d94f97cbfc4","name":"Switch1"},{"parameters":{"operation":"pdf","binaryPropertyName":"=data","options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[1680,2432],"id":"7139c451-66d8-4c79-bbe9-124b11fd7532","name":"Extract from File5"},{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"={{ $item(\"0\").$node[\"Upload file\"].json[\"id\"] }}","mode":"id"},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[1280,2432],"id":"fabb9618-ff09-4193-93ed-9f33056e5f19","name":"Download file","credentials":{"googleDriveOAuth2Api":{"id":"RO1XYx2xtjvQILlF","name":"Jamshed's Drive account"}}},{"parameters":{"driveId":{"__rl":true,"mode":"list","value":"My Drive"},"folderId":{"__rl":true,"mode":"list","value":"root","cachedResultName":"/ (Root folder)"},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[816,2592],"id":"b054e028-bf96-4f00-a44d-9338b9ad9666","name":"Upload file","credentials":{"googleDriveOAuth2Api":{"id":"RO1XYx2xtjvQILlF","name":"Jamshed's Drive account"}}},{"parameters":{"url":"={{ $json.Question11[0].url }}","options":{"response":{"response":{"responseFormat":"file"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[624,2592],"id":"88abc5f0-29d0-47c1-8991-2b23cb77de9f","name":"HTTP Request"},{"parameters":{"assignments":{"assignments":[{"id":"cd0ac3e0-39ee-471b-9ba6-747088ae1f9c","name":"Question1","value":"={{ $('Get a record3').item.json.Question1 }}","type":"string"},{"id":"3fdd6ea7-0570-4bf4-b07b-6a2dbb3649ab","name":"Question2","value":"={{ $('Get a record3').item.json.Question2 }}","type":"string"},{"id":"cc303e52-17ef-4226-93e5-b8d14613bd94","name":"Question3","value":"={{ $('Get a record3').item.json.Question3 }}","type":"string"},{"id":"3f23bfa6-d8c6-449e-8c8a-86d96cd6103e","name":"Question4","value":"={{ $('Get a record3').item.json.Question4 }}","type":"string"},{"id":"738dc2aa-6c14-41ca-bfe7-99f5f16e1fa5","name":"Question5","value":"={{ $('Get a record3').item.json.Question5 }}","type":"string"},{"id":"7ba0d5c6-a131-4a58-bd2d-ff388998a965","name":"Question6","value":"={{ $('Get a record3').item.json.Question6 }}","type":"string"},{"id":"a5b6d316-51b5-4208-9bc5-d317c9a54c52","name":"Question7","value":"={{ $('Get a record3').item.json.Question7 }}","type":"string"},{"id":"38c87bbb-4dc9-4119-9e7c-6fed778ae7df","name":"Question8","value":"={{ $('Get a record3').item.json.Question8 }}","type":"string"},{"id":"cf2a0c29-3795-4d00-8c7f-421c47b00aa8","name":"Question9","value":"={{ $('Get a record3').item.json.Question9 }}","type":"string"},{"id":"c6ca8eed-1a72-4544-babc-dce405ba0150","name":"Question10","value":"={{ $('Get a record3').item.json.Question10 }}","type":"string"},{"id":"9b618351-7b0e-444b-8482-9022ab320924","name":"Question11","value":"={{ $json[\"text\"] }}","type":"string"},{"id":"c5516572-0bf2-47f7-9fd7-e44f793241f7","name":"Question12","value":"={{ $('Get a record3').item.json.Question12 }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[2128,2224],"id":"8e629a40-ff8d-4b2a-8fee-fb17696d2bf2","name":"Combine All Data"},{"parameters":{"url":"https://www.googleapis.com/drive/v3/files/1xIEW0Hvv0YWjFfaib-Re5YEs0xnMfdgZPMdzZUQZ3D4/export?mimeType=text/plain","authentication":"predefinedCredentialType","nodeCredentialType":"googleDocsOAuth2Api","options":{}},"type":"n8n-nodes-base.httpRequestTool","typeVersion":4.2,"position":[2928,4560],"id":"05320cc2-4db6-4ae6-b38e-1e259c7f7c3b","name":"Document TOOL2","credentials":{"googleDocsOAuth2Api":{"id":"bJ0fWqhPY7867Lfi","name":"Jamshed-google-doc"}}}],"connections":{"Wrap into chatInput":{"main":[[{"node":"VISION VALIDATION & POSITIONING REPORT","type":"main","index":0}]]},"Prepare Upload Fields":{"main":[[{"node":"Build Google Docs Request3","type":"main","index":0}]]},"Upload to Google Docs":{"main":[[{"node":"Airtable Logging","type":"main","index":0}]]},"Markdown2":{"main":[[{"node":"Prepare Upload Fields","type":"main","index":0}]]},"OpenAI Chat Model3":{"ai_languageModel":[[{"node":"VISION VALIDATION & POSITIONING REPORT","type":"ai_languageModel","index":0}]]},"RAGTOOL":{"ai_tool":[[{"node":"VISION VALIDATION & POSITIONING REPORT","type":"ai_tool","index":0}]]},"OpenAI Chat Model2":{"ai_languageModel":[[{"node":"RAGTOOL","type":"ai_languageModel","index":0}]]},"Pinecone Vector Store5":{"ai_vectorStore":[[{"node":"RAGTOOL","type":"ai_vectorStore","index":0}]]},"Embeddings OpenAI6":{"ai_embedding":[[{"node":"Pinecone Vector Store5","type":"ai_embedding","index":0}]]},"Code5":{"main":[[{"node":"Markdown2","type":"main","index":0}]]},"Build Google Docs Request3":{"main":[[{"node":"Upload to Google Docs","type":"main","index":0}]]},"Wrap into chatInput1":{"main":[[{"node":"Legal Formation Output Document","type":"main","index":0}]]},"Prepare Upload Fields1":{"main":[[{"node":"Build Google Docs Request","type":"main","index":0}]]},"Markdown":{"main":[[{"node":"Prepare Upload Fields1","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"Legal Formation Output Document","type":"ai_languageModel","index":0}]]},"OpenAI Chat Model4":{"ai_languageModel":[[{"node":"Tone & Format Fetcher","type":"ai_languageModel","index":0}]]},"Pinecone Vector Store":{"ai_vectorStore":[[{"node":"Tone & Format Fetcher","type":"ai_vectorStore","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Pinecone Vector Store","type":"ai_embedding","index":0}]]},"Code":{"main":[[{"node":"Markdown","type":"main","index":0}]]},"Build Google Docs Request":{"main":[[{"node":"Upload to Google Docs1","type":"main","index":0}]]},"VISION VALIDATION & POSITIONING REPORT":{"main":[[{"node":"Code5","type":"main","index":0}]]},"Legal Formation Output Document":{"main":[[{"node":"Code","type":"main","index":0}]]},"Wrap into chatInput2":{"main":[[{"node":"Build Your Brand & Monetize","type":"main","index":0}]]},"Prepare Upload Fields2":{"main":[[{"node":"Build Google Docs Request1","type":"main","index":0}]]},"Markdown1":{"main":[[{"node":"Prepare Upload Fields2","type":"main","index":0}]]},"RAGTOOL2":{"ai_tool":[[{"node":"Build Your Brand & Monetize","type":"ai_tool","index":0}]]},"OpenAI Chat Model5":{"ai_languageModel":[[{"node":"RAGTOOL2","type":"ai_languageModel","index":0}]]},"Pinecone Vector Store1":{"ai_vectorStore":[[{"node":"RAGTOOL2","type":"ai_vectorStore","index":0}]]},"Embeddings OpenAI1":{"ai_embedding":[[{"node":"Pinecone Vector Store1","type":"ai_embedding","index":0}]]},"Code1":{"main":[[{"node":"Markdown1","type":"main","index":0}]]},"Build Google Docs Request1":{"main":[[{"node":"Upload to Google Docs2","type":"main","index":0}]]},"Build Your Brand & Monetize":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Wrap into chatInput3":{"main":[[{"node":"Launch, Test & Iterate","type":"main","index":0}]]},"Prepare Upload Fields3":{"main":[[{"node":"Build Google Docs Request2","type":"main","index":0}]]},"Markdown3":{"main":[[{"node":"Prepare Upload Fields3","type":"main","index":0}]]},"OpenAI Chat Model6":{"ai_languageModel":[[{"node":"Launch, Test & Iterate","type":"ai_languageModel","index":0}]]},"RAGTOOL3":{"ai_tool":[[{"node":"Launch, Test & Iterate","type":"ai_tool","index":0}]]},"OpenAI Chat Model7":{"ai_languageModel":[[{"node":"RAGTOOL3","type":"ai_languageModel","index":0}]]},"Pinecone Vector Store2":{"ai_vectorStore":[[{"node":"RAGTOOL3","type":"ai_vectorStore","index":0}]]},"Embeddings OpenAI2":{"ai_embedding":[[{"node":"Pinecone Vector Store2","type":"ai_embedding","index":0}]]},"Code2":{"main":[[{"node":"Markdown3","type":"main","index":0}]]},"Build Google Docs Request2":{"main":[[{"node":"Upload to Google Docs3","type":"main","index":0}]]},"Launch, Test & Iterate":{"main":[[{"node":"Code2","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"Get a record","type":"main","index":0}]]},"Webhook1":{"main":[[{"node":"Get a record3","type":"main","index":0}]]},"Webhook2":{"main":[[{"node":"Get a record1","type":"main","index":0}]]},"Webhook3":{"main":[[{"node":"Get a record2","type":"main","index":0}]]},"Get a record":{"main":[[{"node":"Wrap into chatInput","type":"main","index":0}]]},"Get a record1":{"main":[[{"node":"Wrap into chatInput2","type":"main","index":0}]]},"Get a record2":{"main":[[{"node":"Wrap into chatInput3","type":"main","index":0}]]},"Get a record3":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]},"Tone & Format Fetcher":{"ai_tool":[[{"node":"Legal Formation Output Document","type":"ai_tool","index":0}]]},"Upload to Google Docs1":{"main":[[{"node":"Airtable Logging1","type":"main","index":0}]]},"Upload to Google Docs2":{"main":[[{"node":"Airtable Logging2","type":"main","index":0}]]},"Upload to Google Docs3":{"main":[[{"node":"Airtable Logging3","type":"main","index":0}]]},"Document TOOL":{"ai_tool":[[{"node":"VISION VALIDATION & POSITIONING REPORT","type":"ai_tool","index":0}]]},"Document TOOL1":{"ai_tool":[[{"node":"Legal Formation Output Document","type":"ai_tool","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"Build Your Brand & Monetize","type":"ai_languageModel","index":0}]]},"Convert Word to Google Docs":{"main":[[{"node":"If1","type":"main","index":0}]]},"Read Google Docs":{"main":[[{"node":"Craft Text value of CV Data","type":"main","index":0}]]},"If1":{"main":[[{"node":"Read Google Docs","type":"main","index":0}]]},"Craft Text value of CV Data":{"main":[[{"node":"Combine All Data","type":"main","index":0}]]},"Switch1":{"main":[[{"node":"Download file","type":"main","index":0}],[{"node":"Convert Word to Google Docs","type":"main","index":0}],[{"node":"Convert Word to Google Docs","type":"main","index":0}]]},"Download file":{"main":[[{"node":"Extract from File5","type":"main","index":0}]]},"Extract from File5":{"main":[[{"node":"Combine All Data","type":"main","index":0}]]},"Upload file":{"main":[[{"node":"Switch1","type":"main","index":0}]]},"HTTP Request":{"main":[[{"node":"Upload file","type":"main","index":0}]]},"Combine All Data":{"main":[[{"node":"Wrap into chatInput1","type":"main","index":0}]]},"Document TOOL2":{"ai_tool":[[{"node":"Build Your Brand & Monetize","type":"ai_tool","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Webhook1":[{"json":{"headers":{"host":"n8n.irenictech.xyz","x-forwarded-scheme":"http","x-forwarded-proto":"http","x-forwarded-for":"34.228.168.207, 172.71.223.190","x-real-ip":"172.71.223.190","content-length":"33","content-type":"application/json","user-agent":"Mozilla/5.0 (compatible; AirtableScripting; +https://airtable.com/developers/scripting;)","accept-encoding":"gzip, br","accept":"*/*","cf-ray":"96bf96fe7b6c2058-IAD","cf-visitor":"{\"scheme\":\"https\"}","x-airtable-source":"appKmOMoTZqvMAXNT/wflnyDVNqPtUCvbg6","cdn-loop":"cloudflare; loops=1","cf-connecting-ip":"34.228.168.207","cf-ipcountry":"US"},"params":{},"query":{},"body":{"record_id":"recUESqqpNVtPWhyq"},"webhookUrl":"https://n8n.irenictech.xyz/webhook-test/50ebc245-be46-48d7-b10f-24e3a67d55f2","executionMode":"test"}}]},"versionId":"57924114-00d3-4521-b32e-36f15d5e649d","triggerCount":4,"tags":[]}